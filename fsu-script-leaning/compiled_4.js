var __extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}()
  , UTRivalsTierView = function(t) {
    function UTRivalsTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e.levelRewards = [],
        e
    }
    return __extends(UTRivalsTierView, t),
    UTRivalsTierView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!1),
        this.setInteractionState(!0)
    }
    ,
    UTRivalsTierView.prototype.setTierLevelRewardOptions = function(e) {
        this.levelRewards = e
    }
    ,
    UTRivalsTierView.prototype.setState = function(e) {
        e === TierViewState.NONE ? this.removeClass("in-progress surpassed obtained") : (this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
        this.toggleClass("surpassed", e === TierViewState.SURPASSED),
        this.toggleClass("obtained", e === TierViewState.OBTAINED))
    }
    ,
    UTRivalsTierView.prototype.setSubtitle = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTRivalsTierView.prototype.setLabel = function(e) {
        this.__label.textContent = e
    }
    ,
    UTRivalsTierView.prototype.setupPointsProgressLabel = function(e, t) {
        t < e && (e = t);
        var i = services.Localization;
        this.__choiceNum.textContent = i.localize("rivals.division.tier.progress", [i.localize("common.fraction", [e.toString(), t.toString()])]),
        DOMKit.addClass(this.__choiceNumContainer, "ut-tier-view--choices--visible")
    }
    ,
    UTRivalsTierView.prototype.setupRewardsCarousel = function(e) {
        0 !== this.levelRewards.length ? (0 < e && this._rewardsCarousel.setDefaultIndex(e),
        this._rewardsCarousel.setupCampaignRewards(this.levelRewards)) : DebugUtils.Assert(!1, "Tried to setup rewards for a level that has no reward data.")
    }
    ,
    UTRivalsTierView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id
            };
            e === this._rewardsInfoBtn && this._triggerActions(UTRivalsTierView.Event.REWARDS_INFO, o)
        }
    }
    ,
    UTRivalsTierView.Event = {
        REWARDS_INFO: "UTRivalsTierView.Event.REWARDS_INFO"
    },
    UTRivalsTierView
}(UTTierView);
UTRivalsTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-tier-view"),
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__subtitle = document.createElement("h2"),
        this.__subtitle.classList.add("ut-tier-view--subtitle"),
        t.appendChild(this.__subtitle),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTGameModesRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__subtitle = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTRivalsTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsProgressionHeaderView = function(e) {
    function UTRivalsProgressionHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTRivalsProgressionHeaderView, e),
    UTRivalsProgressionHeaderView.prototype.setSeasonalCrest = function(e, t) {
        var i = "";
        i = 0 === t ? "DIV_" + e + "_1.png" : "DIV_" + e + "_" + t + ".png",
        this._tierImage.src = "images/gameModes/rivals/seasonal/" + i
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setDivisionCrest = function(e) {
        var t = "";
        JSUtils.isValid(e) ? 0 === e ? t = "division_crest_master.png" : e && 0 < e && e < 11 && (t = "division_crest_" + e + ".png") : t = "division_crest_unranked.png",
        this._tierImage.src = "images/gameModes/rivals/division/crests/" + t
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setSkillRatingRank = function(e, t) {
        this.__subtitle.innerHTML = "";
        var i = services.Localization
          , o = i.localize("rivals.label.skillRating")
          , n = i.localize("rivals.label.rank")
          , r = document.createElement("div");
        r.textContent = o,
        r.className = "label";
        var a = document.createElement("span");
        a.textContent = 0 < e ? e.toString() : i.localize("rivals.label.skillRating.unrated"),
        a.className = "value",
        r.append(a);
        var s = document.createElement("div");
        s.textContent = n,
        s.className = "label";
        var l = document.createElement("span");
        l.textContent = 0 < t ? t.toString() : i.localize("rivals.label.rank.unranked"),
        l.className = "value",
        s.append(l),
        this.__subtitle.append(r, s)
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setWeeklyRewardsTitle = function(e) {
        this.__weeklyRewardsTitle.textContent = e
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setUpgradedRewardsTitle = function(e) {
        this.__upgradedRewardsTitle.textContent = e
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleWeeklyRewardsTitle = function(e) {
        this.__weeklyRewardsTitle.style.display = e ? "" : "none"
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleUpgradedRewardsTitle = function(e) {
        this.__upgradedRewardsTitle.style.display = e ? "" : "none"
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setWeeklyRewardsComplete = function() {
        DOMKit.addClass(this.__weeklyRewardsTitle, "complete")
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setUpgradedRewardsComplete = function() {
        DOMKit.addClass(this.__upgradedRewardsTitle, "complete")
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setMatchesRemainingLabel = function(e) {
        this.__matchesRemainingLabel.textContent = e
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleMatchesRemainingLabel = function(e) {
        this.__matchesRemainingLabel.style.display = e ? "" : "none"
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleDivisionElements = function(e) {
        this.toggleMatchesRemainingLabel(e),
        this.toggleUpgradedRewardsTitle(e),
        this.toggleWeeklyRewardsTitle(e)
    }
    ,
    UTRivalsProgressionHeaderView
}(UTProgressionHeaderView);
UTRivalsProgressionHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-progression-header-view"),
        e.classList.add("ut-progression-header-view");
        var t = document.createElement("div");
        t.classList.add("ut-progression-header-view--body");
        var i = document.createElement("div");
        i.classList.add("ut-progression-header-view--image"),
        this._tierImage = new EAImageView,
        i.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        i.appendChild(this.__tierValue),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-progression-header-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-progression-header-view--title"),
        o.appendChild(this.__title),
        this.__subtitle = document.createElement("div"),
        this.__subtitle.classList.add("ut-progression-header-view--subtitle"),
        o.appendChild(this.__subtitle),
        this.__countdown = document.createElement("p"),
        this.__countdown.classList.add("ut-progression-header-view--countdown"),
        o.appendChild(this.__countdown),
        this.__weeklyRewardsTitle = document.createElement("p"),
        this.__weeklyRewardsTitle.classList.add("ut-progression-header-view--rewards"),
        o.appendChild(this.__weeklyRewardsTitle),
        this.__upgradedRewardsTitle = document.createElement("p"),
        this.__upgradedRewardsTitle.classList.add("ut-progression-header-view--rewards"),
        o.appendChild(this.__upgradedRewardsTitle),
        this.__matchesRemainingLabel = document.createElement("p"),
        this.__matchesRemainingLabel.classList.add("ut-progression-header-view--matches-remaining"),
        o.appendChild(this.__matchesRemainingLabel),
        t.appendChild(o),
        e.appendChild(t),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        this._infoBtn.getRootElement().classList.add("ut-progression-header-view--button--info"),
        e.appendChild(this._infoBtn.getRootElement()),
        this.__progressBarContainer = document.createElement("div"),
        this.__progressBarContainer.classList.add("ut-rivals-progression-header-view--progress-container"),
        this._progressBar = new UTProgressBarView,
        this.__progressBarContainer.appendChild(this._progressBar.getRootElement()),
        e.appendChild(this.__progressBarContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsProgressionHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__title = null,
    this.__subtitle = null,
    this.__countdown = null,
    this.__weeklyRewardsTitle = null,
    this.__upgradedRewardsTitle = null,
    this.__matchesRemainingLabel = null,
    this._infoBtn.destroy(),
    this.__progressBarContainer = null,
    this._progressBar.destroy()
}
,
UTRivalsProgressionHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsTierProgressBarView = function(e) {
    function UTRivalsTierProgressBarView() {
        return e.call(this) || this
    }
    return __extends(UTRivalsTierProgressBarView, e),
    UTRivalsTierProgressBarView.prototype.setMilestoneCrest = function(e, t) {
        var i = "DIV_" + e + "_" + t + ".png";
        this._tierImage.src = "images/gameModes/rivals/seasonal/" + i
    }
    ,
    UTRivalsTierProgressBarView.prototype.setRankCrest = function(e, t) {
        var i = "";
        i = 0 === e ? "crest_rank0_1.png" : "crest_rank" + e + "_" + t + ".png",
        this._tierImage.src = "images/gameModes/rivals/division/ranks/" + i
    }
    ,
    UTRivalsTierProgressBarView.prototype.setDivisionCrest = function(e) {
        var t = "";
        t = 0 === e ? "division_crest_0.png" : "division_crest_" + e + ".png",
        this._tierImage.src = "images/gameModes/rivals/division/crests/" + t
    }
    ,
    UTRivalsTierProgressBarView.prototype.setThresholdFlag = function(e, t) {
        var i = "notch threshold";
        t && (i += " filled"),
        this.__tierValue.className = e ? i : ""
    }
    ,
    UTRivalsTierProgressBarView.prototype.addProgressionNotches = function(e, t, i) {
        var o = this;
        this.notches = [];
        for (var n = 0, r = 0; r < e; r++) {
            var a = (r + 1) / (e + 1) * 100
              , s = document.createElement("div")
              , l = "notch";
            r <= t && (l += " filled",
            t === r && (n = a)),
            i.includes(r) && (l += " threshold"),
            s.className = l,
            this.direction === TierProgressBarDirection.VERTICAL ? s.style.top = a + "%" : s.style.left = a + "%",
            this.notches.push(s)
        }
        this.notches.map(function(e) {
            return o.__notchesContainer.appendChild(e)
        }),
        this.setProgress(n)
    }
    ,
    UTRivalsTierProgressBarView.prototype.toggleWinStreakFlag = function(e) {
        1 < e && (this.setProgressMarker(services.Localization.localize("rivals.winstreak.multiplier", [e.toString()])),
        this.addProgressMarkerClass("streak"))
    }
    ,
    UTRivalsTierProgressBarView
}(UTGameModesTierProgressBarView);
UTRivalsTierProgressBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-progress-bar--section"),
        e.classList.add("ut-rivals-tier-progress-bar-view"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-tier-progress-bar--fill"),
        this.__progressLabel = document.createElement("span"),
        this.__fill.appendChild(this.__progressLabel),
        e.appendChild(this.__fill);
        var t = document.createElement("div");
        t.classList.add("ut-rivals-tier-progress-bar-view--image"),
        this._tierImage = new EAImageView,
        t.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        t.appendChild(this.__tierValue),
        e.appendChild(t),
        this.__notchesContainer = document.createElement("div"),
        this.__notchesContainer.classList.add("ut-rivals-tier-progress-bar-view--notches"),
        e.appendChild(this.__notchesContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsTierProgressBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null,
    this.__progressLabel = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__notchesContainer = null
}
,
UTRivalsTierProgressBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsView = function(i) {
    function UTRivalsView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.activeProgressBar = null,
        t.levels = [],
        t.progressBars = [],
        t
    }
    return __extends(UTRivalsView, i),
    UTRivalsView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTRivalsView.prototype.clearViews = function() {
        this.levels.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.levels = [],
        this.progressBars = [],
        this.activeProgressBar = null
    }
    ,
    UTRivalsView.prototype.render = function(e) {
        this.clearViews(),
        DOMKit.removeClass(this.__progressView, "horizontal vertical"),
        DOMKit.addClass(this.__progressView, isPhone() ? "vertical" : "horizontal"),
        this.renderDivisionView(e),
        this.addClass("division")
    }
    ,
    UTRivalsView.prototype.renderDivisionView = function(t) {
        var e, i, o, n;
        this._header.toggleInfo(!1),
        0 === t.user.divisionId ? (this._header.toggleProgressBar(!1),
        this._header.setTitle(this.loc.localize("rivals.masters.progress.title")),
        this._header.setSkillRatingRank(null !== (e = t.user.elo) && void 0 !== e ? e : 0, null !== (i = t.user.rank) && void 0 !== i ? i : 0)) : this._header.setTitle(this.loc.localize("rivals.division.progress.title", [t.user.divisionId.toString(), (null !== (n = null === (o = t.getUserCurrentRank()) || void 0 === o ? void 0 : o.rank) && void 0 !== n ? n : "").toString()])),
        this._header.setDivisionCrest(t.user.divisionId),
        this._header.setCountdown(this.loc.localize("rivals.division.rewards.countdown", [this.loc.localizeTimeRemaining(t.getDivisionTimeRemaining())])),
        this._header.toggleDivisionElements(!0),
        this._header.setWeeklyRewardsTitle(this.loc.localize("rivals.division.header.weeklyrewards.title")),
        this._header.setUpgradedRewardsTitle(this.loc.localize("rivals.division.header.upgradedrewards.title")),
        t.user.matchPoints >= t.season.weeklyTier2Threshold ? (this._header.setUpgradedRewardsComplete(),
        this._header.setWeeklyRewardsComplete(),
        this._header.toggleMatchesRemainingLabel(!1)) : t.user.matchPoints < t.season.weeklyTier2Threshold && t.user.matchPoints >= t.season.weeklyTier1Threshold ? (this._header.setWeeklyRewardsComplete(),
        this._header.setMatchesRemainingLabel(this.loc.localize("rivals.division.header.remainingpoints.label", [(t.season.weeklyTier2Threshold - t.user.matchPoints).toString()]))) : this._header.setMatchesRemainingLabel(this.loc.localize("rivals.division.header.remainingpoints.label", [(t.season.weeklyTier1Threshold - t.user.matchPoints).toString()])),
        this._header.toggleProgressBar(!1);
        var r = t.division.stages.filter(function(e) {
            return e.type === RivalsStageType.REWARD
        })
          , a = r.length
          , s = t.division.stages.length - a
          , l = 0
          , c = 0
          , d = []
          , u = t.division.stages.length - 1;
        a <= 2 && DOMKit.addClass(this.__progressView, "small");
        for (var p = t.getWinStreak(), h = 0; h < t.division.stages.length; h++) {
            var _ = t.division.stages[h];
            if (_.type === RivalsStageType.REWARD) {
                var m = t.getUserCurrentRank();
                this.progressBars.push(this.generateDivisionTierProgress(t.user, _, m, a, l, p, d, c)),
                c = _.id,
                a--,
                s -= l,
                l = 0
            } else
                h === u && _.type === RivalsStageType.PROGRESSION && 0 < s ? this.progressBars.push(this.generateLastDivisionTierProgress(t.user, s, _.id, p, d, c)) : (_.demotionThreshold && d.push(l),
                l++)
        }
        var T = r.reverse().find(function(e) {
            return t.user.stageId >= e.id
        })
          , g = t.getUserCurrentRank();
        T && T.prizeTiers[0] && T.prizeTiers[1] && (this.levels.push(this.generateDivisionWeeklyRewardTile(T.prizeTiers[0], t.user.matchPoints, g, t.user.weeklyTier, t.season)),
        this.levels.push(this.generateDivisionUpgradedRewardTile(T.prizeTiers[1], t.user.matchPoints, g, t.user.weeklyTier, t.season))),
        this.layoutSubviews(),
        this.levels.forEach(function(e, t) {
            e instanceof UTRivalsTierView && e.setupRewardsCarousel(0)
        }, this),
        this.scrollToActiveTier()
    }
    ,
    UTRivalsView.prototype.generateDivisionTierProgress = function(e, t, i, o, n, r, a, s) {
        var l = new UTRivalsTierProgressBarView;
        if (l.init(),
        l.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        i)
            if (i.rank < t.rank || i.rank === t.rank && i.id === t.id)
                l.setTierState("complete"),
                l.setProgress(100),
                l.setThresholdFlag(t.demotionThreshold, !0),
                0 < n && l.addProgressionNotches(n, n - 1, a);
            else if (i.rank - 1 === t.rank) {
                var c = e.stageId - s;
                l.addProgressionNotches(n, c - 1, a),
                l.toggleWinStreakFlag(r),
                l.setTierState("inprogress"),
                l.setThresholdFlag(t.demotionThreshold, !1)
            } else
                0 < n && l.addProgressionNotches(n, -1, a);
        else
            0 < n && l.addProgressionNotches(n, -1, a);
        return 5 <= n && l.addClass("extended"),
        l.setRankCrest(e.divisionId, o),
        this.addSubview(l, this.__progressView),
        l
    }
    ,
    UTRivalsView.prototype.generateDivisionWeeklyRewardTile = function(e, t, i, o, n) {
        var r = new UTRivalsTierView;
        r.init();
        var a = TierViewState.NONE;
        return a = 0 === o ? TierViewState.IN_PROGRESS : TierViewState.OBTAINED,
        r.setSubtitle(this.loc.localize("rivals.division.tier.weekly.title")),
        a !== TierViewState.OBTAINED ? (r.setLabel(this.loc.localize("rivals.division.tier.weekly.label", [(n.weeklyTier1Threshold - t).toString()])),
        r.setupPointsProgressLabel(t, n.weeklyTier1Threshold)) : a === TierViewState.OBTAINED && r.setLabel(this.loc.localize("rivals.division.tier.weekly.qualified.label")),
        this.generateDivisionRewardTile(e, i, r, a, "gamemodeshub.rivals.weeklyrewards.title")
    }
    ,
    UTRivalsView.prototype.generateDivisionUpgradedRewardTile = function(e, t, i, o, n) {
        var r = new UTRivalsTierView;
        r.init();
        var a = TierViewState.NONE;
        return 1 === o ? a = TierViewState.IN_PROGRESS : 2 === o && (a = TierViewState.OBTAINED),
        r.setSubtitle(this.loc.localize("rivals.division.tier.upgraded.title")),
        a !== TierViewState.OBTAINED ? (r.setLabel(this.loc.localize("rivals.division.tier.upgraded.label", [(n.weeklyTier2Threshold - t).toString()])),
        r.setupPointsProgressLabel(t, n.weeklyTier2Threshold)) : a === TierViewState.OBTAINED && r.setLabel(this.loc.localize("rivals.division.tier.upgraded.qualified.label")),
        this.generateDivisionRewardTile(e, i, r, a, "gamemodeshub.rivals.upgradedrewards.title")
    }
    ,
    UTRivalsView.prototype.generateDivisionRewardTile = function(e, t, i, o, n) {
        var r = this;
        i.setStyle(isPhone() ? "vertical" : "horizontal"),
        i.setState(o),
        i.addClass("division"),
        t && i.setTitle(this.loc.localize("gamemodes.common.rank", [t.rank.toString()]));
        var a = e.rewardSet;
        return i.setTierLevelRewardOptions(a),
        i.toggleRewardsInfoButton(1 < a.length),
        i.addTarget(this, function() {
            return r.onRewardInfoSelected(i, UTRivalsTierView.Event.REWARDS_INFO, {
                id: e.subLevel,
                rewardSet: a,
                popupTitleId: n
            })
        }, UTRivalsTierView.Event.REWARDS_INFO),
        this.addSubview(i, this.__tierView),
        i
    }
    ,
    UTRivalsView.prototype.generateLastDivisionTierProgress = function(e, t, i, o, n, r) {
        var a = new UTRivalsTierProgressBarView
          , s = e.divisionId
          , l = e.stageId;
        if (a.init(),
        a.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        0 < t)
            if (i - t <= l) {
                var c = e.stageId - r;
                a.setTierState("inprogress"),
                a.addProgressionNotches(t, c - 1, n),
                a.toggleWinStreakFlag(o)
            } else
                a.addProgressionNotches(t, -1, n);
        return 5 <= t && a.addClass("extended"),
        a.setDivisionCrest(s - 1),
        this.addSubview(a, this.__progressView),
        a
    }
    ,
    UTRivalsView.prototype.scrollToActiveTier = function() {
        this.activeProgressBar && this._header && (isPhone() ? this.getRootElement().scrollTop = this.activeProgressBar.getRootElement().offsetTop + this._header.getRootElement().clientHeight - 32 : this.__container.scrollLeft = this.activeProgressBar.getRootElement().offsetLeft),
        this.setInteractionState(!0)
    }
    ,
    UTRivalsView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTRivalsTierView.Event.REWARDS_INFO, i)
    }
    ,
    UTRivalsView
}(EATargetActionView);
UTRivalsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-view"),
        this._header = new UTRivalsProgressionHeaderView,
        this._header.getRootElement().classList.add("ut-rivals-view--header"),
        e.appendChild(this._header.getRootElement()),
        this.__container = document.createElement("div"),
        this.__container.classList.add("ut-rivals-view--details");
        var t = document.createElement("div");
        t.classList.add("ut-rivals-view--event"),
        this.__progressView = document.createElement("div"),
        this.__progressView.classList.add("ut-tier-progress-bar"),
        t.appendChild(this.__progressView),
        this.__tierView = document.createElement("div"),
        this.__tierView.classList.add("ut-rivals-view--tiers"),
        t.appendChild(this.__tierView),
        this.__container.appendChild(t),
        e.appendChild(this.__container),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._header.destroy(),
    this.__container = null,
    this.__progressView = null,
    this.__tierView = null
}
,
UTRivalsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsViewController = function(t) {
    function UTRivalsViewController() {
        var e = t.call(this) || this;
        return e.vm = new UTRivalsViewModel(services.Rivals),
        e
    }
    return __extends(UTRivalsViewController, t),
    UTRivalsViewController.prototype._getViewInstanceFromData = function() {
        return new UTRivalsView({
            localization: services.Localization
        })
    }
    ,
    UTRivalsViewController.prototype._getTelemetryId = function() {
        return "Rivals"
    }
    ,
    UTRivalsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.rivals")
    }
    ,
    UTRivalsViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        this.getView();
        this.requestEventData(),
        TelemetryManager.trackPage(TelemetryManager.Sections.RIVALS, "Rivals Main")
    }
    ,
    UTRivalsViewController.prototype.requestEventData = function() {
        var n = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestEvent().observe(this, function(e, t) {
            var i;
            e.unobserve(n);
            var o = n.getView();
            t.success && JSUtils.isObject(t.response) && t.response.event ? (o.render(t.response.event),
            o.addTarget(n, n.onSelectRewardInfo, UTRivalsTierView.Event.REWARDS_INFO)) : (services.Notification.queue([services.Localization.localize("rivals.loaderror"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (i = n.getNavigationController()) || void 0 === i || i.popViewController()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTRivalsViewController.prototype.onSelectRewardInfo = function(e, t, i) {
        this.vm && (i.rewardSet ? this.triggerConsolidatedRewardsPopup(i.rewardSet, services.Localization.localize(i.popupTitleId || "gamemodeshub.rivals.rewards.title"), !1) : services.Notification.queue([services.Localization.localize("notification.rivals.rewardsInfoFailed"), UINotificationType.NEGATIVE]))
    }
    ,
    UTRivalsViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i) {
        var o = new UTRewardSelectionChoiceViewController(e);
        o.setTitleText(t),
        o.setClaimableState(i),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTRivalsViewController
}(EAViewController)
  , UTChampionsTierView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTChampionsTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e.levelRewards = [],
        e
    }
    return __extends(UTChampionsTierView, t),
    UTChampionsTierView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!1),
        this.setInteractionState(!0)
    }
    ,
    UTChampionsTierView.prototype.setTierLevelRewardOptions = function(e) {
        this.levelRewards = e
    }
    ,
    UTChampionsTierView.prototype.setState = function(e) {
        e === TierViewState.NONE ? this.removeClass("in-progress surpassed obtained") : (this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
        this.toggleClass("surpassed", e === TierViewState.SURPASSED),
        this.toggleClass("obtained", e === TierViewState.OBTAINED))
    }
    ,
    UTChampionsTierView.prototype.setPointsRequired = function(e) {
        var t = services.Localization;
        this.__label.textContent = 0 < e ? t.localize("champions.tier.pointsNeeded", [t.localizeNumber(e)]) : t.localize("champions.tier.requirements-met")
    }
    ,
    UTChampionsTierView.prototype.setupRewardsCarousel = function(e) {
        0 !== this.levelRewards.length ? (0 < e && this._rewardsCarousel.setDefaultIndex(e),
        this._rewardsCarousel.setupRewards(this.levelRewards)) : DebugUtils.Assert(!1, "Tried to setup rewards for a level that has no reward data.")
    }
    ,
    UTChampionsTierView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id
            };
            e === this._rewardsInfoBtn && this._triggerActions(UTChampionsTierView.Event.REWARDS_INFO, o)
        }
    }
    ,
    UTChampionsTierView.Event = {
        REWARDS_INFO: "UTChampionsTierView.Event.REWARDS_INFO"
    },
    UTChampionsTierView
}(UTTierView));
UTTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTGameModesRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsProgressionHeaderView = function(e) {
    function UTChampionsProgressionHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTChampionsProgressionHeaderView, e),
    UTChampionsProgressionHeaderView.prototype.init = function() {
        DOMKit.toggleDisplayStyle(this.__entries, !1),
        DOMKit.toggleDisplayStyle(this.__winloss, !1),
        DOMKit.toggleDisplayStyle(this.__currentPoints, !1)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setProgressSecondLabel = function(e) {
        var t = document.createElement("span");
        t.className = "ut-champions-progression-header-view--required",
        t.textContent = e,
        this._progressBar.getRootElement().appendChild(t)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setTierPoints = function(e, t, i) {
        if (i <= e)
            this.setProgress(100);
        else {
            var o = Math.max(e - t, 0)
              , n = Math.max(i - t, 1);
            this.setProgress(o / n * 100)
        }
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setWinLossMeta = function(e, t) {
        var i = services.Localization
          , o = i.localize("champions.label.wins")
          , n = i.localize("champions.value.points", [e.toString()])
          , r = i.localize("champions.label.losses")
          , a = i.localize("champions.value.points", [t.toString()])
          , s = this.createLabelDiv(o)
          , l = this.createValueSpan(n);
        s.append(l);
        var c = this.createLabelDiv(r)
          , d = this.createValueSpan(a);
        c.append(d),
        this.__winloss.append(s, c),
        DOMKit.toggleDisplayStyle(this.__winloss, !0)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setEntriesUsed = function(e, t) {
        var i = services.Localization
          , o = i.localize("champions.label.gamesplayed")
          , n = i.localize("champions.fraction.gamesplayed", [e.toString(), t.toString()])
          , r = this.createLabelDiv(o)
          , a = this.createValueSpan(n);
        r.append(a),
        this.__entries.append(r),
        DOMKit.toggleDisplayStyle(this.__winloss, !0)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setQualificationsMeta = function(e, t) {
        var i = services.Localization.localize("champions.label.qualificationpoints")
          , o = t.toString()
          , n = this.createLabelDiv(i)
          , r = this.createValueSpan(e + "/" + o);
        n.append(r),
        this.__qualifications.append(n),
        DOMKit.toggleDisplayStyle(this.__qualifications, !0)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setCurrentPointsLabel = function(e) {
        var t = services.Localization
          , i = t.localize("champions.label.currentpoints")
          , o = t.localize("gamemodes.common.points", [e.toString()])
          , n = this.createLabelDiv(i)
          , r = this.createValueSpan(o);
        n.append(r),
        this.__currentPoints.append(n),
        DOMKit.toggleDisplayStyle(this.__currentPoints, !0)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.createLabelDiv = function(e) {
        var t = document.createElement("div");
        return t.textContent = e,
        t.className = "label",
        t
    }
    ,
    UTChampionsProgressionHeaderView.prototype.createValueSpan = function(e) {
        var t = document.createElement("span");
        return t.textContent = e,
        t.className = "value",
        t
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setStageAssets = function(e, t) {
        void 0 === t && (t = 0);
        var i = "notfound.png";
        0 < e && 0 < t ? i = "crest_stage" + e + "_" + t + ".png" : 0 < e && (i = "crest_stage" + e + ".png"),
        this._tierImage.src = "images/gameModes/champions/" + i
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setQualificationImage = function() {
        this._tierImage.src = "images/gameModes/champions/weekendLeagueLogo.png"
    }
    ,
    UTChampionsProgressionHeaderView
}(UTProgressionHeaderView);
UTChampionsProgressionHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-champions-progression-header-view"),
        e.classList.add("ut-progression-header-view");
        var t = document.createElement("div");
        t.classList.add("ut-progression-header-view--body");
        var i = document.createElement("div");
        i.classList.add("ut-progression-header-view--image"),
        this._tierImage = new EAImageView,
        i.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        i.appendChild(this.__tierValue),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-progression-header-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-progression-header-view--title"),
        o.appendChild(this.__title),
        this.__subtitle = document.createElement("p"),
        this.__subtitle.classList.add("ut-progression-header-view--subtitle"),
        o.appendChild(this.__subtitle),
        this.__countdown = document.createElement("p"),
        this.__countdown.classList.add("ut-progression-header-view--countdown"),
        o.appendChild(this.__countdown),
        this.__entries = document.createElement("div"),
        this.__entries.classList.add("ut-champions-progression-header-view--entries"),
        o.appendChild(this.__entries),
        this.__winloss = document.createElement("div"),
        this.__winloss.classList.add("ut-champions-progression-header-view--winloss"),
        o.appendChild(this.__winloss),
        this.__qualifications = document.createElement("div"),
        this.__qualifications.classList.add("ut-champions-progression-header-view--qualifications"),
        o.appendChild(this.__qualifications),
        this.__currentPoints = document.createElement("div"),
        this.__currentPoints.classList.add("ut-champions-progression-header-view--currentPoints"),
        o.appendChild(this.__currentPoints),
        t.appendChild(o),
        e.appendChild(t),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        this._infoBtn.getRootElement().classList.add("ut-progression-header-view--button--info"),
        e.appendChild(this._infoBtn.getRootElement()),
        this.__progressBarContainer = document.createElement("div"),
        this.__progressBarContainer.classList.add("ut-champions-progression-header-view--progress-container"),
        this._progressBar = new UTProgressBarView,
        this.__progressBarContainer.appendChild(this._progressBar.getRootElement()),
        e.appendChild(this.__progressBarContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChampionsProgressionHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__title = null,
    this.__subtitle = null,
    this.__countdown = null,
    this.__entries = null,
    this.__winloss = null,
    this.__qualifications = null,
    this.__currentPoints = null,
    this._infoBtn.destroy(),
    this.__progressBarContainer = null,
    this._progressBar.destroy()
}
,
UTChampionsProgressionHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsTierProgressBarView = function(e) {
    function UTChampionsTierProgressBarView() {
        return e.call(this) || this
    }
    return __extends(UTChampionsTierProgressBarView, e),
    UTChampionsTierProgressBarView.prototype.setStageAssets = function(e, t) {
        void 0 === t && (t = 0);
        var i = "notfound.png";
        0 < e && 0 < t ? 1 === e && 5 < t || (i = "crest_stage" + e + "_" + t + ".png") : 0 < e && (i = "crest_stage" + e + ".png"),
        this._tierImage.src = "images/gameModes/champions/" + i
    }
    ,
    UTChampionsTierProgressBarView.prototype.setProgressLabel = function(e) {
        this.__tierValue.textContent = e
    }
    ,
    UTChampionsTierProgressBarView
}(UTGameModesTierProgressBarView);
UTChampionsTierProgressBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-progress-bar--section"),
        e.classList.add("ut-champions-tier-progress-bar-view"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-tier-progress-bar--fill"),
        this.__progressLabel = document.createElement("span"),
        this.__fill.appendChild(this.__progressLabel),
        e.appendChild(this.__fill);
        var t = document.createElement("div");
        t.classList.add("ut-champions-tier-progress-bar-view--image"),
        this._tierImage = new EAImageView,
        t.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        t.appendChild(this.__tierValue),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChampionsTierProgressBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null,
    this.__progressLabel = null,
    this._tierImage.destroy(),
    this.__tierValue = null
}
,
UTChampionsTierProgressBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsView = function(i) {
    function UTChampionsView(e) {
        var t = i.call(this) || this;
        return t.activeProgressBar = null,
        t.levels = [],
        t.loc = e.localization,
        t.progressBars = [],
        t
    }
    return __extends(UTChampionsView, i),
    UTChampionsView.prototype.dealloc = function() {
        this.clearViews(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTChampionsView.prototype.clearViews = function() {
        this.levels.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.levels = [],
        this.progressBars = [],
        this.activeProgressBar = null
    }
    ,
    UTChampionsView.prototype.scrollToActiveTier = function() {
        this.activeProgressBar && this._header && (isPhone() ? this.getRootElement().scrollTop = this.activeProgressBar.getRootElement().offsetTop + this._header.getRootElement().clientHeight - 32 : this.__container.scrollLeft = this.activeProgressBar.getRootElement().offsetLeft),
        this.setInteractionState(!0)
    }
    ,
    UTChampionsView.prototype.generateEventTierProgress = function(e, t, i, o) {
        var n = new UTChampionsTierProgressBarView;
        if (n.init(),
        n.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        n.setStageAssets(e.stageLevel, t),
        0 < i)
            if (n.setProgress(i),
            100 === i)
                n.setTierState("complete");
            else {
                var r = this.loc.localize("gamemodes.common.points", [o.toString()]);
                n.setTierState("inprogress"),
                n.setProgressMarker(r)
            }
        return this.addSubview(n, this.__progressView),
        !this.activeProgressBar && 0 < i && i < 100 && (this.activeProgressBar = n),
        n
    }
    ,
    UTChampionsView.prototype.generateEventTierTile = function(e, t) {
        var i = new UTChampionsTierView
          , o = TierViewState.NONE;
        return t > e.tierEnd ? o = TierViewState.SURPASSED : t === e.tierEnd ? o = TierViewState.OBTAINED : t >= e.tierStart && t < e.tierEnd && (o = TierViewState.IN_PROGRESS),
        i.init(),
        i.setId(e.rewardSetId),
        i.setStyle(isPhone() ? "vertical" : "horizontal"),
        i.setTierLevelRewardOptions(e.eventRewardSet.rewards),
        i.setTitle(this.loc.localize("champions.tier.title", [e.tierLevel.toString()])),
        i.setPointsRequired(e.tierStart - t),
        i.setState(o),
        i.toggleRewardsInfoButton(o !== TierViewState.SURPASSED && 1 < e.eventRewardSet.count),
        i.addTarget(this, this.onRewardInfoSelected, UTChampionsTierView.Event.REWARDS_INFO),
        this.addSubview(i, this.__tierView),
        i
    }
    ,
    UTChampionsView.prototype.setEvent = function(t, e) {
        var i, o, n, r, a, s, l = this;
        this.clearViews(),
        this._header.toggleInfo(!1),
        DOMKit.removeClass(this.__progressView, "horizontal vertical"),
        DOMKit.addClass(this.__progressView, isPhone() ? "vertical" : "horizontal");
        var c = t.getFirstStage()
          , d = t.getCurrentStage()
          , u = null !== (i = null == e ? void 0 : e.user.championsPoints) && void 0 !== i ? i : 0
          , p = null !== (o = null == e ? void 0 : e.season.championsPointsThreshold) && void 0 !== o ? o : 0
          , h = null !== (n = null == e ? void 0 : e.getSeasonTimeRemaining()) && void 0 !== n ? n : 0;
        if (this._header.setCountdown(this.loc.localizeTimeRemaining(h)),
        !d && c)
            this._header.setQualificationImage(),
            this._header.setTitle(this.loc.localize("champions.qualification.title")),
            this._header.setSubtitle(this.loc.localize("champions.qualification.subtitle")),
            this._header.setTierPoints(u, 0, p),
            this._header.setProgressLabel(this.loc.localize("gamemodes.common.points", [u.toString()])),
            this._header.setProgressSecondLabel(this.loc.localize("gamemodes.common.points", [p.toString()])),
            this._header.setEntriesUsed(0, c.maxGames);
        else if (d && t.hasProgress) {
            this._header.setStageAssets(d.stageLevel),
            this._header.setTitle(this.loc.localize("champions.stage" + d.stageLevel + ".title")),
            this._header.setWinLossMeta(d.pointsPerWin, d.pointsPerLoss),
            this._header.setEntriesUsed(t.gamesPlayed, d.maxGames),
            this._header.setCurrentPointsLabel(t.currentPoints);
            var _ = d.getCurrentTier(t.currentPoints)
              , m = null !== (r = null == _ ? void 0 : _.tierStart) && void 0 !== r ? r : 0
              , T = _ ? _.tierEnd : null !== (s = null === (a = d.getFirstTier()) || void 0 === a ? void 0 : a.tierStart) && void 0 !== s ? s : 0;
            this._header.setProgressLabel(this.loc.localize("gamemodes.common.points", [t.currentPoints.toString()])),
            this._header.setProgressSecondLabel(this.loc.localize("gamemodes.common.points", [T.toString()])),
            this._header.setTierPoints(t.currentPoints, m, T)
        } else
            this._header.setQualificationImage(),
            this._header.setTitle(this.loc.localize("champions.qualification.title")),
            this._header.setSubtitle(this.loc.localize("champions.qualification.subtitle")),
            this._header.setQualificationsMeta(u, p);
        if (d || c || t.stages[0]) {
            var g = d || c || t.stages[0];
            null == g || g.prizeTiers.forEach(function(e) {
                l.progressBars.push(l.generateEventTierProgress(g, e.tierLevel, g.progressTowardTier(e.tierLevel, t.currentPoints), t.currentPoints)),
                l.levels.push(l.generateEventTierTile(e, t.currentPoints))
            }, this)
        }
        this.layoutSubviews(),
        this.levels.forEach(function(e) {
            return e.setupRewardsCarousel(0)
        }),
        this.scrollToActiveTier()
    }
    ,
    UTChampionsView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTChampionsTierView.Event.REWARDS_INFO, i)
    }
    ,
    UTChampionsView
}(EATargetActionView);
UTChampionsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-champions-view"),
        this._header = new UTChampionsProgressionHeaderView,
        this._header.getRootElement().classList.add("ut-champions-view--header"),
        e.appendChild(this._header.getRootElement()),
        this.__container = document.createElement("div"),
        this.__container.classList.add("ut-champions-view--details");
        var t = document.createElement("div");
        t.classList.add("ut-champions-view--event"),
        this.__progressView = document.createElement("div"),
        this.__progressView.classList.add("ut-tier-progress-bar"),
        t.appendChild(this.__progressView),
        this.__tierView = document.createElement("div"),
        this.__tierView.classList.add("ut-champions-view--tiers"),
        t.appendChild(this.__tierView),
        this.__container.appendChild(t),
        e.appendChild(this.__container),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChampionsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._header.destroy(),
    this.__container = null,
    this.__progressView = null,
    this.__tierView = null
}
,
UTChampionsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsViewController = function(t) {
    function UTChampionsViewController() {
        var e = t.call(this) || this;
        return e.vm = new UTChampionsViewModel(services.Champions),
        e
    }
    return __extends(UTChampionsViewController, t),
    UTChampionsViewController.prototype._getViewInstanceFromData = function() {
        return new UTChampionsView({
            localization: services.Localization
        })
    }
    ,
    UTChampionsViewController.prototype._getTelemetryId = function() {
        return "Champions"
    }
    ,
    UTChampionsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.champions")
    }
    ,
    UTChampionsViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.requestEventData(),
        TelemetryManager.trackPage(TelemetryManager.Sections.CHAMPIONS, "Champions Main")
    }
    ,
    UTChampionsViewController.prototype.requestEventData = function() {
        var r = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestEvent().observe(this, function(e, t) {
            var i;
            if (e.unobserve(r),
            t.success && JSUtils.isObject(t.response) && t.response.event) {
                var n = t.response.event;
                services.Rivals.getEvent().observe(r, function(e, t) {
                    e.unobserve(r);
                    var i = r.getView()
                      , o = null;
                    t.success && JSUtils.isObject(t.response) && (o = t.response.event),
                    i.setEvent(n, o),
                    i.addTarget(r, r.onSelectRewardInfo, UTChampionsTierView.Event.REWARDS_INFO),
                    gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
                })
            } else
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue([services.Localization.localize("champions.loaderror"), UINotificationType.NEGATIVE]),
                null === (i = r.getNavigationController()) || void 0 === i || i.popViewController())
        })
    }
    ,
    UTChampionsViewController.prototype.onSelectRewardInfo = function(e, t, i) {
        var o, n, r = services.Localization, a = null === (n = null === (o = this.vm) || void 0 === o ? void 0 : o.currentEvent) || void 0 === n ? void 0 : n.getPrizeTierByRewardSetId(i.id);
        if (a) {
            var s = r.localize("gamemodeshub.champions.rewards.title", [i.id.toString()]);
            this.triggerConsolidatedRewardsPopup([a.eventRewardSet], s, !1)
        } else
            services.Notification.queue([r.localize("notification.champions.rewardsInfoFailed"), UINotificationType.NEGATIVE])
    }
    ,
    UTChampionsViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i) {
        var o = new UTRewardSelectionChoiceViewController(e);
        o.setTitleText(t),
        o.setClaimableState(i),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTChampionsViewController
}(EAViewController)
  , UTSocialRequirementRowView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSocialRequirementRowView() {
        return e.call(this) || this
    }
    return __extends(UTSocialRequirementRowView, e),
    Object.defineProperty(UTSocialRequirementRowView.prototype, "label", {
        set: function(e) {
            this.__label.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSocialRequirementRowView.prototype, "value", {
        set: function(e) {
            this.__value.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTSocialRequirementRowView.prototype.setStarIcon = function(e) {
        DOMKit.toggleClass(this.__value, "star", null != e && e)
    }
    ,
    UTSocialRequirementRowView
}(EAView));
UTSocialRequirementRowView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-social-requirement-row-view"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("ut-social-requirement-row-view--label"),
        e.appendChild(this.__label),
        this.__value = document.createElement("span"),
        this.__value.classList.add("ut-social-requirement-row-view--value"),
        e.appendChild(this.__value),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSocialRequirementRowView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null,
    this.__value = null
}
,
UTSocialRequirementRowView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSocialEventTileView = function(e) {
    function UTSocialEventTileView() {
        return e.call(this) || this
    }
    return __extends(UTSocialEventTileView, e),
    Object.defineProperty(UTSocialEventTileView.prototype, "title", {
        set: function(e) {
            this.__title.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSocialEventTileView.prototype, "description", {
        set: function(e) {
            this.__description.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSocialEventTileView.prototype, "timeRemaining", {
        set: function(e) {
            var t = services.Localization;
            this.__timeRemainingLabel.textContent = t.localize("gamemodes.social.event.end.time"),
            this.__timeRemainingValue.textContent = t.localizeTimeRemaining(e)
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSocialEventTileView.prototype, "requirementsTitle", {
        set: function(e) {
            this.__requirementsTitle.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTSocialEventTileView.prototype.generateRequirementRow = function(e) {
        var t = new UTSocialRequirementRowView;
        return t.label = e.leftLabel,
        e.rightLabel && (t.value = e.rightLabel.toString(),
        t.setStarIcon(e.hasIcon)),
        t
    }
    ,
    UTSocialEventTileView.prototype.generateNoRequirementRow = function() {
        var e = new UTSocialRequirementRowView;
        return e.label = services.Localization.localize("gamemodes.social.no.requirements"),
        e.addClass("no-requirements"),
        e
    }
    ,
    UTSocialEventTileView.prototype.generateRequirements = function(e) {
        var o = this
          , t = [];
        0 === e.length ? t = [this.generateNoRequirementRow()] : t = e.reduce(function(e, t) {
            var i = o.buildRequirementString(t);
            return 0 < i.leftLabel.length && (t.attribute !== RushEligibilityAttribute.WEAK_FOOT && t.attribute !== RushEligibilityAttribute.SKILL_MOVES || (i.hasIcon = !0),
            e.push(o.generateRequirementRow(i))),
            e
        }, []);
        t.forEach(function(e) {
            return o.__hardRequirements.appendChild(e.getRootElement())
        })
    }
    ,
    UTSocialEventTileView.prototype.buildRequirementString = function(e) {
        var o = services.Localization
          , t = e.attribute
          , i = e.targets
          , n = ""
          , r = ""
          , a = "social.requirements."
          , s = "social.scope" + e.scope
          , l = "academy.requirements.player.";
        function combineValueStrings(e) {
            return e.map(function(e, t, i) {
                return t < i.length - 1 ? e + " " + o.localize("label.general.or").toUpperCase() : e
            }).join(" ")
        }
        switch (t) {
        case RushEligibilityAttribute.OVR:
            n = o.localize(a + "player.ovr"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.PACE:
            n = o.localize(a + "player.pace"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.SHOOTING:
            n = o.localize(a + "player.shooting"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.PASSING:
            n = o.localize(a + "player.passing"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.DRIBBLING_MAIN:
            n = o.localize(a + "player.dribbling_main"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.DEFENSE:
            n = o.localize(a + "player.defense"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.PHYSICALITY:
            n = o.localize(a + "player.physicality"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.ACCELERATION:
            n = o.localize(a + "player.acceleration"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.SPRINT_SPEED:
            n = o.localize(a + "player.sprint_speed"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.AGILITY:
            n = o.localize(a + "player.agility"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.BALANCE:
            n = o.localize(a + "player.balance"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.JUMPING:
            n = o.localize(a + "player.jumping"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.STAMINA:
            n = o.localize(a + "player.stamina"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.STRENGTH:
            n = o.localize(a + "player.strength"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.REACTIONS:
            n = o.localize(a + "player.reactions"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.AGGRESSION:
            n = o.localize(a + "player.aggression"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.COMPOSURE:
            n = o.localize(a + "player.composure"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.INTERCEPTIONS:
            n = o.localize(a + "player.interceptions");
            break;
        case RushEligibilityAttribute.POSITIONING:
            n = o.localize(a + "player.positioning"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.VISION:
            n = o.localize(a + "player.vision"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.BALL_CONTROL:
            n = o.localize(a + "player.ball_control"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.CROSSING:
            n = o.localize(a + "player.crossing"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.DRIBBLING_SUB:
            n = o.localize(a + "player.dribbling_sub"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.FINISHING:
            n = o.localize(a + "player.finishing"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.FK_ACC:
            n = o.localize(a + "player.fk_acc"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.HEADING_ACC:
            n = o.localize(a + "player.heading_acc");
            break;
        case RushEligibilityAttribute.LONG_PASSING:
            n = o.localize(a + "player.long_passing"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.SHORT_PASSING:
            n = o.localize(a + "player.short_passing"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.DEF_AWARENESS:
            n = o.localize(a + "player.def_awareness"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.SHOT_POWER:
            n = o.localize(a + "player.shot_power"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.LONG_SHOTS:
            n = o.localize(a + "player.long_shots"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.STANDING_TACKLE:
            n = o.localize(a + "player.standing_tackle"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.SLIDING_TACKLE:
            n = o.localize(a + "player.sliding_tackle"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.VOLLEYS:
            n = o.localize(a + "player.volleys."),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.CURVE:
            n = o.localize(a + "player.curve"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.PENALTIES:
            n = o.localize(a + "player.penalties"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.WEAK_FOOT:
            n = o.localize(a + "player.weak_foot"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.SKILL_MOVES:
            n = o.localize(a + "player.skill_moves"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.DEFINITION_ID:
            n = o.localize(a + "player.defId"),
            r = combineValueStrings(i.map(function(e) {
                var t, i = e & ItemIdMask.DATABASE, o = repositories.Item.getStaticDataByDefId(i);
                return null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR
            }));
            break;
        case RushEligibilityAttribute.DEFINITION_ID_NEGATED:
            n = o.localize(a + "player.not.defId"),
            r = combineValueStrings(i.map(function(e) {
                var t, i = e & ItemIdMask.DATABASE, o = repositories.Item.getStaticDataByDefId(i);
                return null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR
            }));
            break;
        case RushEligibilityAttribute.NATION:
            var c = i.map(function(e) {
                return UTLocalizationUtil.nationIdToName(e, o)
            });
            n = o.localize(a + "player.nation.label"),
            r = combineValueStrings(c);
            break;
        case RushEligibilityAttribute.LEAGUE:
            var d = i.map(function(e) {
                return UTLocalizationUtil.leagueIdToName(e, o)
            });
            n = o.localize(a + "player.league.label"),
            r = combineValueStrings(d);
            break;
        case RushEligibilityAttribute.CLUB:
            var u = i.filter(function(e) {
                var t = repositories.TeamConfig.getLinkedTeam(e);
                return t === e || !i.includes(t)
            }).map(function(e) {
                return UTLocalizationUtil.teamIdToAbbr15(e, o)
            });
            n = o.localize(a + "player.club.label"),
            r = combineValueStrings(u);
            break;
        case RushEligibilityAttribute.RARITY:
            var p = i.map(function(e) {
                return o.localize("item.raretype" + e)
            });
            n = o.localize(a + "rarity"),
            r = combineValueStrings(p);
            break;
        case RushEligibilityAttribute.RARITY_NEGATED:
            p = i.map(function(e) {
                return o.localize("item.raretype" + e)
            });
            n = o.localize(a + "rarity.not"),
            r = combineValueStrings(p);
            break;
        case RushEligibilityAttribute.POSITION:
            var h = i.map(function(e) {
                return UTLocalizationUtil.positionIdToName(e, o)
            });
            n = o.localize(a + "position"),
            r = combineValueStrings(h);
            break;
        case RushEligibilityAttribute.POSITION_NEGATED:
            h = i.map(function(e) {
                return UTLocalizationUtil.positionIdToName(e, o)
            });
            n = o.localize(a + "position.not"),
            r = combineValueStrings(h);
            break;
        case RushEligibilityAttribute.POSSIBLE_POSITIONS_COUNT:
            n = o.localize(a + "player.alt_positons_count"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.TRADEABLE_STATE:
            var _ = 1 === i[0] ? "untradable" : "tradable";
            n = o.localize(a + "itemStatus"),
            r = o.localize(a + _);
            break;
        case RushEligibilityAttribute.BASE_TRAITS_COUNT:
            n = o.localize(a + "player.base-traits-count"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.ICON_TRAITS_COUNT:
            n = o.localize(a + "player.icon-traits-count"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.TOTAL_TRAITS_COUNT:
            n = o.localize(a + "player.total-traits-count"),
            r = o.localize(s, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.BASE_TRAIT_PRESENT:
            n = o.localize(a + "player.base-traits-exists"),
            r = i.map(function(e) {
                return o.localize("extendedPlayerInfo.signatureAbility.name." + e)
            }).toString();
            break;
        case RushEligibilityAttribute.ICON_TRAIT_PRESENT:
            n = o.localize(a + "player.icon-traits-exists"),
            r = i.map(function(e) {
                return o.localize("extendedPlayerInfo.signatureAbility.name." + e)
            }).toString();
            break;
        case RushEligibilityAttribute.RARITY_GROUP:
            var m = combineValueStrings(i.map(function(e) {
                return o.localize("Player_Group_" + e)
            }));
            n = o.localize(a + "rarity-group", [m]);
            break;
        case RushEligibilityAttribute.RARITY_GROUP_NEGATED:
            m = combineValueStrings(i.map(function(e) {
                return o.localize("Player_Group_" + e)
            }));
            n = o.localize(a + "rarity-group.not", [m]);
            break;
        case RushEligibilityAttribute.PLAYER_ROLE_PLUS_PRESENT:
            n = combineValueStrings(i.map(function(e) {
                return o.localize("tactics.roles.role" + UTPlayerRoleVO.mapUtasRoleToPlayerRole(e)) + "+"
            }));
            break;
        case RushEligibilityAttribute.PLAYER_ROLE_PLUSPLUS_PRESENT:
            n = combineValueStrings(i.map(function(e) {
                return o.localize("tactics.roles.role" + UTPlayerRoleVO.mapUtasRoleToPlayerRole(e)) + "++"
            }));
            break;
        case RushEligibilityAttribute.PLAYER_ROLE_PLUS_COUNT:
            n = o.localize(l + "role-plus-count.scope" + e.scope, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.PLAYER_ROLE_PLUSPLUS_COUNT:
            n = o.localize(l + "role-plus-plus-count.scope" + e.scope, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.PLAYER_ROLE_PLUS_OR_PLUSPLUS_TOTAL_COUNT:
            n = o.localize(l + "role-plus-2plus-total-count.scope" + e.scope, i.map(function(e) {
                return e.toString()
            }));
            break;
        case RushEligibilityAttribute.LOAN_TYPE:
            var T = i[0];
            0 === T && (n = o.localize(a + "loanplayers"),
            r = o.localize("social.scope1", [T.toString()]));
            break;
        case RushEligibilityAttribute.NONE:
        case RushEligibilityAttribute.ATTACK_WORK_RATE:
        case RushEligibilityAttribute.DEFENSIVE_WORK_RATE:
        case RushEligibilityAttribute.START_TIME:
        case RushEligibilityAttribute.END_TIME:
            break;
        default:
            DebugUtils.Assert(!1, "Reached default case building eligibility string: " + t)
        }
        return {
            leftLabel: n,
            rightLabel: r
        }
    }
    ,
    UTSocialEventTileView
}(EATargetActionView);
UTSocialEventTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-social-event-tile-view"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-social-event-tile-view--title"),
        e.appendChild(this.__title);
        var t = document.createElement("div");
        t.classList.add("ut-social-event-tile-view--time-remaining"),
        this.__timeRemainingLabel = document.createElement("div"),
        this.__timeRemainingLabel.classList.add("ut-social-event-tile-view--time-remaining-label"),
        t.appendChild(this.__timeRemainingLabel);
        var i = document.createElement("span");
        i.classList.add("ut-social-event-tile-view--time-remaining-icon"),
        t.appendChild(i),
        this.__timeRemainingValue = document.createElement("div"),
        this.__timeRemainingValue.classList.add("ut-social-event-tile-view--time-remaining-value"),
        t.appendChild(this.__timeRemainingValue),
        e.appendChild(t);
        var o = document.createElement("span");
        o.classList.add("ut-social-event-tile-view--time-remaining"),
        e.appendChild(o),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-social-event-tile-view--description"),
        e.appendChild(this.__description),
        this.__hardRequirements = document.createElement("div"),
        this.__hardRequirements.classList.add("ut-social-event-tile-view--requirements"),
        this.__requirementsTitle = document.createElement("p"),
        this.__requirementsTitle.classList.add("ut-social-event-tile-view--requirements-title"),
        this.__hardRequirements.appendChild(this.__requirementsTitle),
        e.appendChild(this.__hardRequirements),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSocialEventTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__timeRemainingLabel = null,
    this.__timeRemainingValue = null,
    this.__description = null,
    this.__hardRequirements = null,
    this.__requirementsTitle = null
}
,
UTSocialEventTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSocialView = function(i) {
    function UTSocialView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.tiles = [],
        t
    }
    return __extends(UTSocialView, i),
    UTSocialView.prototype.dealloc = function() {
        this.tiles.forEach(function(e) {
            return e.dealloc()
        }),
        this.tiles = []
    }
    ,
    UTSocialView.prototype.generateEventTile = function(e) {
        var t = new UTSocialEventTileView;
        return t.title = e.name,
        t.description = e.description,
        t.timeRemaining = e.getTimeRemaining(),
        t.requirementsTitle = this.loc.localize("gamemodes.social.playerrequirements"),
        t.generateRequirements(e.requirements),
        t
    }
    ,
    UTSocialView.prototype.render = function(e) {
        var i = this;
        e.forEach(function(e) {
            var t = i.generateEventTile(e);
            i.tiles.push(t)
        }),
        this.tiles.map(function(e) {
            i.addSubview(e, i.__tilesList)
        }),
        this.layoutSubviews()
    }
    ,
    UTSocialView
}(EATargetActionView);
UTSocialView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-social-view"),
        this.__tilesList = document.createElement("div"),
        this.__tilesList.classList.add("ut-social-view--list"),
        e.appendChild(this.__tilesList),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSocialView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tilesList = null
}
,
UTSocialView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSocialViewController = function(t) {
    function UTSocialViewController() {
        var e = t.call(this) || this;
        return e.vm = new UTSocialViewModel(services.Social),
        e
    }
    return __extends(UTSocialViewController, t),
    UTSocialViewController.prototype._getViewInstanceFromData = function() {
        return new UTSocialView({
            localization: services.Localization
        })
    }
    ,
    UTSocialViewController.prototype._getTelemetryId = function() {
        return "Social"
    }
    ,
    UTSocialViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.social")
    }
    ,
    UTSocialViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.requestEventData(),
        TelemetryManager.trackPage(TelemetryManager.Sections.SOCIAL, "Social Main")
    }
    ,
    UTSocialViewController.prototype.requestEventData = function() {
        var n = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestEvents().observe(this, function(e, t) {
            var i, o;
            (e.unobserve(n),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.eventList)) ? n.getView().render(t.data.eventList) : (services.Notification.queue([services.Localization.localize("social.loaderror"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (o = n.getNavigationController()) || void 0 === o || o.popViewController());
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTSocialViewController
}(EAViewController)
  , UTGameModesHubViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTGameModesHubViewController() {
        var e = r.call(this) || this;
        return e.championsViewModel = new UTChampionsViewModel(services.Champions),
        e.rivalsViewModel = new UTRivalsViewModel(services.Rivals),
        e.squadBattlesViewModel = new UTSquadBattlesViewModel(services.SquadBattles),
        e.socialViewModel = new UTSocialViewModel(services.Social),
        e
    }
    return __extends(UTGameModesHubViewController, r),
    UTGameModesHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTGameModesHubView({
            localization: services.Localization
        })
    }
    ,
    UTGameModesHubViewController.prototype._getTelemetryId = function() {
        return "Game Modes Hub"
    }
    ,
    UTGameModesHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.gamemodes")
    }
    ,
    UTGameModesHubViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this),
        TelemetryManager.trackPage(TelemetryManager.Sections.GAMEMODES, "Game Modes Hub"),
        this.requestEventData();
        var e = this.getView()
          , t = e.getRivalsTile()
          , i = e.getSquadBattlesTile()
          , o = e.getChampsTile()
          , n = e.getSocialTile();
        t.addTarget(this, this.eRivalsTileSelected, EventType.TAP),
        i.addTarget(this, this.eSquadBattlesTileSelected, EventType.TAP),
        o.addTarget(this, this.eChampsTileSelected, EventType.TAP),
        n.addTarget(this, this.eSocialTileSelected, EventType.TAP)
    }
    ,
    UTGameModesHubViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.getSquadBattlesTile().removeTarget(this, this.eSquadBattlesTileSelected, EventType.TAP),
        e.getRivalsTile().removeTarget(this, this.eRivalsTileSelected, EventType.TAP),
        e.getChampsTile().removeTarget(this, this.eChampsTileSelected, EventType.TAP),
        e.getChampsTile().removeTarget(this, this.eChampionsRewardSelected, EventType.TAP),
        e.getSocialTile().removeTarget(this, this.eSocialTileSelected, EventType.TAP),
        r.prototype.viewWillDisappear.call(this)
    }
    ,
    UTGameModesHubViewController.prototype.onRequestSquadBattlesEventDataComplete = function(e, t) {
        var i, o = services.Localization, n = services.Notification;
        e.unobserve(this);
        var r = this.getView().getSquadBattlesTile();
        r.setInteractionState(!1),
        r.toggleRewardsState(!1),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event) && this.evaluateSquadBattlesClaimState(),
        t.success || n.queue([o.localize("squadbattles.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.onRequestRivalsEventDataComplete = function(e, t) {
        var i = services.Localization
          , o = services.Notification;
        e.unobserve(this);
        var n = this.getView().getRivalsTile();
        n.setInteractionState(!1),
        n.toggleRewardsState(!1),
        t.success && JSUtils.isObject(t.response) && t.response.event && this.evaluateRivalsClaimState(),
        t.success || o.queue([i.localize("rivals.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.onRequestChampionsEventDataComplete = function(e, t) {
        var i = services.Localization
          , o = services.Notification;
        e.unobserve(this);
        var n = this.getView().getChampsTile();
        n.setInteractionState(!1),
        n.toggleRewardsState(!1),
        t.success && JSUtils.isObject(t.response) && t.response.event && (t.response.event.hasOutStandingRewards() ? (n.setTagText(i.localize("gamemodeshub.tag.enterclaim")),
        n.addTarget(this, this.eChampionsRewardSelected, EventType.TAP),
        n.toggleRewardsState(!0)) : n.addTarget(this, this.eChampsTileSelected, EventType.TAP),
        n.setInteractionState(!0));
        t.success || o.queue([i.localize("champions.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.onRequestSocialEventDataComplete = function(e, t) {
        var i, o = services.Localization, n = services.Notification;
        e.unobserve(this),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.eventList) && this.getView().getSocialTile().setInteractionState(!0);
        t.success || n.queue([o.localize("socials.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.requestEventData = function() {
        var i = this;
        this.championsViewModel.requestEvent().observe(this, function(e, t) {
            i.onRequestChampionsEventDataComplete(e, t),
            i.squadBattlesViewModel.requestEvent().observe(i, function(e, t) {
                i.onRequestSquadBattlesEventDataComplete(e, t),
                i.rivalsViewModel.requestEvent().observe(i, function(e, t) {
                    i.onRequestRivalsEventDataComplete(e, t),
                    i.socialViewModel.requestEvents().observe(i, function(e, t) {
                        i.onRequestSocialEventDataComplete(e, t)
                    })
                })
            })
        })
    }
    ,
    UTGameModesHubViewController.prototype.eSquadBattlesTileSelected = function(e, t, i) {
        var o;
        if (e.isInteractionEnabled())
            if (null === (o = this.squadBattlesViewModel.currentEvent) || void 0 === o ? void 0 : o.hasOutStandingRewards())
                this.claimSquadBattleRewards();
            else {
                var n = this.getNavigationController()
                  , r = new UTSquadBattlesViewController;
                r.init(),
                n && n.pushViewController(r),
                TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Squad Battles Tile Tapped")
            }
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsTileSelected = function(e, t, i) {
        var o;
        if (e.isInteractionEnabled())
            if (null === (o = this.rivalsViewModel.currentEvent) || void 0 === o ? void 0 : o.hasOutStandingRewards())
                this.claimRivalsRewards();
            else {
                var n = this.getNavigationController()
                  , r = new UTRivalsViewController;
                r.init(),
                n && n.pushViewController(r),
                TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Rivals Tile Tapped")
            }
    }
    ,
    UTGameModesHubViewController.prototype.eChampsTileSelected = function(e, t, i) {
        if (e.isInteractionEnabled()) {
            var o = this.getNavigationController()
              , n = new UTChampionsViewController;
            n.init(),
            o && o.pushViewController(n),
            TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Champs Tile Tapped")
        }
    }
    ,
    UTGameModesHubViewController.prototype.eSocialTileSelected = function(e, t, i) {
        if (e.isInteractionEnabled()) {
            var o = this.getNavigationController()
              , n = new UTSocialViewController;
            o && o.pushViewController(n),
            TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Social Tile Tapped")
        }
    }
    ,
    UTGameModesHubViewController.prototype.eChampionsRewardSelected = function(e, t, i) {
        var n = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Champions Tile");
        var r = services.Localization;
        this.championsViewModel.claimRewards().observe(this, function(e, t) {
            e.unobserve(n);
            var i = JSUtils.isObject(t.response) ? t.response.rewards : [];
            if (t.success && i) {
                var o;
                if (1 === i.length)
                    (o = new UTGameRewardsViewController(i[0].rewards)).getView().setTitle(r.localize("champions.rewards.title")),
                    o.getView().setDescription(r.localize("champions.rewards.description")),
                    o.getView().setButtonText(r.localize("champions.rewards.claim")),
                    o.modalDisplayDimensions.width = "24em",
                    gPopupClickShield.setActivePopup(o);
                else
                    (o = new UTRewardSelectionChoiceViewController(i)).setTitleText(r.localize("champions.rewards.title")),
                    o.getView().addTarget(n, n.eClosePopup, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(o);
                n.requestEventData()
            } else
                services.Notification.queue([r.localize("notification.champions.claimFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTGameModesHubViewController.prototype.claimSquadBattleRewards = function() {
        var r = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes - Squad Battles Rewards Tile");
        var a = services.Localization;
        this.squadBattlesViewModel.claimRewards().observe(this, function(e, t) {
            e.unobserve(r);
            var i = JSUtils.isObject(t.response) ? t.response.rewards : []
              , o = !!JSUtils.isObject(t.response) && t.response.allClaimed;
            if (t.success && 0 < i.length) {
                var n;
                if (1 === i.length)
                    (n = new UTGameRewardsViewController(i[0].rewards)).getView().setTitle(a.localize("squadbattles.rewards.title")),
                    n.getView().setDescription(a.localize("squadbattles.rewards.description")),
                    n.getView().setButtonText(a.localize("squadbattles.rewards.claim")),
                    n.modalDisplayDimensions.width = "24em",
                    gPopupClickShield.setActivePopup(n);
                else
                    (n = new UTRewardSelectionChoiceViewController(i)).setTitleText(a.localize("squadbattles.rewards.title")),
                    n.getView().addTarget(r, r.eClosePopup, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(n);
                o && (r.requestEventData(),
                r.evaluateSquadBattlesClaimState())
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : t.success && (!t.success || o) || (services.Notification.queue([services.Localization.localize("notification.sqbt.claimAllFailed"), UINotificationType.NEGATIVE]),
                r.evaluateSquadBattlesClaimState())
        })
    }
    ,
    UTGameModesHubViewController.prototype.claimRivalsRewards = function() {
        var e, n = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes - Rivals Reward Tile");
        function yl(e, t) {
            e.unobserve(n);
            var i = JSUtils.isObject(t.response) ? t.response.rewards : [];
            if (t.success && 0 < i.length) {
                var o = new UTGameRewardsViewController(i);
                o.getView().setTitle(r.localize("rivals.rewards.weeklyclaimedtitle")),
                o.getView().setDescription(r.localize("rivals.rewards.weeklydescription")),
                o.getView().setButtonText(r.localize("rivals.rewards.claim")),
                o.modalDisplayDimensions.width = "24em",
                gPopupClickShield.setActivePopup(o)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([r.localize("notification.rivals.claimFailed"), UINotificationType.NEGATIVE]);
            n.evaluateRivalsClaimState()
        }
        var r = services.Localization;
        (null === (e = this.rivalsViewModel.currentEvent) || void 0 === e ? void 0 : e.isWeeklyPrizeAvailable()) && this.rivalsViewModel.getWeeklyRewardsInfo().observe(this, function(e, t) {
            if (e.unobserve(n),
            t.success && JSUtils.isObject(t.response)) {
                var i = t.response.unclaimedRewards;
                if (i.length < 1)
                    return;
                if (1 === i.length)
                    n.rivalsViewModel.claimWeeklyRivalsRewardsById(i[0].id).observe(n, yl);
                else {
                    var o = new UTRewardSelectionChoiceViewController(i);
                    o.setTitleText(r.localize("rivals.rewards.weeklyclaimedtitle")),
                    o.getView().addTarget(n, n.eRivalsWeeklyRewardClaimed, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(o)
                }
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
        })
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsWeeklyRewardClaimed = function(e, t, i) {
        var r = this;
        this.rivalsViewModel.claimWeeklyRivalsRewardsById(i.selectedId).observe(this, function(e, t) {
            e.unobserve(r);
            var i = JSUtils.isObject(t.response) ? t.response.rewards : [];
            if (t.success && 0 < i.length) {
                var o = new UTGameRewardsViewController(i)
                  , n = services.Localization;
                o.getView().setTitle(n.localize("rivals.rewards.weeklyclaimedtitle")),
                o.getView().setDescription(n.localize("rivals.rewards.weeklydescription")),
                o.getView().setButtonText(n.localize("rivals.rewards.claim")),
                o.modalDisplayDimensions.width = "24em",
                o.onExit.observe(r, r.evaluateRivalsClaimState),
                gPopupClickShield.setActivePopup(o)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.rivals.claimFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTGameModesHubViewController.prototype.evaluateRivalsClaimState = function() {
        var e, t = this.getView().getRivalsTile();
        (null === (e = this.rivalsViewModel.currentEvent) || void 0 === e ? void 0 : e.hasOutStandingRewards()) ? (t.setTagText(services.Localization.localize("gamemodeshub.tag.enterclaim")),
        t.toggleRewardsState(!0),
        t.setInteractionState(!0)) : (t.toggleRewardsState(!1),
        t.setInteractionState(!0),
        t.setTagText(""))
    }
    ,
    UTGameModesHubViewController.prototype.evaluateSquadBattlesClaimState = function() {
        var e, t = this.getView().getSquadBattlesTile();
        (null === (e = this.squadBattlesViewModel.currentEvent) || void 0 === e ? void 0 : e.hasOutStandingRewards()) ? (t.setTagText(services.Localization.localize("gamemodeshub.tag.enterclaim")),
        t.toggleRewardsState(!0),
        t.setInteractionState(!0)) : (t.toggleRewardsState(!1),
        t.setInteractionState(!0),
        t.setTagText(""))
    }
    ,
    UTGameModesHubViewController.prototype.eClosePopup = function(e, t, i) {
        e.getView().removeTarget(this, this.eClosePopup, UTRewardSelectionChoiceView.Event.CONFIRM),
        gPopupClickShield.closeActivePopup()
    }
    ,
    UTGameModesHubViewController
}(EAViewController))
  , UTAcademySlotRoleUpgradeView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTAcademySlotRoleUpgradeView() {
        return e.call(this) || this
    }
    return __extends(UTAcademySlotRoleUpgradeView, e),
    Object.defineProperty(UTAcademySlotRoleUpgradeView.prototype, "position", {
        set: function(e) {
            this.__position.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotRoleUpgradeView.prototype, "bonus", {
        set: function(e) {
            this.__bonus.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotRoleUpgradeView.prototype, "plus", {
        set: function(e) {
            e === AcademyTacticRoleBonusValue.PLUS ? this.__plus.textContent = "+" : e === AcademyTacticRoleBonusValue.PLUS_PLUS ? this.__plus.textContent = "++" : this.__plus.textContent = ""
        },
        enumerable: !1,
        configurable: !0
    }),
    UTAcademySlotRoleUpgradeView
}(EAView));
UTAcademySlotRoleUpgradeView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-slot-role-upgrade-view"),
        this.__position = document.createElement("div"),
        this.__position.classList.add("ut-academy-slot-role-upgrade-view--position"),
        e.appendChild(this.__position);
        var t = document.createElement("div");
        t.classList.add("ut-academy-slot-role-upgrade-view--bonus"),
        this.__bonus = document.createElement("p"),
        t.appendChild(this.__bonus),
        this.__plus = document.createElement("p"),
        this.__plus.classList.add("ut-academy-slot-role-upgrade-view--plus"),
        t.appendChild(this.__plus),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademySlotRoleUpgradeView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__position = null,
    this.__bonus = null,
    this.__plus = null
}
,
UTAcademySlotRoleUpgradeView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademySlotTileView = function(i) {
    function UTAcademySlotTileView() {
        return i.call(this) || this
    }
    return __extends(UTAcademySlotTileView, i),
    UTAcademySlotTileView.prototype.init = function() {
        i.prototype.init.call(this),
        this._claimBtn.init(),
        this._claimBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this.toggleClaimable(!1),
        this.toggleStatus(!1),
        this.setInteractionState(!0)
    }
    ,
    UTAcademySlotTileView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && (this.toggleClass(enums.UIState.DISABLED, !this._interactionState),
        this._interactionState || this.removeClass(enums.UIState.ACTIVE))
    }
    ,
    Object.defineProperty(UTAcademySlotTileView.prototype, "title", {
        get: function() {
            return this.__title.textContent || ""
        },
        set: function(e) {
            this.__title.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotTileView.prototype, "description", {
        get: function() {
            return this.__description.textContent || ""
        },
        set: function(e) {
            this.__description.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotTileView.prototype, "statsTitle", {
        get: function() {
            return this.__statsTitle.textContent || ""
        },
        set: function(e) {
            this.__statsTitle.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotTileView.prototype, "statsTitleTimed", {
        get: function() {
            return this.__statsTitleTimed.textContent || ""
        },
        set: function(e) {
            this.__statsTitleTimed.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTAcademySlotTileView.prototype.setTimedEvolutionDisplay = function(e) {
        this.__timedTimerContainer.style.display = e ? "block" : "none"
    }
    ,
    UTAcademySlotTileView.prototype.setTimedEvolutionTime = function(e) {
        this.__timedTimer.textContent = e
    }
    ,
    UTAcademySlotTileView.prototype.setState = function(e, t) {
        var i = services.Localization;
        this.removeClass(JSUtils.getObjectValues(UTAcademySlotTileView.Style).join(" "));
        var o = "";
        e === AcademySlotState.ACTIVE ? (o = UTAcademySlotTileView.Style.SLOTTED + " " + UTAcademySlotTileView.Style.ACTIVATED,
        this._label.setLabel(i.localize("academy.slot.label.activeslot"))) : e === AcademySlotState.INACTIVE ? (o = UTAcademySlotTileView.Style.SLOTTED + " " + UTAcademySlotTileView.Style.INACTIVATED,
        this._label.setLabel(i.localize("academy.slot.label.inactiveslot"))) : e === AcademySlotState.LOCKED ? o = UTAcademySlotTileView.Style.UNSLOTTED : e === AcademySlotState.NOT_STARTED && (o = UTAcademySlotTileView.Style.UNSLOTTED),
        this.toggleClass(o, !0)
    }
    ,
    UTAcademySlotTileView.prototype.setExpiry = function(e) {
        var t = services.Localization;
        this.__expiry.classList.remove("expired", "expiring", "alarm-txt");
        var i = "";
        e <= 0 ? (i = t.localize("academy.timer.slot.expired"),
        this.__expiry.classList.add("expired")) : i = e > AUCTION_COUNTDOWN_THRESHOLD ? t.localizeAuctionTimeRemaining(e) : (0 < e && e < AUCTION_COUNTDOWN_FLASING_THRESHOLD && (this.__expiry.classList.add("alarm-txt"),
        e <= AUCTION_COUNTDOWN_ALERT_THRESHOLD && this.__expiry.classList.add("expiring")),
        t.localizeTimeRemaining(e)),
        this.__expiry.textContent = services.Localization.localize("academy.itemdetails.header.evolutions", [i])
    }
    ,
    UTAcademySlotTileView.prototype.setEnrolmentExpiry = function(e) {
        var t = services.Localization;
        this.__enrolment.classList.remove("expired", "expiring", "alarm-txt");
        var i = "";
        e <= 0 ? (i = t.localize("academy.timer.slot.expired"),
        this.__enrolment.classList.add("expired")) : i = e > AUCTION_COUNTDOWN_THRESHOLD ? t.localizeAuctionTimeRemaining(e) : (0 < e && e < AUCTION_COUNTDOWN_FLASING_THRESHOLD && (this.__enrolment.classList.add("alarm-txt"),
        e <= AUCTION_COUNTDOWN_ALERT_THRESHOLD && this.__enrolment.classList.add("expiring")),
        t.localizeTimeRemaining(e)),
        this.__enrolment.textContent = services.Localization.localize("academy.itemdetails.header.enrollment", [i])
    }
    ,
    UTAcademySlotTileView.prototype.setCurrencyLabels = function(e, t) {
        this.__priceContainer.style.display = 0 < e.length || 0 < t.length ? "block" : "none",
        this.__coinPrice.textContent = e,
        this.__pointsPrice.textContent = t
    }
    ,
    UTAcademySlotTileView.prototype.renderItem = function(e) {
        this._itemView && this.clearItem(),
        this._itemView = factories.ItemView.createLargeItem(e),
        this._itemView.init(),
        this._itemView.supportSecondaryViews = !1,
        this._itemView.render(e),
        this.addSubview(this._itemView, this.__itemContainer),
        this.layoutSubviews()
    }
    ,
    UTAcademySlotTileView.prototype.clearItem = function() {
        this._itemView && this._itemView.dealloc()
    }
    ,
    UTAcademySlotTileView.prototype.renderRarityShell = function(e) {
        var t = this
          , i = !0 === e.levels ? ItemRatingTier.GOLD : ItemRatingTier.NONE
          , o = AssetLocationUtils.getLocalShellUri(!1, e.id, i, ItemViewSize.LARGE)
          , n = AssetLocationUtils.getShellUri(ItemViewSize.LARGE, 1, e.id, i, e.getGuid());
        this._rarityShell && this.clearRarity(),
        this._rarityShell = new EAImageView,
        this._rarityShell.addClass("rare-shell"),
        this._rarityShell.onerror = function(e) {
            t._rarityShell.onerror = null,
            t._rarityShell.src = o
        }
        ,
        this._rarityShell.src = n,
        this.addSubview(this._rarityShell, this.__itemContainer),
        this.layoutSubviews()
    }
    ,
    UTAcademySlotTileView.prototype.clearRarity = function() {
        this._itemView && this._itemView.dealloc()
    }
    ,
    UTAcademySlotTileView.prototype.addTimeData = function(e) {
        this._timeStat.title = e.time
    }
    ,
    UTAcademySlotTileView.prototype.timedEvolutionDisplay = function(e) {
        this.__statsTitleTimed.style.display = e ? "block" : "none",
        this._timeStat.setDisplay(e)
    }
    ,
    UTAcademySlotTileView.prototype.addStatBoost = function(e) {
        var t = new UTAcademySlotStatView;
        t.title = e.title,
        t.deltaValue = " +" + e.delta.toString(),
        t.setMaxValue(e.maxValue),
        this.addSubview(t, this.__statsElementsContainer)
    }
    ,
    UTAcademySlotTileView.prototype.addBonusString = function(e) {
        var t = services.Localization
          , i = new UTAcademySlotStatView;
        i.title = e.title,
        i.deltaValue = t.locale.isRTL() ? e.delta.join(" ,") : e.delta.join(", "),
        i.setMaxValue(e.maxValue),
        this.addSubview(i, this.__statsElementsContainer)
    }
    ,
    UTAcademySlotTileView.prototype.addStarBonus = function(e) {
        var t = new UTAcademySlotStatView;
        t.title = e.title,
        t.deltaStarCount = e.delta,
        t.setMaxValue(e.maxValue),
        this.addSubview(t, this.__statsElementsContainer)
    }
    ,
    UTAcademySlotTileView.prototype.addRoleUpgrade = function(e, t) {
        var i = new UTAcademySlotRoleUpgradeView;
        i.position = e.title,
        i.bonus = e.role,
        i.plus = t,
        this.addSubview(i, this.__statsElementsContainer)
    }
    ,
    UTAcademySlotTileView.prototype.addStatLimit = function(e) {
        var t = new UTAcademySlotStatView;
        t.title = e,
        t.addClass("limit"),
        this.addSubview(t, this.__statsElementsContainer)
    }
    ,
    UTAcademySlotTileView.prototype.toggleClaimable = function(e) {
        this._claimBtn.setInteractionState(e),
        this._claimBtn.setDisplay(e)
    }
    ,
    UTAcademySlotTileView.prototype.setClaimableButtontext = function(e) {
        this._claimBtn.setText(e)
    }
    ,
    UTAcademySlotTileView.prototype.toggleStatus = function(e) {
        this.__status.style.display = e ? "block" : "none"
    }
    ,
    UTAcademySlotTileView.prototype.setStatus = function(e) {
        this.__status.textContent = e
    }
    ,
    UTAcademySlotTileView.prototype._mouseLeave = function(e) {
        this.removeClass([enums.UIState.ACTIVE, enums.UIState.HOVER].join(" "))
    }
    ,
    UTAcademySlotTileView.prototype._mouseEnter = function(e) {
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTAcademySlotTileView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTAcademySlotTileView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTAcademySlotTileView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTAcademySlotTileView.prototype._touchCancelled = function(e) {
        i.prototype._touchCancelled.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTAcademySlotTileView.prototype._tapDetected = function(e) {
        var t = this;
        i.prototype._tapDetected.call(this, e),
        this.hasClass(enums.UIState.ACTIVE) ? this.removeClass(enums.UIState.ACTIVE) : (this.addClass(enums.UIState.ACTIVE),
        this.highlightTimeout = window.setTimeout(function() {
            return t.removeClass(enums.UIState.ACTIVE)
        }, 100)),
        this.hasClass(enums.UIState.HOVER) && this.removeClass(enums.UIState.HOVER),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTAcademySlotTileView.prototype.onButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && e === this._claimBtn && this._triggerActions(UTAcademySlotTileView.Event.CLAIM_REWARD)
    }
    ,
    UTAcademySlotTileView.Style = {
        ACTIVATED: "activated",
        INACTIVATED: "inactivated",
        SLOTTED: "slotted",
        UNSLOTTED: "unslotted"
    },
    UTAcademySlotTileView.Event = {
        CLAIM_REWARD: "UTAcademySlotTileView.Events.CLAIM_REWARD"
    },
    UTAcademySlotTileView
}(EATargetActionView);
UTAcademySlotTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-slot-tile-view"),
        this._label = new UTLabelView,
        e.appendChild(this._label.getRootElement()),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-academy-slot-tile-view--title"),
        e.appendChild(this.__title),
        this.__priceContainer = document.createElement("div"),
        this.__priceContainer.classList.add("ut-academy-slot-tile-view--prices"),
        this.__coinPrice = document.createElement("span"),
        this.__coinPrice.classList.add("ut-academy-slot-tile-view--prices-coins"),
        this.__priceContainer.appendChild(this.__coinPrice),
        this.__pointsPrice = document.createElement("span"),
        this.__pointsPrice.classList.add("ut-academy-slot-tile-view--prices-points"),
        this.__priceContainer.appendChild(this.__pointsPrice),
        e.appendChild(this.__priceContainer),
        this.__timedTimerContainer = document.createElement("div"),
        this.__timedTimerContainer.classList.add("ut-academy-slot-tile-view--labels"),
        this.__timedTimer = document.createElement("span"),
        this.__timedTimer.classList.add("ut-academy-slot-tile-view--timed-timer"),
        this.__timedTimerContainer.appendChild(this.__timedTimer),
        e.appendChild(this.__timedTimerContainer),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-academy-slot-tile-view--description"),
        e.appendChild(this.__description);
        var t = document.createElement("div");
        t.classList.add("ut-academy-slot-tile-view--details"),
        this.__itemContainer = document.createElement("div"),
        this.__itemContainer.classList.add("ut-academy-slot-tile-view--player"),
        t.appendChild(this.__itemContainer),
        this.__statsContainer = document.createElement("div"),
        this.__statsContainer.classList.add("ut-academy-slot-tile-view--stats"),
        this.__statsTitle = document.createElement("h2"),
        this.__statsTitle.classList.add("ut-academy-slot-tile-view--subtitle"),
        this.__statsContainer.appendChild(this.__statsTitle),
        this.__statsElementsContainer = document.createElement("div"),
        this.__statsElementsContainer.classList.add("ut-academy-slot-tile-stat-elements-container"),
        this.__statsContainer.appendChild(this.__statsElementsContainer),
        this.__statsTitleTimed = document.createElement("h2"),
        this.__statsTitleTimed.classList.add("ut-academy-slot-tile-view--subtitle"),
        this.__statsContainer.appendChild(this.__statsTitleTimed),
        this.__timedContainer = document.createElement("div"),
        this.__timedContainer.classList.add("ut-academy-slot-tile-stat-elements-container"),
        this._timeStat = new UTAcademySlotStatView,
        this._timeStat.getRootElement().classList.add("ut-academy-slot-stat-view--time"),
        this._timeStat.getRootElement().classList.add("ut-academy-slot-stat-view"),
        this.__timedContainer.appendChild(this._timeStat.getRootElement()),
        this.__statsContainer.appendChild(this.__timedContainer),
        t.appendChild(this.__statsContainer),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-academy-slot-tile-view--footer"),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-academy-slot-tile-view--button"),
        i.appendChild(this._claimBtn.getRootElement()),
        this.__status = document.createElement("div"),
        this.__status.classList.add("ut-academy-slot-tile-view--status"),
        i.appendChild(this.__status),
        e.appendChild(i),
        this.__expiryContainer = document.createElement("div"),
        this.__expiryContainer.classList.add("ut-academy-slot-tile-view--timer"),
        this.__expiryContainer.classList.add("ut-academy-slot-tile-view--labels"),
        this.__enrolment = document.createElement("span"),
        this.__enrolment.classList.add("ut-academy-slot-tile-view--enrolment"),
        this.__expiryContainer.appendChild(this.__enrolment),
        this.__expiry = document.createElement("span"),
        this.__expiry.classList.add("ut-academy-slot-tile-view--expiry"),
        this.__expiryContainer.appendChild(this.__expiry),
        e.appendChild(this.__expiryContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademySlotTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._label.destroy(),
    this.__title = null,
    this.__priceContainer = null,
    this.__coinPrice = null,
    this.__pointsPrice = null,
    this.__timedTimerContainer = null,
    this.__timedTimer = null,
    this.__description = null,
    this.__itemContainer = null,
    this.__statsContainer = null,
    this.__statsTitle = null,
    this.__statsElementsContainer = null,
    this.__statsTitleTimed = null,
    this.__timedContainer = null,
    this._timeStat.destroy(),
    this._claimBtn.destroy(),
    this.__status = null,
    this.__expiryContainer = null,
    this.__enrolment = null,
    this.__expiry = null
}
,
UTAcademySlotTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademyHubView = function(i) {
    function UTAcademyHubView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.paginationDirection = !0,
        t.tiles = [],
        t
    }
    return __extends(UTAcademyHubView, i),
    UTAcademyHubView.prototype.init = function() {
        i.prototype.init.call(this),
        this._botPrev.addTarget(this, this.eButtonPress, EventType.TAP),
        this._botPrev.setText(services.Localization.localize("label.prev")),
        this._botPrev.init(),
        this._botNext.addTarget(this, this.eButtonPress, EventType.TAP),
        this._botNext.setText(services.Localization.localize("label.next")),
        this._botNext.init(),
        this._floatingFilterBtn.addTarget(this, this.eButtonPress, EventType.TAP),
        this._floatingFilterBtn.init(),
        this.setPaginationState(!1, !1),
        this.setInteractionState(!0),
        this._navigation.addTarget(this, this._handleTabSelect, EventType.TAP)
    }
    ,
    UTAcademyHubView.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.resetView()
    }
    ,
    UTAcademyHubView.prototype.setInteractionState = function(t) {
        this._navigation.setInteractionState(t),
        this.tiles.forEach(function(e) {
            return e.setInteractionState(t)
        }),
        i.prototype.setInteractionState.call(this, !0)
    }
    ,
    UTAcademyHubView.prototype.resetView = function() {
        this.tiles.map(function(e) {
            return e.dealloc()
        }),
        this.tiles = [],
        this.noResultsView && (this.noResultsView.dealloc(),
        this.noResultsView = null)
    }
    ,
    UTAcademyHubView.prototype.setupTabs = function(e) {
        var t = this;
        this._navigation.clearTabs(),
        this._navigation.addTab(AcademyDisplayGroup.SLOTTED, services.Localization.localize("academy.tab.slotted")),
        e.forEach(function(e) {
            t.addCategoryTab(e)
        }),
        this._navigation.layoutSubviews()
    }
    ,
    UTAcademyHubView.prototype.setActiveTab = function(e) {
        this.resetView(),
        this._navigation.setActiveTab(e)
    }
    ,
    UTAcademyHubView.prototype.addTab = function(e, t) {
        this._navigation.addTab(e, t)
    }
    ,
    UTAcademyHubView.prototype.addCategoryTab = function(e) {
        this._navigation.addTab(e.id, e.description)
    }
    ,
    UTAcademyHubView.prototype.layoutNavigationSubviews = function() {
        this._navigation.layoutSubviews()
    }
    ,
    UTAcademyHubView.prototype.getActiveTab = function() {
        return this._navigation.getActiveTab()
    }
    ,
    UTAcademyHubView.prototype.renderEmpty = function(e, t) {
        this.resetView(),
        this.toggleFilterContainer(!1),
        this.noResultsView || (this.noResultsView = new UTListNoResultsView,
        this.noResultsView.init(),
        this.addSubview(this.noResultsView, this.__list),
        this.layoutSubviews()),
        this.noResultsView.setHeading(e),
        this.noResultsView.setDescription(t)
    }
    ,
    UTAcademyHubView.prototype.render = function(e) {
        var i = this;
        this.setInteractionState(!1),
        this.resetView(),
        e.forEach(function(e) {
            var t = i.generateSlot(e);
            i.tiles.push(t)
        }),
        this.tiles.map(function(e) {
            i.addSubview(e, i.__list)
        }),
        this.layoutSubviews(),
        this.setInteractionState(!0),
        this.toggleFilterContainer(!0),
        this.__list.scrollTop = this.paginationDirection ? 0 : this.__list.scrollHeight
    }
    ,
    UTAcademyHubView.prototype.updateViewTimers = function(e) {
        var o = this;
        e.forEach(function(e, t) {
            var i = o.tiles[t];
            o.setExpiries(e, i),
            e.timed && o.setActiveTimeEvolutionTimer(e, i)
        })
    }
    ,
    UTAcademyHubView.prototype.setActiveTimeEvolutionTimer = function(e, t) {
        var i, o, n = null !== (o = null === (i = e.getCurrentLevelTimedObjective()) || void 0 === i ? void 0 : i.calculateTimedEvoRemainingTime()) && void 0 !== o ? o : 0;
        if (n <= 0)
            t.setTimedEvolutionDisplay(!1);
        else {
            var r = services.Localization
              , a = r.localize(n <= 0 ? "common.event.complete" : "academy.timedslot.trainingTime", [r.localizeTimeRemaining(n)]);
            t.setTimedEvolutionTime(a)
        }
    }
    ,
    UTAcademyHubView.prototype.setExpiries = function(e, t) {
        e.status !== AcademySlotState.ACTIVE && e.status !== AcademySlotState.INACTIVE && e.hasEnrolmentExpiry() && t.setEnrolmentExpiry(e.getEnrollmentTimeRemaining()),
        e.hasExpiry() && t.setExpiry(e.getEvolutionsTimeRemaining())
    }
    ,
    UTAcademyHubView.prototype.generateSlot = function(e) {
        var t, i, o, n, r, a = this, s = new UTAcademySlotTileView;
        s.init(),
        s.title = e.slotName,
        s.description = e.slotDescription,
        this.setExpiries(e, s);
        var l = e.status === AcademySlotState.ACTIVE || e.status === AcademySlotState.INACTIVE;
        if (!l && e.isLockedByPurchase()) {
            var c = null !== (i = null === (t = e.prices.get(GameCurrency.COINS)) || void 0 === t ? void 0 : t.value()) && void 0 !== i ? i : 0
              , d = null !== (n = null === (o = e.prices.get(GameCurrency.POINTS)) || void 0 === o ? void 0 : o.value()) && void 0 !== n ? n : 0;
            s.setCurrencyLabels(0 < c ? this.loc.localizeNumber(c) : "", 0 < d ? this.loc.localizeNumber(d) : "")
        }
        s.setState(e.status, e.isVanitySlot()),
        s.toggleClaimable(e.isClaimable()),
        s.setClaimableButtontext(this.loc.localize("academy.slot.claim", [e.getCurrentLevelNumber().toString(), e.getTotalLevels().toString()]));
        var u = !e.isClaimable() && l;
        s.toggleStatus(u),
        s.setStatus(u ? this.loc.localize("academy.itemdetails.header.currentlevel", [e.getCurrentLevelNumber().toString(), e.getTotalLevels().toString()]) : "");
        var p = null === (r = e.getCurrentLevel()) || void 0 === r ? void 0 : r.boostedPlayer
          , h = e.getVanityRarityDTO();
        if (e.timed && !l) {
            s.setTimedEvolutionDisplay(!1);
            var _ = e.levels.reduce(function(e, t) {
                var i;
                return e + (null === (i = t.objectives[0]) || void 0 === i ? void 0 : i.multiplier)
            }, 0);
            s.statsTitleTimed = this.loc.localize("academy.slot.subtitle.timedevo"),
            s.addTimeData({
                time: this.loc.localizeTimeRemaining(_)
            })
        } else
            s.timedEvolutionDisplay(!1),
            this.setActiveTimeEvolutionTimer(e, s),
            s.setTimedEvolutionDisplay(!0);
        return (null == p ? void 0 : p.isValid()) ? s.renderItem(p) : s = (h && s.renderRarityShell(h),
        s.statsTitle = this.loc.localize("academy.slot.subtitle.upgrades"),
        this.generateSlotStats(e, s)),
        s.addTarget(this, function() {
            return a.eTileSelected(s, EventType.TAP, {
                id: e.id
            })
        }, EventType.TAP),
        s.addTarget(this, function() {
            return a.eClaimSelected(s, EventType.TAP, {
                id: e.id
            })
        }, UTAcademySlotTileView.Event.CLAIM_REWARD),
        s.layoutSubviews(),
        s
    }
    ,
    UTAcademyHubView.prototype.generateSlotStats = function(e, t) {
        var u, p, h, _ = new EAHashTable, m = new EAHashTable, T = new EAHashTable, g = new EAHashTable, y = new EAHashTable, v = [], S = [], w = [], C = 0, f = 0, E = 0, b = 0, V = null, U = !1;
        e.academyTopRewards.map(function(e) {
            var t, i, o, n, r, a = UTAcademyUtils.mapAttributeIdToLocString(e.type);
            if (e.isOVR()) {
                var s = _.get(e.type)
                  , l = e.value + (null !== (t = null == s ? void 0 : s.delta) && void 0 !== t ? t : 0);
                _.set(e.type, {
                    title: a,
                    delta: l,
                    maxValue: e.maxValue
                })
            } else if (e.isRarity())
                V = e.value;
            else if (e.isCosmeticBonus())
                U = !0;
            else if (e.isSkillBonus())
                e.type === AcademyStatEnum.WEAK_FOOT ? (E += e.value,
                b = null !== (i = e.maxValue) && void 0 !== i ? i : -1) : e.type === AcademyStatEnum.SKILL_MOVES && (C += e.value,
                f = null !== (o = e.maxValue) && void 0 !== o ? o : -1);
            else if (e.isAttributeBonus()) {
                s = m.get(e.type),
                l = e.value + (null !== (n = null == s ? void 0 : s.delta) && void 0 !== n ? n : 0);
                m.set(e.type, {
                    title: a,
                    delta: l,
                    maxValue: e.maxValue
                })
            } else if (e.isPositionBonus())
                v.push(UTAcademyUtils.mapAttributeIdToLocString(e.type)),
                u = e.maxValue;
            else if (e.isSubAttributeBonus()) {
                s = T.get(e.type),
                l = e.value + (null !== (r = null == s ? void 0 : s.delta) && void 0 !== r ? r : 0);
                T.set(e.type, {
                    title: a,
                    delta: l,
                    maxValue: e.maxValue
                })
            } else if (e.isTraitBonus()) {
                var c = UTAcademyUtils.mapAttributeIdToLocString(e.type);
                e.isPlusPlayStyle() ? (w.push(c),
                h = e.maxValue) : (S.push(c),
                p = e.maxValue)
            } else if (e.isRoleUpgrade()) {
                var d = UTAcademyUtils.getPlayerRoleFromAcademyStatEnum(e.type);
                e.value === AcademyTacticRoleBonusValue.PLUS ? g.set(e.type, {
                    position: a,
                    role: UTLocalizationUtil.mapTacticRoleToLocString(d)
                }) : e.value === AcademyTacticRoleBonusValue.PLUS_PLUS && y.set(e.type, {
                    position: a,
                    role: UTLocalizationUtil.mapTacticRoleToLocString(d)
                })
            }
        });
        var i = e.rewardsDisplayTopCount
          , o = e.totalRewardsCount
          , n = 0
          , r = _.get(AcademyStatEnum.OVR);
        return r && (t.addStatBoost(r),
        n++),
        V && (t.addBonusString({
            title: this.loc.localize("extendedPlayerInfo.general.rarity"),
            delta: [this.loc.localize("item.raretype" + V)]
        }),
        n++),
        U && (t.addBonusString({
            title: UTAcademyUtils.mapAttributeIdToLocString(AcademyStatEnum.COSMETIC_UPGRADE),
            delta: []
        }),
        n++),
        E && n < i && (t.addStarBonus({
            title: this.loc.localize("item.subattribute.weakfoot"),
            delta: E,
            maxValue: b
        }),
        n++),
        C && n < i && (t.addStarBonus({
            title: this.loc.localize("item.subattribute.skillmove"),
            delta: C,
            maxValue: f
        }),
        n++),
        0 < m.length && n < i && m.map(function(e) {
            n < i && (t.addStatBoost(e),
            n++)
        }),
        0 < T.length && n < i && T.map(function(e) {
            n < i && (t.addStatBoost(e),
            n++)
        }),
        0 < v.length && n < i && n < i && (t.addBonusString({
            title: this.loc.localize("extendedPlayerInfo.positions"),
            delta: v,
            maxValue: u
        }),
        n++),
        0 < w.length && n < i && n < i && (t.addBonusString({
            title: this.loc.localize("search.filters.traits.icontraits"),
            delta: w,
            maxValue: h
        }),
        n++),
        0 < S.length && n < i && n < i && (t.addBonusString({
            title: this.loc.localize("extendedPlayerInfo.tab.traits"),
            delta: S,
            maxValue: p
        }),
        n++),
        0 < g.length && n < i && g.map(function(e) {
            t.addRoleUpgrade({
                title: e.position,
                role: e.role
            }, AcademyTacticRoleBonusValue.PLUS),
            n++
        }),
        0 < y.length && n < i && y.map(function(e) {
            t.addRoleUpgrade({
                title: e.position,
                role: e.role
            }, AcademyTacticRoleBonusValue.PLUS_PLUS),
            n++
        }),
        i < o && t.addStatLimit(this.loc.localize("academy.slot.key-stat-limit", [(o - i).toString()])),
        t
    }
    ,
    UTAcademyHubView.prototype.setPaginationState = function(e, t) {
        this._botPrev.setDisplay(e),
        this._botNext.setDisplay(t),
        DOMKit.toggleClass(this.__list, "paginated", e || t),
        DOMKit.toggleDisplayStyle(this.__botPagination, e || t)
    }
    ,
    UTAcademyHubView.prototype.toggleFilterContainer = function(e) {
        DOMKit.toggleDisplayStyle(this.__footer, e)
    }
    ,
    UTAcademyHubView.prototype.eTileSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTAcademyHubView.Event.TILE_SELECTED, i)
    }
    ,
    UTAcademyHubView.prototype.eClaimSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTAcademyHubView.Event.CLAIM_SELECTED, i)
    }
    ,
    UTAcademyHubView.prototype.eButtonPress = function(e, t, i) {
        this.isInteractionEnabled() && (e === this._botPrev ? (this.paginationDirection = !1,
        this._triggerActions(enums.UIPaginationEvent.PREVIOUS)) : e === this._botNext ? (this.paginationDirection = !0,
        this._triggerActions(enums.UIPaginationEvent.NEXT)) : e === this._floatingFilterBtn && (this.paginationDirection = !0,
        this._triggerActions(UTAcademyHubView.Event.FILTERS_SELECTED)))
    }
    ,
    UTAcademyHubView.prototype._handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && (this.__list.scrollTop = 0,
        this._triggerActions(UTAcademyHubView.Event.TAB_SELECTED, i))
    }
    ,
    UTAcademyHubView.Event = {
        CLAIM_SELECTED: "UTAcademyHubView.Event.CLAIM_SELECTED",
        FILTERS_SELECTED: "UTAcademyHubView.Event.FILTERS_SELECTED",
        TAB_SELECTED: "UTAcademyHubView.Event.TAB_SELECTED",
        TILE_SELECTED: "UTAcademyHubView.Event.TILE_SELECTED"
    },
    UTAcademyHubView
}(EATargetActionView);
UTAcademyHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-hub-view"),
        this._navigation = new EAFilterBarView,
        e.appendChild(this._navigation.getRootElement()),
        this.__list = document.createElement("div"),
        this.__list.classList.add("ut-academy-hub-view--list"),
        e.appendChild(this.__list),
        this.__footer = document.createElement("div"),
        this.__footer.classList.add("ut-academy-hub-view--footer"),
        this._floatingFilterBtn = new UTFloatingImageButtonControl,
        this._floatingFilterBtn.getRootElement().classList.add("filter-btn"),
        this._floatingFilterBtn.getRootElement().classList.add("ut-academy-hub-view--floating-filter-btn"),
        this.__footer.appendChild(this._floatingFilterBtn.getRootElement()),
        e.appendChild(this.__footer),
        this.__botPagination = document.createElement("div"),
        this.__botPagination.classList.add("pagingContainer"),
        this._botPrev = new UTFlatButtonControl,
        this._botPrev.getRootElement().classList.add("pagination"),
        this._botPrev.getRootElement().classList.add("prev"),
        this.__botPagination.appendChild(this._botPrev.getRootElement()),
        this._botNext = new UTFlatButtonControl,
        this._botNext.getRootElement().classList.add("pagination"),
        this._botNext.getRootElement().classList.add("next"),
        this.__botPagination.appendChild(this._botNext.getRootElement()),
        e.appendChild(this.__botPagination),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademyHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._navigation.destroy(),
    this.__list = null,
    this.__footer = null,
    this._floatingFilterBtn.destroy(),
    this.__botPagination = null,
    this._botPrev.destroy(),
    this._botNext.destroy()
}
,
UTAcademyHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademyViewModel = function(i) {
    function UTAcademyViewModel(e) {
        var t = i.call(this) || this;
        return t._activeTab = -1,
        t.collection = [],
        t.selectedSlotId = null,
        t.selectedLevelIndex = null,
        t.service = e,
        t.searchCriteria = new UTAcademySlotSearchCriteriaDTO,
        t
    }
    return __extends(UTAcademyViewModel, i),
    Object.defineProperty(UTAcademyViewModel.prototype, "activeTab", {
        get: function() {
            return this._activeTab
        },
        set: function(e) {
            this._activeTab = e,
            this.searchCriteria.offset = 0,
            e === AcademyDisplayGroup.SLOTTED ? this.searchCriteria.slotStatus = AcademySlotState.STARTED : e === AcademyDisplayGroup.UNSLOTTED && (this.searchCriteria.slotStatus = AcademySlotState.NOT_STARTED)
        },
        enumerable: !1,
        configurable: !0
    }),
    UTAcademyViewModel.prototype.setSlots = function(e) {
        this.collection = e
    }
    ,
    UTAcademyViewModel.prototype.getSlots = function() {
        return this.collection
    }
    ,
    UTAcademyViewModel.prototype.getSlotById = function(t) {
        return this.collection.find(function(e) {
            return e.id === t
        })
    }
    ,
    UTAcademyViewModel.prototype.requestHub = function(e) {
        var t = this.service.requestAcademyHub(e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTAcademyViewModel.prototype.requestCancelTimedEvolution = function(o) {
        var n = this
          , e = this.service.cancelTimedEvolution(o);
        return this._trackRequest(e, !0, function(e) {
            var t, i = null !== (t = n.collection.find(function(e) {
                return e.id === o
            })) && void 0 !== t ? t : null;
            i && (i.status = AcademySlotState.CANCELED)
        }),
        e
    }
    ,
    UTAcademyViewModel.prototype.getSlotPreview = function(e, t) {
        var n = this
          , i = this.service.getSlotPreview(e, t);
        return this._trackRequest(i, !0, function(e) {
            var t, i = null === (t = e.data) || void 0 === t ? void 0 : t.updatedSlot;
            if (i) {
                var o = n.collection.findIndex(function(e) {
                    return e.id === i.id
                });
                -1 < o && (n.collection[o] = i)
            }
        }),
        i
    }
    ,
    UTAcademyViewModel.prototype.addItemToSlot = function(e, t, i) {
        var o = this
          , n = this.service.addItemToSlot(e, t, i);
        return this._trackRequest(n, !0, function(e) {
            e.success && e.data && (e.data.activeSlots.map(function(t) {
                var e = o.collection.findIndex(function(e) {
                    return e.id === t.id
                });
                -1 < e && (o.collection[e] = t)
            }),
            e.data.inactiveSlots.map(function(t) {
                var e = o.collection.findIndex(function(e) {
                    return e.id === t.id
                });
                -1 < e && (o.collection[e] = t)
            }))
        }),
        n
    }
    ,
    UTAcademyViewModel.prototype.getSlottedPlayers = function() {
        return this.collection.map(function(e) {
            return e.realPlayerId
        }).filter(function(e) {
            return -1 !== e
        })
    }
    ,
    UTAcademyViewModel.prototype.cleanUpOpenedSlots = function() {
        this.collection.forEach(function(e) {
            e.status === AcademySlotState.NOT_STARTED && (e.player = new UTNullItemEntity,
            e.levels.forEach(function(e) {
                return e.boostedPlayer = null
            }))
        })
    }
    ,
    UTAcademyViewModel.prototype.claimSlotReward = function(e) {
        var t = this.service.claimSlot(e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTAcademyViewModel.prototype.resumeSlot = function(e) {
        var c = this
          , t = this.service.resumeSlot(e);
        return this._trackRequest(t, !0, function(e) {
            var t, i, o, n, r = null === (t = e.data) || void 0 === t ? void 0 : t.activatedSlotId, a = null === (i = e.data) || void 0 === i ? void 0 : i.pausedSlotId;
            if (r) {
                var s = null !== (o = c.collection.find(function(e) {
                    return e.id === r
                })) && void 0 !== o ? o : null;
                s && (s.status = AcademySlotState.ACTIVE)
            }
            if (a) {
                var l = null !== (n = c.collection.find(function(e) {
                    return e.id === a
                })) && void 0 !== n ? n : null;
                l && (l.status = AcademySlotState.INACTIVE)
            }
        }),
        t
    }
    ,
    UTAcademyViewModel.prototype.searchSlottedSlots = function(e) {
        var t = this.service.getSlottedSlots(e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTAcademyViewModel.prototype.searchSlotsByCategory = function(e) {
        var t = this.service.requestSlotsByCategory(e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTAcademyViewModel.prototype.getActiveSlotIds = function() {
        return this.service.getActiveSlotIds()
    }
    ,
    UTAcademyViewModel.prototype.getActiveTimedSlotIds = function() {
        return this.service.getActiveTimedSlotIds()
    }
    ,
    UTAcademyViewModel.prototype.getInactiveSlotIds = function() {
        return this.service.getActiveSlotIds()
    }
    ,
    UTAcademyViewModel.prototype.getCategories = function() {
        return this.service.getCategories().sort(function(e, t) {
            return t.priority - e.priority
        })
    }
    ,
    UTAcademyViewModel.prototype.getHighestPriorityCategory = function() {
        var e;
        return null !== (e = this.getCategories()[0]) && void 0 !== e ? e : null
    }
    ,
    UTAcademyViewModel.prototype.getSelectedSlot = function() {
        var e, t = this;
        return null !== (e = this.collection.find(function(e) {
            return e.id === t.selectedSlotId
        })) && void 0 !== e ? e : null
    }
    ,
    UTAcademyViewModel.prototype.setSelectedSlot = function(e) {
        this.selectedSlotId = e;
        var t = this.getSelectedSlot()
          , i = null == t ? void 0 : t.getCurrentLevel();
        this.selectedLevelIndex = t && i ? t.levels.indexOf(i) : 0
    }
    ,
    UTAcademyViewModel.prototype.setSelectedLevelIndex = function(e) {
        this.selectedLevelIndex = e
    }
    ,
    UTAcademyViewModel.prototype.getSelectedLevelIndex = function() {
        var e;
        return null !== (e = this.selectedLevelIndex) && void 0 !== e ? e : 0
    }
    ,
    UTAcademyViewModel.prototype.hasNextLevel = function() {
        var e = this.getSelectedSlot();
        return !!e && e.levels.length + 1 > this.getSelectedLevelIndex() + 1
    }
    ,
    UTAcademyViewModel.prototype.hasSlottedSlots = function() {
        var e = this.getActiveSlotIds()
          , t = this.getInactiveSlotIds();
        return 0 < e.length || 0 < t.length
    }
    ,
    UTAcademyViewModel.prototype.hasPreviousLevel = function() {
        return !!this.selectedSlotId && 0 < this.getSelectedLevelIndex()
    }
    ,
    UTAcademyViewModel.prototype.isTimedSlotsReachedLimit = function() {
        return this.service.isTimedSlotsReachedLimit()
    }
    ,
    UTAcademyViewModel
}(UTViewModel)
  , UTAcademySlotStatView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTAcademySlotStatView() {
        return e.call(this) || this
    }
    return __extends(UTAcademySlotStatView, e),
    Object.defineProperty(UTAcademySlotStatView.prototype, "title", {
        set: function(e) {
            this.__title.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotStatView.prototype, "deltaValue", {
        set: function(e) {
            this.__deltaValue.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotStatView.prototype, "deltaStarCount", {
        set: function(e) {
            var t = document.createElement("span");
            t.textContent = services.Localization.localize("common.plus.value", [e.toString()]),
            this.__deltaValue.append(t);
            var i = document.createElement("i");
            i.classList.add("star"),
            this.__deltaValue.append(i)
        },
        enumerable: !1,
        configurable: !0
    }),
    UTAcademySlotStatView.prototype.setMaxValue = function(e, t) {
        void 0 === t && (t = !1),
        !JSUtils.isValid(e) || e <= 0 ? this.__maxValue.style.display = "none" : (DOMKit.toggleClass(this.__maxValue, "ut-academy-slot-stat-view--max-value", !0),
        this.__maxValue.style.display = "flex",
        DOMKit.toggleClass(this.__maxValue, "at-cap", t),
        this.__maxValue.textContent = e.toString())
    }
    ,
    Object.defineProperty(UTAcademySlotStatView.prototype, "currentValue", {
        set: function(e) {
            this.__currentValue.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotStatView.prototype, "currentStarCount", {
        set: function(e) {
            for (var t = 0; t < e; t++) {
                var i = document.createElement("i");
                i.classList.add("star"),
                this.__currentValue.append(i)
            }
        },
        enumerable: !1,
        configurable: !0
    }),
    UTAcademySlotStatView
}(EAView));
UTAcademySlotStatView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-slot-stat-view"),
        this.__title = document.createElement("div"),
        this.__title.classList.add("ut-academy-slot-stat-view--title"),
        e.appendChild(this.__title),
        this.__currentValue = document.createElement("div"),
        this.__currentValue.classList.add("ut-academy-slot-stat-view--current"),
        e.appendChild(this.__currentValue),
        this.__deltaValue = document.createElement("div"),
        this.__deltaValue.classList.add("ut-academy-slot-stat-view--delta"),
        e.appendChild(this.__deltaValue),
        this.__maxValue = document.createElement("div"),
        e.appendChild(this.__maxValue),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademySlotStatView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__currentValue = null,
    this.__deltaValue = null,
    this.__maxValue = null
}
,
UTAcademySlotStatView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademySlotActionPanelView = function(t) {
    function UTAcademySlotActionPanelView() {
        var e = t.call(this) || this;
        return e.objectivesList = [],
        e.upgradeList = [],
        e.slotRequirements = null,
        e
    }
    return __extends(UTAcademySlotActionPanelView, t),
    UTAcademySlotActionPanelView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__upgradesTitle.textContent = e.localize("academy.slot.subtitle.upgrades"),
        this._viewPreviewBio.init(),
        this.hidePreviewBioButton(),
        this._viewPreviewBio.addTarget(this, this._eButtonSelected, EventType.TAP)
    }
    ,
    UTAcademySlotActionPanelView.prototype.dealloc = function() {
        this.slotRequirements && (this.slotRequirements.dealloc(),
        this.slotRequirements = null),
        this.clearObjectives(),
        this.clearUpgrades(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTAcademySlotActionPanelView.prototype.setDescription = function(e) {
        this.__description.textContent = e
    }
    ,
    UTAcademySlotActionPanelView.prototype.toggleObjectives = function(e) {
        this.__objectivesTitle.textContent = e ? services.Localization.localize("academy.slot.subtitle.objectives") : "",
        this.__objectives.style.display = e ? "block" : "none"
    }
    ,
    UTAcademySlotActionPanelView.prototype.toggleRequirements = function(e) {
        this.__requirements.style.display = e ? "block" : "none"
    }
    ,
    UTAcademySlotActionPanelView.prototype.toggleTimedEvolution = function(e) {
        this.__timedEvoSection.style.display = e ? "block" : "none"
    }
    ,
    UTAcademySlotActionPanelView.prototype.createObjectiveRow = function(e) {
        var t = new UTObjectiveTaskCondensedView;
        t.init(),
        t.setTitle(e.title),
        t.setProgress(e.progress, e.multiplier),
        e.isCompleted() && t.setComplete(),
        t.hideIcon(),
        this.objectivesList.push(t),
        this.addSubview(t, this.__objectives)
    }
    ,
    UTAcademySlotActionPanelView.prototype.createNoObjectivesRow = function() {
        var e = new UTObjectiveTaskCondensedView;
        e.init(),
        e.setTitle(services.Localization.localize("academy.slot.noChallengeRequired")),
        e.hideIcon(),
        this.objectivesList.push(e),
        this.addSubview(e, this.__objectives)
    }
    ,
    UTAcademySlotActionPanelView.prototype.createLevelStatRow = function(e, t, i) {
        var o = services.Localization
          , n = UTAcademyUtils.mapAttributeIdToLocString(e.type)
          , r = null;
        if (e.isOVR())
            r = this.generateStatBoost({
                title: n,
                delta: e.value,
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isRarity())
            r = this.generateBonusString({
                title: n,
                delta: [o.localize("item.raretype" + e.value)],
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isCosmeticBonus())
            r = this.generateBonusString({
                title: n,
                delta: []
            });
        else if (e.isSkillBonus())
            r = this.generateStarBonus({
                title: n,
                delta: e.value,
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isAttributeBonus())
            r = this.generateStatBoost({
                title: n,
                delta: e.value,
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isPositionBonus())
            r = this.generateBonusString({
                title: o.localize("extendedPlayerInfo.positions"),
                delta: [UTAcademyUtils.mapAttributeIdToLocString(e.type)],
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isSubAttributeBonus())
            r = this.generateStatBoost({
                title: n,
                delta: e.value,
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isTraitBonus())
            r = this.generateBonusString({
                title: o.localize(e.isPlusPlayStyle() ? "search.filters.traits.icontraits" : "extendedPlayerInfo.tab.traits"),
                delta: [UTAcademyUtils.mapAttributeIdToLocString(e.type)],
                maxValue: e.maxValue,
                playerFinalStatValue: t
            });
        else if (e.isRoleUpgrade()) {
            var a = UTAcademyUtils.getPlayerRoleFromAcademyStatEnum(e.type)
              , s = UTAcademyUtils.mapAttributeIdToLocString(e.type);
            r = this.generateRoleUpgrade({
                title: s,
                role: UTLocalizationUtil.mapTacticRoleToLocString(a, i)
            }, e.value)
        }
        r && (this.upgradeList.push(r),
        this.addSubview(r, this.__upgrades))
    }
    ,
    UTAcademySlotActionPanelView.prototype.generateStatBoost = function(e) {
        var t = new UTAcademySlotStatView;
        t.title = e.title,
        t.deltaValue = " +" + e.delta.toString();
        var i = !1;
        return JSUtils.isValid(e.maxValue) && (i = e.maxValue <= e.playerFinalStatValue),
        t.setMaxValue(e.maxValue, i),
        t
    }
    ,
    UTAcademySlotActionPanelView.prototype.generateBonusString = function(e) {
        var t = services.Localization
          , i = new UTAcademySlotStatView;
        i.title = e.title,
        i.deltaValue = t.locale.isRTL() ? e.delta.join(" ,") : e.delta.join(", ");
        var o = !1;
        return JSUtils.isValid(e.maxValue) && JSUtils.isValid(e.playerFinalStatValue) && (o = e.maxValue <= e.playerFinalStatValue),
        i.setMaxValue(e.maxValue, o),
        i
    }
    ,
    UTAcademySlotActionPanelView.prototype.generateStarBonus = function(e) {
        var t = new UTAcademySlotStatView;
        t.title = e.title,
        t.deltaStarCount = e.delta;
        var i = !1;
        return JSUtils.isValid(e.maxValue) && (i = e.maxValue <= e.playerFinalStatValue),
        t.setMaxValue(e.maxValue, i),
        t
    }
    ,
    UTAcademySlotActionPanelView.prototype.generateRoleUpgrade = function(e, t) {
        var i = new UTAcademySlotRoleUpgradeView;
        return i.position = e.title,
        i.bonus = e.role,
        i.plus = t,
        i
    }
    ,
    UTAcademySlotActionPanelView.prototype.setSummaryRewards = function(u) {
        var e, t, i, o, n = this, r = u.getAllSlotRewards();
        this.__objectives.style.display = "none";
        var p, h, _, a = services.Localization, m = [], T = [], g = [], y = 0, v = 0, S = 0, w = 0, C = null, f = !1, E = new EAHashTable, b = new EAHashTable, V = new EAHashTable;
        if (r.forEach(function(e) {
            var t, i, o, n;
            if (e.isOVR() || e.isAttributeBonus() || e.isSubAttributeBonus()) {
                var r = UTAcademyUtils.mapAttributeIdToLocString(e.type)
                  , a = E.get(e.type)
                  , s = e.value + (null !== (t = null == a ? void 0 : a.delta) && void 0 !== t ? t : 0);
                E.set(e.type, {
                    type: e.type,
                    title: r,
                    delta: s,
                    maxValue: e.maxValue
                })
            } else if (e.isRarity())
                C = e.value;
            else if (e.isCosmeticBonus())
                f = !0;
            else if (e.isSkillBonus())
                e.type === AcademyStatEnum.WEAK_FOOT ? (S += e.value,
                w = null !== (i = e.maxValue) && void 0 !== i ? i : -1) : e.type === AcademyStatEnum.SKILL_MOVES && (y += e.value,
                v = null !== (o = e.maxValue) && void 0 !== o ? o : -1);
            else if (e.isPositionBonus())
                m.push(UTAcademyUtils.mapAttributeIdToLocString(e.type)),
                p = e.maxValue;
            else if (e.isTraitBonus()) {
                var l = UTAcademyUtils.mapAttributeIdToLocString(e.type);
                e.isPlusPlayStyle() ? (g.push(l),
                _ = e.maxValue) : (T.push(l),
                h = e.maxValue)
            } else if (e.isRoleUpgrade()) {
                var c = UTAcademyUtils.getPlayerRoleFromAcademyStatEnum(e.type)
                  , d = (r = UTAcademyUtils.mapAttributeIdToLocString(e.type),
                JSUtils.isValid(null === (n = u.player) || void 0 === n ? void 0 : n.gender) ? u.player.gender : GrammaticalGender.NEUTER);
                e.value === AcademyTacticRoleBonusValue.PLUS ? b.set(e.type, {
                    position: r,
                    role: UTLocalizationUtil.mapTacticRoleToLocString(c, d)
                }) : e.value === AcademyTacticRoleBonusValue.PLUS_PLUS && V.set(e.type, {
                    position: r,
                    role: UTLocalizationUtil.mapTacticRoleToLocString(c, d)
                })
            }
        }),
        C && this.upgradeList.push(this.generateBonusString({
            title: a.localize("extendedPlayerInfo.general.rarity"),
            delta: [a.localize("item.raretype" + C)]
        })),
        f && this.upgradeList.push(this.generateBonusString({
            title: UTAcademyUtils.mapAttributeIdToLocString(AcademyStatEnum.COSMETIC_UPGRADE),
            delta: []
        })),
        S) {
            var s = UTAcademyUtils.getPlayerFinalStatValue(this.getLastLevelBoostedPlayerByAwardType(u, AcademyStatEnum.WEAK_FOOT), UTAcademySlotActionPanelView.getIncompleteAwardByType(AcademyStatEnum.WEAK_FOOT));
            this.upgradeList.push(this.generateStarBonus({
                title: a.localize("item.subattribute.weakfoot"),
                delta: S,
                maxValue: w,
                playerFinalStatValue: s
            }))
        }
        if (y) {
            s = UTAcademyUtils.getPlayerFinalStatValue(this.getLastLevelBoostedPlayerByAwardType(u, AcademyStatEnum.SKILL_MOVES), UTAcademySlotActionPanelView.getIncompleteAwardByType(AcademyStatEnum.SKILL_MOVES));
            this.upgradeList.push(this.generateStarBonus({
                title: a.localize("item.subattribute.skillmove"),
                delta: y,
                maxValue: v,
                playerFinalStatValue: s
            }))
        }
        if (0 < m.length) {
            var l = null === (t = null === (e = this.getSlotLastLevelBoostedPlayer(u)) || void 0 === e ? void 0 : e.possiblePositions) || void 0 === t ? void 0 : t.length;
            this.upgradeList.push(this.generateBonusString({
                title: a.localize("extendedPlayerInfo.positions"),
                delta: [a.locale.isRTL() ? m.join(" ,") : m.join(", ")],
                maxValue: p,
                playerFinalStatValue: l
            }))
        }
        if (0 < T.length) {
            var c = null === (i = this.getSlotLastLevelBoostedPlayer(u)) || void 0 === i ? void 0 : i.getNumBasicPlayStyles();
            this.upgradeList.push(this.generateBonusString({
                title: a.localize("extendedPlayerInfo.signatureAbility.baseTrait"),
                delta: [a.locale.isRTL() ? T.join(" ,") : T.join(", ")],
                maxValue: h,
                playerFinalStatValue: c
            }))
        }
        if (0 < g.length) {
            var d = null === (o = this.getSlotLastLevelBoostedPlayer(u)) || void 0 === o ? void 0 : o.getNumPlusPlayStyles();
            this.upgradeList.push(this.generateBonusString({
                title: a.localize("extendedPlayerInfo.signatureAbility.iconTrait"),
                delta: [a.locale.isRTL() ? g.join(" ,") : g.join(", ")],
                maxValue: _,
                playerFinalStatValue: d
            }))
        }
        E.forEach(function(e) {
            var t = UTAcademyUtils.getPlayerFinalStatValue(n.getLastLevelBoostedPlayerByAwardType(u, e.type), UTAcademySlotActionPanelView.getIncompleteAwardByType(e.type));
            n.upgradeList.push(n.generateStatBoost({
                title: e.title,
                delta: e.delta,
                maxValue: e.maxValue,
                playerFinalStatValue: t
            }))
        }),
        0 < b.length && b.map(function(e) {
            n.upgradeList.push(n.generateRoleUpgrade({
                title: e.position,
                role: e.role
            }, AcademyTacticRoleBonusValue.PLUS))
        }),
        0 < V.length && V.map(function(e) {
            n.upgradeList.push(n.generateRoleUpgrade({
                title: e.position,
                role: e.role
            }, AcademyTacticRoleBonusValue.PLUS_PLUS))
        }),
        this.upgradeList.map(function(e) {
            n.addSubview(e, n.__upgrades)
        })
    }
    ,
    UTAcademySlotActionPanelView.prototype.getLastLevelBoostedPlayerByAwardType = function(e, t) {
        for (var i = e.levels.length - 1; -1 < i; i--) {
            var o = e.levels[i];
            if (o.awards.some(function(e) {
                return e.type === t
            }))
                return o.boostedPlayer
        }
        return null
    }
    ,
    UTAcademySlotActionPanelView.prototype.renderRequirementsList = function(e) {
        this.__requirementsTitle.textContent = services.Localization.localize(0 < e.length ? "academy.slot.req.description" : "academy.slot.req.empty-description"),
        this.slotRequirements || (this.slotRequirements = new UTAcademySlotRequirementsView,
        this.slotRequirements.renderRequirements(e),
        this.addSubview(this.slotRequirements, this.__requirements))
    }
    ,
    UTAcademySlotActionPanelView.prototype.setTimedEvoTitle = function(e) {
        this.__timedEvoSectionTitle.textContent = e
    }
    ,
    UTAcademySlotActionPanelView.prototype.renderTimedEvolutionSection = function(e, t) {
        this._timeStat.title = e,
        this.updateTimeLabel(t)
    }
    ,
    UTAcademySlotActionPanelView.prototype.updateTimeLabel = function(e) {
        this._timeStat.deltaValue = e
    }
    ,
    UTAcademySlotActionPanelView.prototype.setTimedEvolutionObjectiveDescription = function(e) {
        this._timeStat.title = e
    }
    ,
    UTAcademySlotActionPanelView.prototype.clearObjectives = function() {
        0 < this.objectivesList.length && (this.objectivesList.forEach(function(e) {
            return e.dealloc()
        }),
        this.objectivesList = [])
    }
    ,
    UTAcademySlotActionPanelView.prototype.clearUpgrades = function() {
        0 < this.upgradeList.length && (this.upgradeList.forEach(function(e) {
            return e.dealloc()
        }),
        this.upgradeList = [])
    }
    ,
    UTAcademySlotActionPanelView.prototype.hidePreviewBioButton = function() {
        this._viewPreviewBio.setDisplay(!1)
    }
    ,
    UTAcademySlotActionPanelView.prototype.renderPreviewBioButton = function(e) {
        var t = services.Localization.localize("academy.slotpanel.viewpreviewbio", [], {
            gender: e
        });
        this._viewPreviewBio.setDisplay(!0),
        this._viewPreviewBio.setText(t)
    }
    ,
    UTAcademySlotActionPanelView.prototype._eButtonSelected = function(e, t, i) {
        e === this._viewPreviewBio && this._triggerActions(UTAcademySlotActionPanelView.Event.PREVIEW_BIO)
    }
    ,
    UTAcademySlotActionPanelView.getIncompleteAwardByType = function(e) {
        return new UTAcademyAwardEntity({
            id: e,
            delta: -1,
            level: -1,
            maxValue: -1,
            customLayers: []
        })
    }
    ,
    UTAcademySlotActionPanelView.prototype.getSlotLastLevelBoostedPlayer = function(e) {
        var t;
        return null === (t = e.levels[e.levels.length - 1]) || void 0 === t ? void 0 : t.boostedPlayer
    }
    ,
    UTAcademySlotActionPanelView.Event = Object.freeze({
        PREVIEW_BIO: "UTAcademySlotActionPanelView.Event.PREVIEW_BIO"
    }),
    UTAcademySlotActionPanelView
}(EATargetActionView);
UTAcademySlotActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-slot-action-panel-view");
        var t = document.createElement("div");
        t.classList.add("ut-academy-slot-action-panel-view--content");
        var i = document.createElement("div");
        i.classList.add("ut-academy-slot-action-panel-view--description"),
        this.__description = document.createElement("p"),
        i.appendChild(this.__description),
        t.appendChild(i),
        this.__itemActions = document.createElement("div"),
        this.__itemActions.classList.add("ut-button-group"),
        this._viewPreviewBio = new UTGroupButtonControl,
        this._viewPreviewBio.getRootElement().classList.add("more"),
        this.__itemActions.appendChild(this._viewPreviewBio.getRootElement()),
        t.appendChild(this.__itemActions),
        this.__requirements = document.createElement("div"),
        this.__requirements.classList.add("ut-academy-slot-action-panel-view--requirements"),
        this.__requirementsTitle = document.createElement("h2"),
        this.__requirementsTitle.classList.add("ut-academy-slot-action-panel-view--subtitle"),
        this.__requirements.appendChild(this.__requirementsTitle),
        t.appendChild(this.__requirements),
        this.__upgrades = document.createElement("div"),
        this.__upgrades.classList.add("ut-academy-slot-action-panel-view--upgrades"),
        this.__upgradesTitle = document.createElement("h2"),
        this.__upgradesTitle.classList.add("ut-academy-slot-action-panel-view--subtitle"),
        this.__upgrades.appendChild(this.__upgradesTitle),
        t.appendChild(this.__upgrades),
        this.__objectives = document.createElement("div"),
        this.__objectives.classList.add("ut-academy-slot-action-panel-view--objectives"),
        this.__objectivesTitle = document.createElement("h2"),
        this.__objectivesTitle.classList.add("ut-academy-slot-action-panel-view--subtitle"),
        this.__objectives.appendChild(this.__objectivesTitle),
        t.appendChild(this.__objectives),
        this.__timedEvoSection = document.createElement("div"),
        this.__timedEvoSection.classList.add("ut-academy-slot-action-panel-view--timed-evo"),
        this.__timedEvoSectionTitle = document.createElement("h2"),
        this.__timedEvoSectionTitle.classList.add("ut-academy-slot-action-panel-view--subtitle"),
        this.__timedEvoSection.appendChild(this.__timedEvoSectionTitle),
        this._timeStat = new UTAcademySlotStatView,
        this._timeStat.getRootElement().classList.add("ut-academy-slot-stat-view--time"),
        this._timeStat.getRootElement().classList.add("ut-academy-slot-stat-view"),
        this.__timedEvoSection.appendChild(this._timeStat.getRootElement()),
        t.appendChild(this.__timedEvoSection),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademySlotActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null,
    this.__itemActions = null,
    this._viewPreviewBio.destroy(),
    this.__requirements = null,
    this.__requirementsTitle = null,
    this.__upgrades = null,
    this.__upgradesTitle = null,
    this.__objectives = null,
    this.__objectivesTitle = null,
    this.__timedEvoSection = null,
    this.__timedEvoSectionTitle = null,
    this._timeStat.destroy()
}
,
UTAcademySlotActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademySlotCanvasView = function(t) {
    function UTAcademySlotCanvasView() {
        var e = t.call(this) || this;
        return e.assets = new EAHashTable,
        e.cosmeticPaths = [],
        e.ctx = null,
        e.loaded = 0,
        e.rarityPath = AssetLocationUtils.getLocalShellUri(!1, ItemRarity.DEFAULT, ItemRatingTier.NONE, ItemViewSize.LARGE),
        e
    }
    return __extends(UTAcademySlotCanvasView, t),
    UTAcademySlotCanvasView.prototype._generate = function() {
        this.__root = document.createElement("canvas")
    }
    ,
    UTAcademySlotCanvasView.prototype.destroyGeneratedElements = function() {
        this.__root && DOMKit.remove(this.__root),
        this.__root = null
    }
    ,
    UTAcademySlotCanvasView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = this.getRootElement();
        this.ctx = e.getContext("2d"),
        this.ctx && (this.ctx.globalCompositeOperation = "source-over")
    }
    ,
    UTAcademySlotCanvasView.prototype.dealloc = function() {
        this.assets.clear(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTAcademySlotCanvasView.prototype.setRarity = function(e) {
        e.id === ItemRarity.DEFAULT ? this.rarityPath = AssetLocationUtils.getLocalShellUri(!1, ItemRarity.DEFAULT, ItemRatingTier.NONE, ItemViewSize.LARGE) : this.rarityPath = AssetLocationUtils.getShellUri(ItemViewSize.LARGE, 1, e.id, !0 === e.levels ? ItemRatingTier.GOLD : ItemRatingTier.NONE, e.getGuid())
    }
    ,
    UTAcademySlotCanvasView.prototype.setCosmeticUpgrades = function(e) {
        var i = this;
        this.cosmeticPaths = [],
        e.sort(function(e, t) {
            return UTAcademySlotCanvasView.LAYER_ORDER.indexOf(e.type) - UTAcademySlotCanvasView.LAYER_ORDER.indexOf(t.type)
        }).forEach(function(e) {
            var t = AssetLocationUtils.getCosmeticLayerUri(e);
            i.cosmeticPaths.push(t)
        })
    }
    ,
    UTAcademySlotCanvasView.prototype.render = function() {
        var o = this;
        this.assets.clear(),
        this.loaded = 0;
        var e = new Image;
        e.src = this.rarityPath,
        e.onload = function() {
            var e = o.assets.get(o.rarityPath);
            e && (e.success = !0),
            o.handleImageLoad()
        }
        ,
        e.onerror = function() {
            return o.handleImageLoad()
        }
        ,
        this.assets.set(this.rarityPath, {
            img: e,
            order: 0,
            success: !1
        }),
        this.cosmeticPaths.forEach(function(t, e) {
            var i = new Image;
            i.src = t,
            i.onload = function() {
                var e = o.assets.get(t);
                e && (e.success = !0),
                o.handleImageLoad()
            }
            ,
            i.onerror = function() {
                return o.handleImageLoad()
            }
            ,
            o.assets.set(t, {
                img: i,
                order: e + 1,
                success: !1
            })
        })
    }
    ,
    UTAcademySlotCanvasView.prototype.drawAssets = function() {
        var e, t, i = this, o = this.getRootElement(), n = this.getCanvasScaling();
        o.width = 144 * n,
        o.height = 200 * n,
        o.style.width = "144px",
        o.style.height = "200px",
        null === (e = this.ctx) || void 0 === e || e.clearRect(0, 0, o.width, o.height),
        null === (t = this.ctx) || void 0 === t || t.scale(n, n),
        this.assets.values().sort(function(e, t) {
            return e.order - t.order
        }).forEach(function(e) {
            var t;
            e.img.complete && e.success && (null === (t = i.ctx) || void 0 === t || t.drawImage(e.img, 0, 0, e.img.width || 144, e.img.height || 200, 0, 0, 144, 200))
        })
    }
    ,
    UTAcademySlotCanvasView.prototype.handleImageLoad = function() {
        var e = this.cosmeticPaths.length + 1;
        this.loaded++,
        this.loaded === e && this.drawAssets()
    }
    ,
    UTAcademySlotCanvasView.prototype.getCanvasScaling = function() {
        return 1 === window.devicePixelRatio ? 1.5 * window.devicePixelRatio : window.devicePixelRatio
    }
    ,
    UTAcademySlotCanvasView.LAYER_ORDER = [ItemLayerType.BG_FRAME, ItemLayerType.EMBELLISHMENT, ItemLayerType.ANIMATION, ItemLayerType.VFX, ItemLayerType.SFX],
    UTAcademySlotCanvasView
}(EAView)
  , __spreadArrays = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
this && this.__spreadArrays || function() {
    for (var e = 0, t = 0, i = arguments.length; t < i; t++)
        e += arguments[t].length;
    var o = Array(e)
      , n = 0;
    for (t = 0; t < i; t++)
        for (var r = arguments[t], a = 0, s = r.length; a < s; a++,
        n++)
            o[n] = r[a];
    return o
}
)
  , UTAcademySlotItemDetailsView = function(t) {
    function UTAcademySlotItemDetailsView() {
        var e = t.call(this) || this;
        return e.items = new EAIterator([]),
        e._btnBuyCoins = null,
        e._btnBuyPoints = null,
        e._btnConfirmPlayer = null,
        e._btnPreviewPlayer = null,
        e._btnResumeSlot = null,
        e._btnCancelTimedEvo = null,
        e
    }
    return __extends(UTAcademySlotItemDetailsView, t),
    UTAcademySlotItemDetailsView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.clearActionButtons()
    }
    ,
    UTAcademySlotItemDetailsView.prototype.destroyCarousel = function() {
        DOMKit.toggleDisplayStyle(this._tnsCarousel.getRootElement(), !1),
        this._tnsCarousel.teardown(this.getRootElement())
    }
    ,
    UTAcademySlotItemDetailsView.prototype.renderCarousel = function(o, n) {
        var r = this;
        if (this._tnsCarousel.isOn()) {
            var e = this.items.getIndex()
              , t = this.items.get(e);
            if (t) {
                var i = this.generateCarouselItem(o, n[e], t, e);
                this._tnsCarousel.dynamicSlideChange(e, i)
            }
        } else {
            var a = new TNSPropertiesDTO;
            a.nav = !0,
            a.preventActionWhenRunning = !0,
            a.startIndex = 0,
            a.controls = !0,
            a.loop = !1,
            a.container = this._tnsCarousel.getRootElement(),
            this.items.values().forEach(function(e, t) {
                services.Localization;
                var i = r.generateCarouselItem(o, n[t], e, t);
                r._tnsCarousel.appendElem(i)
            }),
            this._tnsCarousel.setup(a),
            this._tnsCarousel.afterChange(function(e) {
                r.items.setIndex(e),
                r.updatePrevNextState(),
                r._triggerActions(UTAcademySlotItemDetailsView.Event.INDEX_CHANGE, {
                    index: e
                })
            }),
            this.updatePrevNextState()
        }
    }
    ,
    UTAcademySlotItemDetailsView.prototype.generateCarouselItem = function(e, t, i, o) {
        var n = services.Localization
          , r = document.createElement("div");
        if (r.appendChild(i.getRootElement()),
        e) {
            var a = document.createElement("p")
              , s = document.createElement("p")
              , l = 0 === o ? "academy.itemdetails.final.label" : "academy.itemdetails.mastery.label"
              , c = o.toString();
            a.textContent = n.localize(l, [c], {
                gender: t
            }),
            s.textContent = n.localize("academy.itemdetails.untradeable.label"),
            DOMKit.addClass(a, "ut-academy-slot-item-details-view--carousel-label"),
            DOMKit.addClass(s, "ut-academy-slot-item-details-view--carousel-label"),
            r.appendChild(a),
            r.appendChild(s)
        }
        return r
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setLevels = function(e, t) {
        var i, o = this, n = __spreadArrays([null !== (i = e[e.length - 1].boostedPlayer) && void 0 !== i ? i : new UTNullItemEntity], e.map(function(e) {
            var t;
            return null !== (t = e.boostedPlayer) && void 0 !== t ? t : new UTNullItemEntity
        })), r = n.map(function(e) {
            return o._generateItemView(e)
        }), a = n.map(function(e) {
            return e.gender
        });
        this.items.resetCollection(r),
        this.items.setIndex(t),
        DOMKit.toggleDisplayStyle(this._tnsCarousel.getRootElement(), !0),
        this.renderCarousel(!0, a),
        this._tnsCarousel.goTo(t)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setEmptyCosmeticLevels = function(e, t) {
        var i = [];
        e.forEach(function(e) {
            var t = new UTAcademySlotCanvasView;
            t.init(),
            t.setCosmeticUpgrades(e.cosmetics),
            t.toggleClass("rare-shell", !0),
            e.rarity && t.setRarity(e.rarity),
            t.render(),
            i.push(t)
        }),
        this.items.resetCollection(i),
        this.items.setIndex(t);
        var o = i.map(function(e) {
            return 0
        });
        DOMKit.toggleDisplayStyle(this._tnsCarousel.getRootElement(), !0),
        this.renderCarousel(!0, o),
        this._tnsCarousel.goTo(t)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.clearActionButtons = function() {
        this._btnBuyCoins && (this._btnBuyCoins.dealloc(),
        this._btnBuyCoins = null),
        this._btnBuyPoints && (this._btnBuyPoints.dealloc(),
        this._btnBuyPoints = null),
        this._btnConfirmPlayer && (this._btnConfirmPlayer.dealloc(),
        this._btnConfirmPlayer = null),
        this._btnPreviewPlayer && (this._btnPreviewPlayer.dealloc(),
        this._btnPreviewPlayer = null),
        this._btnResumeSlot && (this._btnResumeSlot.dealloc(),
        this._btnResumeSlot = null),
        this._btnCancelTimedEvo && (this._btnCancelTimedEvo.dealloc(),
        this._btnCancelTimedEvo = null)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.appendActionButton = function(e) {
        this.__ctaButtonContainer.appendChild(e.getRootElement())
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setupBuyCoinButton = function(e) {
        var t = services.Localization;
        this._btnBuyCoins || (this._btnBuyCoins = new UTCurrencyButtonControl,
        this._btnBuyCoins.init(),
        this._btnBuyCoins.setCurrencyType(GameCurrency.COINS),
        this._btnBuyCoins.setSubText(t.localize("currency.coins")),
        this._btnBuyCoins.addClass("call-to-action"),
        this._btnBuyCoins.addTarget(this, this._eButtonSelected, EventType.TAP),
        this.appendActionButton(this._btnBuyCoins)),
        this._btnBuyCoins.setText(t.localizeNumber(e))
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setupBuyPointsButton = function(e) {
        var t = services.Localization;
        this._btnBuyPoints || (this._btnBuyPoints = new UTCurrencyButtonControl,
        this._btnBuyPoints.init(),
        this._btnBuyPoints.setCurrencyType(GameCurrency.POINTS),
        this._btnBuyPoints.setSubText(t.localize("currency.points")),
        this._btnBuyPoints.addClass("call-to-action"),
        this._btnBuyPoints.addTarget(this, this._eButtonSelected, EventType.TAP),
        this.appendActionButton(this._btnBuyPoints)),
        this._btnBuyPoints.setText(t.localizeNumber(e))
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setupConfirmPlayerButton = function(e) {
        var t = services.Localization.localize("academy.slot.btn.confirmplayer", [], {
            gender: e
        });
        this._btnConfirmPlayer || (this._btnConfirmPlayer = new UTStandardButtonControl,
        this._btnConfirmPlayer.init(),
        this._btnConfirmPlayer.addClass("call-to-action"),
        this._btnConfirmPlayer.addTarget(this, this._eButtonSelected, EventType.TAP),
        this.appendActionButton(this._btnConfirmPlayer)),
        this._btnConfirmPlayer.setText(t)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setupResumeSlotButton = function() {
        if (!this._btnResumeSlot) {
            var e = services.Localization;
            this._btnResumeSlot = new UTStandardButtonControl,
            this._btnResumeSlot.init(),
            this._btnResumeSlot.setText(e.localize("academy.slot.btn.resumeslot")),
            this._btnResumeSlot.addClass("call-to-action"),
            this._btnResumeSlot.addTarget(this, this._eButtonSelected, EventType.TAP),
            this.appendActionButton(this._btnResumeSlot)
        }
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setupCancelTimedEvoButton = function() {
        if (!this._btnCancelTimedEvo) {
            var e = services.Localization;
            this._btnCancelTimedEvo = new UTStandardButtonControl,
            this._btnCancelTimedEvo.init(),
            this._btnCancelTimedEvo.setText(e.localize("academy.slot.btn.cancelTimed")),
            this._btnCancelTimedEvo.addClass("call-to-action"),
            this._btnCancelTimedEvo.addTarget(this, this._eButtonSelected, EventType.TAP),
            this.appendActionButton(this._btnCancelTimedEvo)
        }
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setupPreviewPlayerButton = function(e, t) {
        if (void 0 === t && (t = !0),
        !this._btnPreviewPlayer) {
            if (this._btnPreviewPlayer = new UTStandardButtonControl,
            t) {
                var i = services.Localization.localize("academy.slot.btn.preview");
                this._btnPreviewPlayer.setText(i),
                this._btnPreviewPlayer.addClass("expanded")
            }
            e && this._btnPreviewPlayer.addClass("call-to-action"),
            this._btnPreviewPlayer.init(),
            this._btnPreviewPlayer.addClass("preview-player"),
            this._btnPreviewPlayer.addTarget(this, this._eButtonSelected, EventType.TAP),
            this.appendActionButton(this._btnPreviewPlayer)
        }
    }
    ,
    UTAcademySlotItemDetailsView.prototype.togglePreviewButtonState = function(e) {
        var t;
        null === (t = this._btnPreviewPlayer) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.togglePreviewButtonDisplay = function(e) {
        var t;
        null === (t = this._btnPreviewPlayer) || void 0 === t || t.setDisplay(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.toggleConfirmButtonState = function(e) {
        var t;
        null === (t = this._btnConfirmPlayer) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.toggleResumeButtonState = function(e) {
        var t;
        null === (t = this._btnResumeSlot) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.toggleCancelTimedEvoButtonState = function(e) {
        var t;
        null === (t = this._btnCancelTimedEvo) || void 0 === t || t.setDisplay(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setCoinsButtonState = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setPointsButtonState = function(e) {
        var t;
        null === (t = this._btnBuyPoints) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.updatePrevNextState = function() {
        if (this.items) {
            var e = !this.items.startOfList
              , t = !this.items.endOfList;
            DOMKit.toggleDisplayStyle(this.__btnPrev, e),
            DOMKit.toggleDisplayStyle(this.__btnNext, t),
            this.__btnNext.style.opacity = t ? "1" : "0",
            this.__btnPrev.style.opacity = e ? "1" : "0"
        }
    }
    ,
    UTAcademySlotItemDetailsView.prototype._generateItemView = function(e) {
        var t = factories.ItemView.createLargeItem(e);
        return t.renderSfx = !0,
        t.init(),
        t.render(e),
        t
    }
    ,
    UTAcademySlotItemDetailsView.prototype.appendPanel = function(e) {
        this.removeSubviews(),
        this.addSubview(e, this.__content)
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setSummaryBanner = function() {
        DOMKit.removeClass(this.__levelLabel, "locked complete"),
        this.__levelLabel.textContent = services.Localization.localize("academy.itemdetails.header.summary")
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setLevelHeaderContent = function(e, t) {
        this.__levelLabel.textContent = services.Localization.localize("academy.itemdetails.header.currentlevel", [e.toString(), t.length.toString()])
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setLevelHeaderIcon = function(e) {
        DOMKit.removeClass(this.__levelLabel, "locked complete"),
        e === AcademySlotLevelState.NOT_STARTED ? DOMKit.addClass(this.__levelLabel, "locked") : e === AcademySlotLevelState.COMPLETED && DOMKit.addClass(this.__levelLabel, "complete")
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setEvolutionsTime = function(e) {
        var t = services.Localization
          , i = "";
        DOMKit.removeClass(this.__enrolment, "enrolment expired expiry expiring alarm-txt"),
        e <= 0 ? (i = t.localize("academy.timer.slot.expired"),
        DOMKit.addClass(this.__enrolment, "expired")) : i = e > AUCTION_COUNTDOWN_THRESHOLD ? t.localizeAuctionTimeRemaining(e) : (0 < e && e < AUCTION_COUNTDOWN_FLASING_THRESHOLD && (DOMKit.addClass(this.__enrolment, "alarm-txt"),
        e <= AUCTION_COUNTDOWN_ALERT_THRESHOLD && DOMKit.addClass(this.__enrolment, "expiring")),
        t.localizeTimeRemaining(e)),
        this.__enrolment.textContent = services.Localization.localize("academy.itemdetails.header.evolutions", [i]),
        DOMKit.addClass(this.__enrolment, "expiry")
    }
    ,
    UTAcademySlotItemDetailsView.prototype.setEnrolmentTime = function(e) {
        var t = services.Localization
          , i = "";
        DOMKit.removeClass(this.__enrolment, "enrolment expired expiry expiring alarm-txt"),
        e <= 0 ? (i = t.localize("academy.timer.slot.expired"),
        DOMKit.addClass(this.__enrolment, "expired")) : i = e > AUCTION_COUNTDOWN_THRESHOLD ? t.localizeAuctionTimeRemaining(e) : (0 < e && e < AUCTION_COUNTDOWN_FLASING_THRESHOLD && (DOMKit.addClass(this.__enrolment, "alarm-txt"),
        e <= AUCTION_COUNTDOWN_ALERT_THRESHOLD && DOMKit.addClass(this.__enrolment, "expiring")),
        t.localizeTimeRemaining(e)),
        this.__enrolment.textContent = t.localize("academy.itemdetails.header.enrollment", [i]),
        DOMKit.addClass(this.__enrolment, "enrolment")
    }
    ,
    UTAcademySlotItemDetailsView.prototype.toggleHeaderDisplay = function(e) {
        DOMKit.toggleDisplayStyle(this.__header, e)
    }
    ,
    UTAcademySlotItemDetailsView.prototype._tapDetected = function(e) {
        this.items && (e.target === this.__btnPrev ? (this.items.previous(),
        this._tnsCarousel.goTo(this.items.getIndex())) : e.target === this.__btnNext && (this.items.next(),
        this._tnsCarousel.goTo(this.items.getIndex())))
    }
    ,
    UTAcademySlotItemDetailsView.prototype._eButtonSelected = function(e, t, i) {
        e === this._btnPreviewPlayer ? this._triggerActions(UTAcademySlotItemDetailsView.Event.PREVIEW_PLAYER) : e === this._btnConfirmPlayer ? this._triggerActions(UTAcademySlotItemDetailsView.Event.CONFIRM_PLAYER) : e === this._btnBuyCoins ? this._triggerActions(UTAcademySlotItemDetailsView.Event.BUY_COINS) : e === this._btnBuyPoints ? this._triggerActions(UTAcademySlotItemDetailsView.Event.BUY_POINTS) : e === this._btnResumeSlot ? this._triggerActions(UTAcademySlotItemDetailsView.Event.RESUME_SLOT) : e === this._btnCancelTimedEvo && this._triggerActions(UTAcademySlotItemDetailsView.Event.CANCEL_TIMED_EVOLUTION)
    }
    ,
    UTAcademySlotItemDetailsView.Event = Object.freeze({
        INDEX_CHANGE: "UTAcademySlotItemDetailsView.Event.INDEX_CHANGE",
        CONFIRM_PLAYER: "UTAcademySlotItemDetailsView.Event.VIEW_CONFIRM_PLAYER",
        PREVIEW_PLAYER: "UTAcademySlotItemDetailsView.Event.PREVIEW_PLAYER",
        BUY_COINS: "UTAcademySlotItemDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTAcademySlotItemDetailsView.Event.BUY_POINTS",
        RESUME_SLOT: "UTAcademySlotItemDetailsView.Event.RESUME_SLOT",
        CANCEL_TIMED_EVOLUTION: "UTAcademySlotItemDetailsView.Event.CANCEL_TIMED"
    }),
    UTAcademySlotItemDetailsView
}(EATargetActionView);
UTAcademySlotItemDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-slot-item-details-view"),
        e.classList.add("DetailView"),
        this.__content = document.createElement("div"),
        this.__content.classList.add("ut-academy-slot-item-details-view--content"),
        this.__header = document.createElement("div"),
        this.__header.classList.add("ut-academy-slot-item-details-view--header"),
        this.__levelLabel = document.createElement("p"),
        this.__levelLabel.classList.add("levelLabel"),
        this.__header.appendChild(this.__levelLabel),
        this.__enrolment = document.createElement("p"),
        this.__enrolment.classList.add("ut-academy-slot-item-details-view--expiry"),
        this.__header.appendChild(this.__enrolment),
        this.__content.appendChild(this.__header);
        var t = document.createElement("div");
        t.classList.add("item-carousel"),
        this.__btnPrev = document.createElement("a"),
        this.__btnPrev.classList.add("tapLeft"),
        t.appendChild(this.__btnPrev),
        this._tnsCarousel = new TNSContainerView,
        t.appendChild(this._tnsCarousel.getRootElement()),
        this.__btnNext = document.createElement("a"),
        this.__btnNext.classList.add("tapRight"),
        t.appendChild(this.__btnNext),
        this.__content.appendChild(t),
        e.appendChild(this.__content),
        this.__ctaButtonContainer = document.createElement("div"),
        this.__ctaButtonContainer.classList.add("ut-academy-slot-item-details-view--footer"),
        e.appendChild(this.__ctaButtonContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademySlotItemDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__content = null,
    this.__header = null,
    this.__levelLabel = null,
    this.__enrolment = null,
    this.__btnPrev = null,
    this._tnsCarousel.destroy(),
    this.__btnNext = null,
    this.__ctaButtonContainer = null
}
,
UTAcademySlotItemDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademyClubSearchResultsView = function(e) {
    function UTAcademyClubSearchResultsView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTAcademyClubSearchResultsView, e),
    UTAcademyClubSearchResultsView.prototype.setEmptyListMessage = function(e) {
        var t = services.Localization;
        this._list.appendEmptyListMessage(t.localize("academy.search.notfound"), t.localize("academy.search.notfound.desc"))
    }
    ,
    UTAcademyClubSearchResultsView
}(UTClubSearchResultsView)
  , UTAcademyPlayerFromClubViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTAcademyPlayerFromClubViewController(e, t) {
        var i = o.call(this) || this;
        return i.academySlot = e,
        i.viewmodel = t,
        i
    }
    return __extends(UTAcademyPlayerFromClubViewController, o),
    UTAcademyPlayerFromClubViewController.prototype.viewWillAppear = function() {
        var i = this;
        services.Squad.requestSquadByType("active").observe(this, function(e, t) {
            e.unobserve(i),
            t.success && t.data && t.data.squad && i.getView().setActiveSquadData(t.data.squad);
            i.requestItems()
        })
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype.requestItems = function() {
        var n = this;
        if (this.clubViewModel.canShowPage() && !this.clubViewModel.shouldRequestItems())
            this.updateItemList(this.clubViewModel.getPageItems());
        else if (this.searchCriteria) {
            var i = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.ACADEMY_FILTER_ENABLED);
            i && (this.searchCriteria.academySlotId = this.academySlot.id),
            services.Club.search(this.searchCriteria).observe(this, function(e, t) {
                e.unobserve(n),
                t.success && JSUtils.isObject(t.response) ? i ? n.handleItemRetrieval(t.response.items, t.response.retrievedAll) : function(i, o) {
                    var e = i.filter(function(e) {
                        return !e.isCommon()
                    });
                    0 < e.length ? (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
                    services.PlayerMetaData.updateItemPlayerMeta(e).observe(n, function(e, t) {
                        gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
                        n.handleItemRetrieval(i, o)
                    })) : n.handleItemRetrieval(i, o)
                }(t.response.items, t.response.retrievedAll) : t.error && NetworkErrorManager.handleStatus(t.status)
            })
        }
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype._getViewInstanceFromData = function() {
        return new UTAcademyClubSearchResultsView
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype.viewDidAppear = function() {
        var e, t = this.getView();
        t.toggleSubTypesOptions(!1),
        t.updateListTopPosition(),
        t.addTarget(this, this.onCellSelected, enums.UIListEvent.ROW_ACTION),
        t.addTarget(this, o.prototype.onNextPage, enums.UIPaginationEvent.NEXT),
        t.addTarget(this, o.prototype.onPreviousPage, enums.UIPaginationEvent.PREVIOUS),
        TelemetryManager.trackPage(TelemetryManager.Sections.CLUB, "Swap Club Results"),
        isPhone() || null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0)
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.onCellSelected, enums.UIListEvent.ROW_ACTION),
        e.removeTarget(this, this.onNextPage, enums.UIPaginationEvent.NEXT),
        e.removeTarget(this, this.onPreviousPage, enums.UIPaginationEvent.PREVIOUS)
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype.updateItemList = function(e) {
        var t, i, o = this.getView();
        0 < e.length ? o.renderAcademyItems(e, this.academySlot, this.viewmodel.getSlottedPlayers()) : o.setEmptyListMessage(null === (i = null === (t = this.searchCriteria) || void 0 === t ? void 0 : t.isModified()) || void 0 === i || i),
        o.setPaginationState(this.clubViewModel.hasPreviousPage(), this.clubViewModel.hasNextPage()),
        o.setRowActionCallback(),
        o.disableRowTap()
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype.showTimedWarningPopup = function() {
        var e = services.Localization
          , t = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: e.localize("academy.timedslot.limitReachedTitle"),
            title: e.localize("academy.timedslot.limitReachedDescription")
        });
        t.init(),
        t.viewWillAppear(),
        t.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(t)
    }
    ,
    UTAcademyPlayerFromClubViewController.prototype.onCellSelected = function(e, t, i) {
        var h = this;
        i.item && this.viewmodel.getSlotPreview(this.academySlot.id, i.item.id).observe(this, function(e, t) {
            var i, o, n, r;
            if (e.unobserve(h),
            t.success && JSUtils.isObject(t.data))
                if (isPhone()) {
                    var a = h.getNavigationController()
                      , s = null == a ? void 0 : a.getPreviousController(2);
                    a && s instanceof UTAcademySlotItemDetailsViewController ? a.popToViewController(s) : (DebugUtils.Assert(!1, "UTAcademySlotItemDetailsViewController was not found"),
                    null == a || a.popToRootViewController())
                } else
                    getDefaultDispatcher().notify(AppNotification.ACADEMY_ITEM_SELECTED, h, t.data);
            else if (!t.success) {
                var l = void 0
                  , c = services.Localization
                  , d = services.Notification;
                if (NetworkErrorManager.checkCriticalStatus(t.status))
                    NetworkErrorManager.handleStatus(t.status),
                    l = c.localize("academy.preview.loaderror");
                else if (t.status === HttpStatusCode.SERVICE_UNAVAILABLE_ERROR || (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED)
                    l = c.localize("academy.feature.disabled");
                else if (t.status === HttpStatusCode.BAD_REQUEST && (null === (o = t.error) || void 0 === o ? void 0 : o.code) === UtasErrorCode.UT_BAD_REQUEST && (null === (n = h.academySlot) || void 0 === n ? void 0 : n.timed))
                    l = c.localize("academy.timedslot.limitReachedTitle"),
                    h.showTimedWarningPopup();
                else if ((null === (r = t.error) || void 0 === r ? void 0 : r.code) === UtasErrorCode.UNABLE_TO_APPLY) {
                    var u = services.Localization;
                    l = u.localize("academy.feature.already-applied");
                    var p = new EADialogViewController({
                        dialogOptions: [{
                            labelEnum: enums.UIDialogOptions.OK
                        }],
                        message: l,
                        title: u.localize("academy.timedslot.warningTitle")
                    });
                    p.init(),
                    p.viewWillAppear(),
                    p.modalDisplayDimensions.width = "380px",
                    gPopupClickShield.setActivePopup(p)
                } else
                    l = c.localize("academy.preview.unexpectederror");
                l && d.queue([l, UINotificationType.NEGATIVE])
            }
        })
    }
    ,
    UTAcademyPlayerFromClubViewController
}(UTSelectItemFromClubViewController))
  , UTAcademySlotRequirementsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTAcademySlotRequirementsView() {
        return e.call(this) || this
    }
    return __extends(UTAcademySlotRequirementsView, e),
    UTAcademySlotRequirementsView.prototype.generateRequirementListRow = function(e) {
        var t = document.createElement("li");
        return t.textContent = e,
        t
    }
    ,
    UTAcademySlotRequirementsView.prototype.renderRequirements = function(e) {
        var t = this;
        DOMKit.empty(this.__requirements),
        e.map(function(e) {
            return t.generateRequirementListRow(t.buildString(e))
        }).forEach(function(e) {
            return t.__requirements.appendChild(e)
        })
    }
    ,
    UTAcademySlotRequirementsView.prototype.buildString = function(e) {
        var o = services.Localization
          , t = e.attribute
          , i = "scope" + e.scope
          , n = "academy.requirements."
          , r = e.targets
          , a = "";
        function combineValueStrings(e) {
            return e.map(function(e, t, i) {
                return t < i.length - 1 ? e + " " + o.localize("label.general.or").toUpperCase() : e
            }).join(" ")
        }
        switch (t) {
        case AcademyEligibilityAttribute.OVR:
            a = o.localize(n + "player.ovr." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.PACE:
            a = o.localize(n + "player.pace." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.SHOOTING:
            a = o.localize(n + "player.shooting." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.PASSING:
            a = o.localize(n + "player.passing." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.DRIBBLING_MAIN:
            a = o.localize(n + "player.dribbling_main." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.DEFENSE:
            a = o.localize(n + "player.defense." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.PHYSICALITY:
            a = o.localize(n + "player.physicality." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.ACCELERATION:
            a = o.localize(n + "player.acceleration." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.SPRINT_SPEED:
            a = o.localize(n + "player.sprint_speed." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.AGILITY:
            a = o.localize(n + "player.agility." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.BALANCE:
            a = o.localize(n + "player.balance." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.JUMPING:
            a = o.localize(n + "player.jumping." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.STAMINA:
            a = o.localize(n + "player.stamina." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.STRENGTH:
            a = o.localize(n + "player.strength." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.REACTIONS:
            a = o.localize(n + "player.reactions." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.AGGRESSION:
            a = o.localize(n + "player.aggression." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.COMPOSURE:
            a = o.localize(n + "player.composure." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.INTERCEPTIONS:
            a = o.localize(n + "player.interceptions." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.POSITIONING:
            a = o.localize(n + "player.positioning." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.VISION:
            a = o.localize(n + "player.vision." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.BALL_CONTROL:
            a = o.localize(n + "player.ball_control." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.CROSSING:
            a = o.localize(n + "player.crossing." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.DRIBBLING_SUB:
            a = o.localize(n + "player.dribbling_sub." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.FINISHING:
            a = o.localize(n + "player.finishing." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.FK_ACC:
            a = o.localize(n + "player.fk_acc." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.HEADING_ACC:
            a = o.localize(n + "player.heading_acc." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.LONG_PASSING:
            a = o.localize(n + "player.long_passing." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.SHORT_PASSING:
            a = o.localize(n + "player.short_passing." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.DEF_AWARENESS:
            a = o.localize(n + "player.def_awareness." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.SHOT_POWER:
            a = o.localize(n + "player.shot_power." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.LONG_SHOTS:
            a = o.localize(n + "player.long_shots." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.STANDING_TACKLE:
            a = o.localize(n + "player.standing_tackle." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.SLIDING_TACKLE:
            a = o.localize(n + "player.sliding_tackle." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.VOLLEYS:
            a = o.localize(n + "player.volleys." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.CURVE:
            a = o.localize(n + "player.curve." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.PENALTIES:
            a = o.localize(n + "player.penalties." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.WEAK_FOOT:
            a = o.localize(n + "player.weak_foot." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.SKILL_MOVES:
            a = o.localize(n + "player.skill_moves." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.DEFINITION_ID:
            var s = combineValueStrings(r.map(function(e) {
                var t, i = e & ItemIdMask.DATABASE, o = repositories.Item.getStaticDataByDefId(i);
                return null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR
            }));
            a = o.localize(n + "player.defId", [s]);
            break;
        case AcademyEligibilityAttribute.DEFINITION_ID_NEGATED:
            s = combineValueStrings(r.map(function(e) {
                var t, i = e & ItemIdMask.DATABASE, o = repositories.Item.getStaticDataByDefId(i);
                return null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR
            }));
            a = o.localize(n + "player.not.defId", [s]);
            break;
        case AcademyEligibilityAttribute.NATION:
            a = o.localize(n + "player.nation.label") + " " + combineValueStrings(r.map(function(e) {
                return UTLocalizationUtil.nationIdToName(e, o)
            }));
            break;
        case AcademyEligibilityAttribute.LEAGUE:
            a = o.localize(n + "player.league.label") + " " + combineValueStrings(r.map(function(e) {
                return UTLocalizationUtil.leagueIdToName(e, o)
            }));
            break;
        case AcademyEligibilityAttribute.CLUB:
            a = o.localize(n + "player.club.label") + " " + combineValueStrings(r.filter(function(e) {
                var t = repositories.TeamConfig.getLinkedTeam(e);
                return t === e || !r.includes(t)
            }).map(function(e) {
                return UTLocalizationUtil.teamIdToAbbr15(e, o)
            }));
            break;
        case AcademyEligibilityAttribute.RARITY:
            var l = combineValueStrings(r.map(function(e) {
                return o.localize("item.raretype" + e)
            }));
            a = o.localize(n + "rarity." + i) + " " + l;
            break;
        case AcademyEligibilityAttribute.RARITY_NEGATED:
            l = combineValueStrings(r.map(function(e) {
                return o.localize("item.raretype" + e)
            }));
            a = o.localize(n + "rarity.not." + i) + " " + l;
            break;
        case AcademyEligibilityAttribute.POSITION:
            var c = combineValueStrings(r.map(function(e) {
                return UTLocalizationUtil.positionIdToName(e, o)
            }));
            a = o.localize(n + "position." + i) + " " + c;
            break;
        case AcademyEligibilityAttribute.POSITION_NEGATED:
            c = combineValueStrings(r.map(function(e) {
                return UTLocalizationUtil.positionIdToName(e, o)
            }));
            a = o.localize(n + "position.not." + i) + " " + c;
            break;
        case AcademyEligibilityAttribute.POSSIBLE_POSITIONS_COUNT:
            a = o.localize(n + "player.alt_positions_count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.UNTRADEABLE:
            var d = 1 === r[0] ? "untradable" : "tradable";
            a = o.localize(n + d);
            break;
        case AcademyEligibilityAttribute.BASE_TRAITS_COUNT:
            a = o.localize(n + "player.base-traits-count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.ICON_TRAITS_COUNT:
            a = o.localize(n + "player.icon-traits-count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.TOTAL_TRAITS_COUNT:
            a = o.localize(n + "player.total-traits-count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.BASE_TRAIT_PRESENT:
            a = o.localize(n + "player.base-traits-exists", r.map(function(e) {
                return o.localize("extendedPlayerInfo.signatureAbility.name." + e)
            }));
            break;
        case AcademyEligibilityAttribute.ICON_TRAIT_PRESENT:
            a = o.localize(n + "player.icon-traits-exists", r.map(function(e) {
                return o.localize("extendedPlayerInfo.signatureAbility.name." + e)
            }));
            break;
        case AcademyEligibilityAttribute.RARITY_GROUP:
            var u = combineValueStrings(r.map(function(e) {
                return o.localize("Player_Group_" + e)
            }));
            a = o.localize(n + "player.rarity-group." + i, [u]);
            break;
        case AcademyEligibilityAttribute.RARITY_GROUP_NEGATED:
            u = combineValueStrings(r.map(function(e) {
                return o.localize("Player_Group_" + e)
            }));
            a = o.localize(n + "player.rarity-group.not." + i, [u]);
            break;
        case AcademyEligibilityAttribute.PLAYER_ROLE_PLUS_PRESENT:
            var p = combineValueStrings(r.map(function(e) {
                return o.localize("tactics.roles.role" + UTPlayerRoleVO.mapUtasRoleToPlayerRole(e))
            }));
            a = o.localize(n + "player.role-plus-present." + i, [p]);
            break;
        case AcademyEligibilityAttribute.PLAYER_ROLE_PLUSPLUS_PRESENT:
            p = combineValueStrings(r.map(function(e) {
                return o.localize("tactics.roles.role" + UTPlayerRoleVO.mapUtasRoleToPlayerRole(e))
            }));
            a = o.localize(n + "player.role-plus-plus-present." + i, [p]);
            break;
        case AcademyEligibilityAttribute.PLAYER_ROLE_PLUS_COUNT:
            a = o.localize(n + "player.role-plus-count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.PLAYER_ROLE_PLUSPLUS_COUNT:
            a = o.localize(n + "player.role-plus-plus-count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.PLAYER_ROLE_PLUS_OR_PLUSPLUS_TOTAL_COUNT:
            a = o.localize(n + "player.role-plus-2plus-total-count." + i, r.map(function(e) {
                return e.toString()
            }));
            break;
        case AcademyEligibilityAttribute.NONE:
        case AcademyEligibilityAttribute.ATTACK_WORK_RATE:
        case AcademyEligibilityAttribute.DEFENSIVE_WORK_RATE:
            DebugUtils.Assert(!1, "Not implemented case building eligibility string: " + t);
            break;
        default:
            DebugUtils.Assert(!1, "Reached default case building eligibility string: " + t)
        }
        return a
    }
    ,
    UTAcademySlotRequirementsView
}(EAView));
UTAcademySlotRequirementsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-slot-requirements-view"),
        this.__requirements = document.createElement("ul"),
        this.__requirements.classList.add("ut-academy-slot-requirements-view--list"),
        e.appendChild(this.__requirements),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademySlotRequirementsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__requirements = null
}
,
UTAcademySlotRequirementsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademyClubSearchView = function(t) {
    function UTAcademyClubSearchView() {
        return t.call(this) || this
    }
    return __extends(UTAcademyClubSearchView, t),
    UTAcademyClubSearchView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._searchFilters.init(),
        this.setInteractionState(!0),
        this._resetButton = this._searchFilters.getResetButton(),
        this._searchButton = this._searchFilters.getSearchButton(),
        this._playerNameSearch = this._searchFilters.getPlayerNameSearch(),
        this._resetButton.init(),
        this._resetButton.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._searchButton.init(),
        this._searchButton.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._searchFilters.setupSearchOptions({
            includeEvolutionsToggle: !1,
            includeLimitedUseToggle: !1,
            includeSquadPlayersToggle: !1,
            includeUntradeableToggle: !1
        }),
        this._searchFilters.setSortOptions(factories.DataProvider.getSortTypeDP()),
        this._searchFilters.getSortDropDown().addTarget(this, this._eDropDownChanged, EventType.CHANGE),
        this._searchFilters.getSortDropDown().setDefaultIndexById(SearchSortID.RATING_DESC, !0),
        services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.ACADEMY_FILTER_ENABLED) && this._searchFilters.hideFiltersContainer(),
        this._searchFilters.onFilterChange.observe(this, this._eFilterChanged),
        this._slotRequirements.init(),
        this._playerNameSearch.init(),
        this._playerNameSearch.addTarget(this, this.eButtonSelected, EventType.CHANGE),
        this._btnToggle.init(),
        this._btnToggle.addTarget(this, this.eToggleShelf, EventType.TAP),
        this.setOpenState(!0),
        this.__requirementsLabel.textContent = e.localize("academy.clubsearch.requirements.label"),
        this._searchFilters.setResetButtonDisplay(!1)
    }
    ,
    UTAcademyClubSearchView.prototype.dealloc = function() {
        this._resetButton.removeTarget(this, this.eButtonSelected, EventType.TAP),
        this._searchButton.removeTarget(this, this.eButtonSelected, EventType.TAP),
        this._playerNameSearch.removeTarget(this, this.eButtonSelected, EventType.TAP),
        t.prototype.dealloc.call(this)
    }
    ,
    UTAcademyClubSearchView.prototype.setFilters = function(e) {
        this._searchFilters.setFilters(e, !1),
        this._searchFilters.togglePileFilter(!1),
        this._searchFilters.togglePlayerNameRow(e.searchCriteria.type === SearchType.PLAYER)
    }
    ,
    UTAcademyClubSearchView.prototype.setSlotDescription = function(e) {
        this.__slotDescription.textContent = e
    }
    ,
    UTAcademyClubSearchView.prototype.setSlotRequirements = function(e) {
        this._slotRequirements.renderRequirements(e.eligibilityRequirements)
    }
    ,
    UTAcademyClubSearchView.prototype.setEnrolmentTime = function(e) {
        this.__enrolmentTime.textContent = services.Localization.localize("academy.itemdetails.header.enrollment", [e])
    }
    ,
    UTAcademyClubSearchView.prototype.setExpiryTime = function(e) {
        this.__expiryTime.textContent = services.Localization.localize("academy.itemdetails.header.evolutions", [e])
    }
    ,
    UTAcademyClubSearchView.prototype.toggleRequirements = function(e) {
        DOMKit.toggleDisplayStyle(this.__requirements, e)
    }
    ,
    UTAcademyClubSearchView.prototype.getPlayerNameSearch = function() {
        return this._searchFilters.getPlayerNameSearch()
    }
    ,
    UTAcademyClubSearchView.prototype.setFilterValue = function(e, t) {
        this._searchFilters.setFilterValue(e, t)
    }
    ,
    UTAcademyClubSearchView.prototype._eFilterChanged = function(e, t, i, o) {
        this.isInteractionEnabled() && this._triggerActions(UTAcademyClubSearchView.Events.FILTER_CHANGE, {
            id: i,
            setId: t,
            value: o
        })
    }
    ,
    UTAcademyClubSearchView.prototype.eButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && (e === this._resetButton ? this._triggerActions(UTAcademyClubSearchView.Events.RESET) : e === this._searchButton ? this._triggerActions(UTAcademyClubSearchView.Events.SEARCH) : e === this._playerNameSearch && this._triggerActions(UTAcademyClubSearchView.Events.PLAYER_SEARCH))
    }
    ,
    UTAcademyClubSearchView.prototype._eDropDownChanged = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTAcademyClubSearchView.Events.SORT_CHANGE, i)
    }
    ,
    UTAcademyClubSearchView.prototype.eToggleShelf = function(e, t, i) {
        this.setOpenState(!this.isOpen)
    }
    ,
    UTAcademyClubSearchView.prototype.setOpenState = function(e) {
        this.isOpen = e,
        this._btnToggle.toggleClass("open", e),
        DOMKit.toggleClass(this.__requirementsShelf, "open", e)
    }
    ,
    UTAcademyClubSearchView.prototype.setCollapsibleState = function(e) {
        this._btnToggle.setInteractionState(e),
        this._btnToggle.setDisplay(e)
    }
    ,
    UTAcademyClubSearchView.Events = {
        FILTER_CHANGE: "FILTER_CHANGE",
        RESET: "RESET",
        SEARCH: "SEARCH",
        SORT_CHANGE: "SORT_CHANGE",
        PLAYER_SEARCH: "PLAYER_SEARCH"
    },
    UTAcademyClubSearchView
}(EATargetActionView);
UTAcademyClubSearchView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-club-search-view");
        var t = document.createElement("div");
        t.classList.add("ut-academy-club-search-view--header"),
        this.__slotDescription = document.createElement("h1"),
        this.__slotDescription.classList.add("ut-academy-club-search-view--slot-description"),
        t.appendChild(this.__slotDescription),
        this.__enrolmentTime = document.createElement("p"),
        this.__enrolmentTime.classList.add("enrolment"),
        this.__enrolmentTime.classList.add("ut-academy-club-search-view--label"),
        t.appendChild(this.__enrolmentTime),
        this.__expiryTime = document.createElement("p"),
        this.__expiryTime.classList.add("expiry"),
        this.__expiryTime.classList.add("ut-academy-club-search-view--label"),
        t.appendChild(this.__expiryTime),
        this.__requirements = document.createElement("span");
        var i = document.createElement("div");
        i.classList.add("ut-academy-club-search-view--requirements"),
        this.__requirementsLabel = document.createElement("h1"),
        this.__requirementsLabel.classList.add("ut-academy-club-search-view--requirements-label"),
        i.appendChild(this.__requirementsLabel),
        this._btnToggle = new UTImageButtonControl,
        i.appendChild(this._btnToggle.getRootElement()),
        this.__requirements.appendChild(i),
        this.__requirementsShelf = document.createElement("div"),
        this.__requirementsShelf.classList.add("ut-academy-club-search-view--shelf"),
        this._slotRequirements = new UTAcademySlotRequirementsView,
        this.__requirementsShelf.appendChild(this._slotRequirements.getRootElement()),
        this.__requirements.appendChild(this.__requirementsShelf),
        t.appendChild(this.__requirements),
        e.appendChild(t);
        var o = document.createElement("div");
        o.classList.add("ut-content-container"),
        this._searchFilters = new UTClubSearchFiltersView,
        o.appendChild(this._searchFilters.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademyClubSearchView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__slotDescription = null,
    this.__enrolmentTime = null,
    this.__expiryTime = null,
    this.__requirements = null,
    this.__requirementsLabel = null,
    this._btnToggle.destroy(),
    this.__requirementsShelf = null,
    this._slotRequirements.destroy(),
    this._searchFilters.destroy()
}
,
UTAcademyClubSearchView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademyClubSearchViewController = function(n) {
    function UTAcademyClubSearchViewController(e) {
        var t = n.call(this) || this;
        return t.viewmodel = e,
        t.searchViewModel = new UTItemSearchViewModel,
        t
    }
    return __extends(UTAcademyClubSearchViewController, n),
    UTAcademyClubSearchViewController.prototype.init = function() {
        this.initialized || (n.prototype.init.call(this),
        this.searchViewModel.searchCriteria.type = SearchType.PLAYER,
        this.searchViewModel.defaultSearchCriteria.type = SearchType.PLAYER)
    }
    ,
    UTAcademyClubSearchViewController.prototype.dealloc = function() {
        n.prototype.dealloc.call(this)
    }
    ,
    UTAcademyClubSearchViewController.prototype.viewDidAppear = function() {
        var e;
        n.prototype.viewDidAppear.call(this);
        var t = this.getView()
          , i = this.viewmodel.getSelectedSlot();
        if (i) {
            var o;
            if (t.setSlotDescription(i.slotDescription),
            0 < i.eligibilityRequirements.length ? t.setSlotRequirements(i) : t.toggleRequirements(!1),
            i.hasExpiry())
                0 <= (o = i.getEvolutionsTimeRemaining()) && t.setExpiryTime(services.Localization.localizeTimeRemaining(o));
            if (i.hasEnrolmentExpiry())
                0 <= (o = i.getEnrollmentTimeRemaining()) && t.setEnrolmentTime(services.Localization.localizeTimeRemaining(o))
        }
        t.addTarget(this, this._eResetSelected, UTAcademyClubSearchView.Events.RESET),
        t.addTarget(this, this._eFilterChanged, UTAcademyClubSearchView.Events.FILTER_CHANGE),
        t.addTarget(this, this.onPlayerNameChange, UTAcademyClubSearchView.Events.PLAYER_SEARCH),
        t.addTarget(this, this._eSearchSelected, UTAcademyClubSearchView.Events.SEARCH),
        t.addTarget(this, this._eDropDownChanged, UTAcademyClubSearchView.Events.SORT_CHANGE),
        t.setFilters(this.searchViewModel),
        isPhone() || null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!1)
    }
    ,
    UTAcademyClubSearchViewController.prototype.viewDidDisappear = function() {
        n.prototype.viewDidDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this._eResetSelected, UTAcademyClubSearchView.Events.RESET),
        e.removeTarget(this, this._eFilterChanged, UTAcademyClubSearchView.Events.FILTER_CHANGE),
        e.removeTarget(this, this.onPlayerNameChange, UTAcademyClubSearchView.Events.PLAYER_SEARCH),
        e.removeTarget(this, this._eSearchSelected, UTAcademyClubSearchView.Events.SEARCH),
        e.removeTarget(this, this._eDropDownChanged, UTAcademyClubSearchView.Events.SORT_CHANGE)
    }
    ,
    UTAcademyClubSearchViewController.prototype.getNavigationTitle = function() {
        var e, t;
        return null !== (t = null === (e = this.viewmodel.getSelectedSlot()) || void 0 === e ? void 0 : e.slotName) && void 0 !== t ? t : services.Localization.localize("navbar.label.academy")
    }
    ,
    UTAcademyClubSearchViewController.prototype._getViewInstanceFromData = function() {
        return new UTAcademyClubSearchView
    }
    ,
    UTAcademyClubSearchViewController.prototype._eFilterChanged = function(e, t, i) {
        JSUtils.isValid(i.setId) && JSUtils.isValid(i.id) && JSUtils.isValid(i.value) && (this.searchViewModel.updateFromFilterChange(i.setId, i.id, i.value),
        this.getView().setFilters(this.searchViewModel))
    }
    ,
    UTAcademyClubSearchViewController.prototype._eResetSelected = function(e, t, i) {
        var o = this.getView();
        this.searchViewModel.resetSearch(),
        o.setFilters(this.searchViewModel)
    }
    ,
    UTAcademyClubSearchViewController.prototype.onPlayerNameChange = function(e, t, i) {
        var o = this.getView()
          , n = o.getPlayerNameSearch().getSelected();
        n ? this.searchViewModel.setPlayerData(n) : this.searchViewModel.clearPlayerData(),
        o.setFilters(this.searchViewModel),
        n && (o.setFilterValue(enums.UISearchFilters.NATION, -1),
        o.setFilterValue(enums.UISearchFilters.LEAGUE, -1),
        o.setFilterValue(enums.UISearchFilters.CLUB, -1))
    }
    ,
    UTAcademyClubSearchViewController.prototype._eSearchSelected = function(e, t, i) {
        this.gotoClubSearchResults(this.searchViewModel.searchCriteria)
    }
    ,
    UTAcademyClubSearchViewController.prototype._eDropDownChanged = function(e, t, i) {
        switch (this.searchViewModel.searchCriteria.sort = i.value,
        i.id) {
        case SearchSortID.VALUE_ASC:
        case SearchSortID.VALUE_DESC:
            this.searchViewModel.searchCriteria.sortBy = SearchSortType.VALUE;
            break;
        case SearchSortID.RECENCY_DESC:
            this.searchViewModel.searchCriteria.sortBy = SearchSortType.RECENCY;
            break;
        case SearchSortID.RATING_ASC:
        case SearchSortID.RATING_DESC:
            this.searchViewModel.searchCriteria.sortBy = SearchSortType.RATING;
            break;
        default:
            DebugUtils.Assert(!1, "Unknown search sort ID")
        }
    }
    ,
    UTAcademyClubSearchViewController.prototype.gotoClubSearchResults = function(e) {
        var t = this.getNavigationController();
        if (t) {
            var i = this.viewmodel.getSelectedSlot();
            if (i) {
                var o = new UTAcademyPlayerFromClubViewController(i,this.viewmodel);
                o.initWithSearchCriteria(e),
                t.pushViewController(o)
            }
        }
    }
    ,
    UTAcademyClubSearchViewController
}(EAViewController)
  , UTAcademySlotItemDetailsViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTAcademySlotItemDetailsViewController(e) {
        var t = r.call(this) || this;
        return t.viewmodel = e,
        t.intervalController = null,
        t.timedEvoIntervalController = null,
        t.intervalController = new EAIntervalController(1e3,t.timedUpdate.bind(t)),
        t.timedEvoIntervalController = new EAIntervalController(1e3,t.updateTimedEvolutionTimer.bind(t)),
        t
    }
    return __extends(UTAcademySlotItemDetailsViewController, r),
    UTAcademySlotItemDetailsViewController.prototype.dealloc = function() {
        r.prototype.dealloc.call(this),
        this.viewmodel.cleanUpOpenedSlots(),
        this.panel && (this.panel.dealloc(),
        this.panel = null),
        this.intervalController && (this.intervalController.dealloc(),
        this.intervalController = null),
        this.timedEvoIntervalController && (this.timedEvoIntervalController.dealloc(),
        this.timedEvoIntervalController = null)
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype._getTelemetryId = function() {
        return "Academy Slot Details"
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.getNavigationTitle = function() {
        var e, t;
        return null !== (t = null === (e = this.viewmodel.getSelectedSlot()) || void 0 === e ? void 0 : e.slotName) && void 0 !== t ? t : services.Localization.localize("navbar.label.academy")
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this),
        this.panel = new UTAcademySlotActionPanelView;
        var e = this.getView();
        e.addTarget(this, this.onIndexChange, UTAcademySlotItemDetailsView.Event.INDEX_CHANGE),
        this.panel && (this.panel.addTarget(this, this.onPreviewBio, UTAcademySlotActionPanelView.Event.PREVIEW_BIO),
        e.addTarget(this, this.onPreviewPlayer, UTAcademySlotItemDetailsView.Event.PREVIEW_PLAYER),
        e.addTarget(this, this.onUnlockSlot, UTAcademySlotItemDetailsView.Event.CONFIRM_PLAYER),
        e.addTarget(this, this.onUnlockSlot, UTAcademySlotItemDetailsView.Event.BUY_COINS),
        e.addTarget(this, this.onUnlockSlot, UTAcademySlotItemDetailsView.Event.BUY_POINTS),
        e.addTarget(this, this.onResumeSlot, UTAcademySlotItemDetailsView.Event.RESUME_SLOT),
        e.addTarget(this, this.onCancelTimedEvo, UTAcademySlotItemDetailsView.Event.CANCEL_TIMED_EVOLUTION));
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.nAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.nAppResumed),
        t.addObserver(AppNotification.ACADEMY_ITEM_SELECTED, this, this.onUpdateSlotView),
        this.renderView()
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.viewDidDisappear = function() {
        var e, t, i;
        r.prototype.viewDidDisappear.call(this);
        var o = this.getView();
        null === (e = this.panel) || void 0 === e || e.removeTarget(this, this.onPreviewBio, UTAcademySlotActionPanelView.Event.PREVIEW_BIO),
        o.removeTarget(this, this.onPreviewPlayer, UTAcademySlotItemDetailsView.Event.PREVIEW_PLAYER),
        o.removeTarget(this, this.onUnlockSlot, UTAcademySlotItemDetailsView.Event.CONFIRM_PLAYER),
        o.removeTarget(this, this.onUnlockSlot, UTAcademySlotItemDetailsView.Event.BUY_COINS),
        o.removeTarget(this, this.onUnlockSlot, UTAcademySlotItemDetailsView.Event.BUY_POINTS),
        o.removeTarget(this, this.onResumeSlot, UTAcademySlotItemDetailsView.Event.RESUME_SLOT),
        o.addTarget(this, this.onCancelTimedEvo, UTAcademySlotItemDetailsView.Event.CANCEL_TIMED_EVOLUTION),
        o.removeTarget(this, this.onIndexChange, UTAcademySlotItemDetailsView.Event.INDEX_CHANGE),
        o.destroyCarousel(),
        null === (t = this.intervalController) || void 0 === t || t.stop(),
        null === (i = this.timedEvoIntervalController) || void 0 === i || i.stop();
        var n = getDefaultDispatcher();
        n.removeObserver(AppNotification.APP_PAUSE, this),
        n.removeObserver(AppNotification.APP_RESUME, this),
        n.removeObserver(AppNotification.ACADEMY_ITEM_SELECTED, this)
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.nAppPaused = function(e, t, i) {
        var o;
        null === (o = this.intervalController) || void 0 === o || o.stop()
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.nAppResumed = function(e, t, i) {
        var o;
        null === (o = this.intervalController) || void 0 === o || o.start()
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.renderVanitySlot = function(e) {
        this.panel && this.panel.hidePreviewBioButton()
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.updateTimedEvolutionTimer = function() {
        this.renderTimedEvolutionTimer()
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.renderTimedEvolutionTimer = function() {
        var e, t, i, o, n = services.Localization, r = this.viewmodel.getSelectedSlot();
        if (r) {
            var a = this.viewmodel.getSelectedLevelIndex();
            if (0 === a) {
                var s = r.levels.reduce(function(e, t) {
                    var i = t.getTimedObjective();
                    return t.isComplete() || t.isInProgress() || !i ? e : e + i.multiplier
                }, 0);
                if (r.checkIfTimedSlotNeedUpdate())
                    return this.timedTimerExpired(),
                    void (null === (e = this.panel) || void 0 === e || e.updateTimeLabel(n.localizeTimeRemaining(s)));
                var l = null !== (t = null == (c = r.getCurrentLevelTimedObjective()) ? void 0 : c.calculateTimedEvoRemainingTime()) && void 0 !== t ? t : 0;
                null === (i = this.panel) || void 0 === i || i.updateTimeLabel(n.localizeTimeRemaining(s + l))
            } else {
                var c, d = null == r ? void 0 : r.levels[a - 1];
                if (c = null == d ? void 0 : d.getTimedObjective()) {
                    if ((l = c.calculateTimedEvoRemainingTime()) <= 0)
                        return void this.timedTimerExpired();
                    null === (o = this.panel) || void 0 === o || o.updateTimeLabel(n.localizeTimeRemaining(l))
                }
            }
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.timedTimerExpired = function() {
        var e, t, i = services.Localization;
        null === (e = this.timedEvoIntervalController) || void 0 === e || e.stop(),
        null === (t = this.panel) || void 0 === t || t.updateTimeLabel(i.localizeTimeRemaining(0)),
        this.getView().toggleCancelTimedEvoButtonState(!1),
        services.Academy.reset()
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.timedUpdate = function() {
        var e, t = this.viewmodel.getSelectedSlot();
        if (t) {
            this.renderExpiryDetails();
            var i = t.hasExpiry() && t.hasEndTimeExpired()
              , o = t.hasEnrolmentExpiry() && t.hasEnrollmentExpired()
              , n = this.getView();
            i ? n.toggleResumeButtonState(!1) : o && (n.togglePreviewButtonState(!1),
            n.toggleConfirmButtonState(!1),
            n.setCoinsButtonState(!1),
            n.setPointsButtonState(!1)),
            (i || o) && (null === (e = this.intervalController) || void 0 === e || e.stop())
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.renderExpiryDetails = function() {
        var e = this.viewmodel.getSelectedSlot();
        if (e) {
            var t = this.getView();
            if (e.status === AcademySlotState.NOT_STARTED && e.hasEnrolmentExpiry()) {
                var i = e.getEnrollmentTimeRemaining();
                0 <= e.endTimePurchaseVisibility && t.setEnrolmentTime(i)
            } else if (e.hasExpiry()) {
                var o = e.getEvolutionsTimeRemaining();
                t.setEvolutionsTime(o)
            }
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.renderEmptySlot = function() {
        var e, t, i, o, n, r, a, s, l, c, d, u = this, p = this.getView(), h = services.Localization;
        p.setupPreviewPlayerButton(!0),
        null === (e = this.panel) || void 0 === e || e.toggleRequirements(!1),
        null === (t = this.panel) || void 0 === t || t.toggleObjectives(!1),
        null === (i = this.panel) || void 0 === i || i.toggleTimedEvolution(!1),
        p.toggleCancelTimedEvoButtonState(!1),
        this.panel && this.panel.hidePreviewBioButton();
        var _ = this.viewmodel.getSelectedSlot()
          , m = this.viewmodel.getSelectedLevelIndex();
        if (_) {
            var T = [];
            this.renderExpiryDetails(),
            _.levels.forEach(function(e, t) {
                var i = e.getVanityAward()
                  , o = e.getCosmetics()
                  , n = {
                    rarity: i,
                    cosmetics: o
                };
                0 < t && !i && (n.rarity = T[t - 1].rarity),
                0 < t && !o && (n.cosmetics = T[t - 1].cosmetics),
                T.push(n)
            });
            var g = T[T.length - 1];
            if (g && (T = [g].concat(T)),
            p.setEmptyCosmeticLevels(T, m),
            0 === m)
                p.setSummaryBanner(),
                null === (o = this.panel) || void 0 === o || o.renderRequirementsList(_.eligibilityRequirements),
                null === (n = this.panel) || void 0 === n || n.toggleRequirements(!0),
                null === (r = this.panel) || void 0 === r || r.setSummaryRewards(_);
            else {
                _.timed || null === (a = this.panel) || void 0 === a || a.toggleObjectives(!0);
                var y = _.levels[m - 1]
                  , v = y.boostedPlayer;
                if (p.setLevelHeaderContent(m, _.levels),
                p.setLevelHeaderIcon(y.status),
                _.timed) {
                    var S = h.localize("academy.timedslot.timedLevelTitle", [m.toString()]);
                    null === (s = this.panel) || void 0 === s || s.setTimedEvoTitle(S),
                    null === (l = this.panel) || void 0 === l || l.toggleTimedEvolution(!0);
                    var w = y.getTimedObjective();
                    if (null != w) {
                        var C = w.multiplier;
                        null === (c = this.panel) || void 0 === c || c.renderTimedEvolutionSection(w.description, h.localizeTimeRemaining(C))
                    }
                }
                if (y) {
                    var f = 0 == y.objectives.length;
                    y.objectives.forEach(function(e) {
                        var t;
                        return null === (t = u.panel) || void 0 === t ? void 0 : t.createObjectiveRow(e)
                    }),
                    f && (null === (d = this.panel) || void 0 === d || d.createNoObjectivesRow()),
                    y.awards.forEach(function(e) {
                        var t, i = UTAcademyUtils.getPlayerFinalStatValue(v, e);
                        return null === (t = u.panel) || void 0 === t ? void 0 : t.createLevelStatRow(e, i, GrammaticalGender.NEUTER)
                    })
                }
            }
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.renderPopulatedSlot = function(e) {
        var t, i, o, n, r, a, s, l, c, d, u, p, h, _, m, T, g, y, v, S, w, C, f = this, E = services.Localization, b = this.viewmodel.getSelectedLevelIndex(), V = e.levels[b - 1], U = this.getView(), A = e.player, P = A.gender;
        if (null === (t = this.timedEvoIntervalController) || void 0 === t || t.stop(),
        U.toggleHeaderDisplay(!0),
        null === (i = this.panel) || void 0 === i || i.toggleRequirements(!1),
        U.setLevels(e.levels, b),
        this.renderExpiryDetails(),
        A.isValid() ? null === (o = this.panel) || void 0 === o || o.renderPreviewBioButton(P) : null === (n = this.panel) || void 0 === n || n.hidePreviewBioButton(),
        0 === b)
            if (U.setSummaryBanner(),
            null === (r = this.panel) || void 0 === r || r.setSummaryRewards(e),
            e.timed) {
                var I = E.localize("academy.slot.subtitle.timedevo");
                null === (a = this.panel) || void 0 === a || a.setTimedEvoTitle(I),
                this.renderTimedEvolutionTimer(),
                e.hasSlottedPlayer() && (null === (s = this.panel) || void 0 === s || s.toggleTimedEvolution(!0),
                null === (l = this.timedEvoIntervalController) || void 0 === l || l.start())
            } else
                null === (c = this.panel) || void 0 === c || c.toggleObjectives(!1),
                null === (d = this.panel) || void 0 === d || d.toggleTimedEvolution(!1);
        else {
            if (null === (u = this.panel) || void 0 === u || u.toggleObjectives(!0),
            e.timed) {
                I = E.localize("academy.timedslot.timedLevelTitle", [b.toString()]);
                null === (p = this.panel) || void 0 === p || p.setTimedEvoTitle(I);
                var L = V.getTimedObjective();
                if (null === L)
                    return;
                if (null === (h = this.panel) || void 0 === h || h.setTimedEvolutionObjectiveDescription(L.description),
                e.status === AcademySlotState.ACTIVE)
                    if (V.isInProgress()) {
                        var O = L.calculateTimedEvoRemainingTime();
                        null === (_ = this.panel) || void 0 === _ || _.updateTimeLabel(E.localizeTimeRemaining(0 < O ? O : 0)),
                        0 < O && (null === (m = this.timedEvoIntervalController) || void 0 === m || m.start())
                    } else
                        V.isNotStarted() ? null === (T = this.panel) || void 0 === T || T.updateTimeLabel(E.localizeTimeRemaining(L.multiplier)) : V.isComplete() || e.isClaimable() ? (U.toggleCancelTimedEvoButtonState(!1),
                        null === (g = this.panel) || void 0 === g || g.updateTimeLabel(E.localizeTimeRemaining(0))) : (U.toggleCancelTimedEvoButtonState(!1),
                        null === (y = this.panel) || void 0 === y || y.updateTimeLabel(E.localizeTimeRemaining(L.multiplier)));
                else
                    e.status === AcademySlotState.COMPLETE ? null === (v = this.panel) || void 0 === v || v.updateTimeLabel(E.localizeTimeRemaining(0)) : null === (S = this.panel) || void 0 === S || S.updateTimeLabel(E.localizeTimeRemaining(L.multiplier))
            }
            null === (w = this.panel) || void 0 === w || w.toggleObjectives(!e.timed),
            U.setLevelHeaderContent(b, e.levels),
            U.setLevelHeaderIcon(V.status),
            V.objectives.forEach(function(e) {
                var t;
                return null === (t = f.panel) || void 0 === t ? void 0 : t.createObjectiveRow(e)
            }),
            V.awards.forEach(function(e) {
                var t, i = UTAcademyUtils.getPlayerFinalStatValue(V.boostedPlayer, e);
                return null === (t = f.panel) || void 0 === t ? void 0 : t.createLevelStatRow(e, i, P)
            })
        }
        if (this.panel) {
            if (e.hasPreviewPlayer()) {
                var R = services.User.getUser()
                  , D = null !== (C = null == R ? void 0 : R.getCurrencies()) && void 0 !== C ? C : []
                  , B = e.getPrice(GameCurrency.COINS)
                  , N = e.getPrice(GameCurrency.POINTS);
                0 < B && U.setupBuyCoinButton(B),
                0 < N && U.setupBuyPointsButton(N),
                D.forEach(function(e) {
                    e.type === GameCurrency.COINS && U.setCoinsButtonState(0 < B && e.amount >= B),
                    e.type === GameCurrency.POINTS && U.setPointsButtonState(0 < N && e.amount >= N)
                }),
                0 === e.prices.length && U.setupConfirmPlayerButton(P),
                e.status === AcademySlotState.NOT_STARTED && (isPhone() ? U.setupPreviewPlayerButton(!1, !1) : U.setupPreviewPlayerButton(!1))
            }
            e.status === AcademySlotState.INACTIVE && U.setupResumeSlotButton(),
            e.timed && e.hasSlottedPlayer() && !e.isClaimable() && !e.checkIfTimedSlotNeedUpdate() && U.setupCancelTimedEvoButton()
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.renderView = function() {
        var e, t = this.viewmodel.getSelectedSlot();
        t && ((i = this.getView()).clearActionButtons(),
        this.panel && (this.panel.init(),
        this.panel.setDescription(t.slotDescription),
        this.panel.clearObjectives(),
        this.panel.clearUpgrades(),
        t.isVanitySlot() && this.renderVanitySlot(t),
        t.player instanceof UTNullItemEntity ? this.renderEmptySlot() : t.player && this.renderPopulatedSlot(t),
        this.panel.layoutSubviews(),
        i.appendPanel(this.panel),
        i.layoutSubviews()),
        null === (e = this.intervalController) || void 0 === e || e.start());
        if (!isPhone()) {
            var i;
            (i = this.getView()).togglePreviewButtonDisplay(!1);
            var o = this.getNavigationController();
            o && !o.getParentViewController() && o.setNavigationVisibility(!1)
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype._getViewInstanceFromData = function() {
        return new UTAcademySlotItemDetailsView
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onPreviewBio = function(e, t, i) {
        var o = this.getNavigationController()
          , n = this.viewmodel.getSelectedSlot()
          , r = this.viewmodel.getSelectedLevelIndex()
          , a = null == n ? void 0 : n.levels[0 === r ? n.levels.length - 1 : r - 1].boostedPlayer;
        if (o && a && a.isPlayer()) {
            var s = new UTPlayerBioViewController;
            s.initWithItem(a),
            o.pushViewController(s)
        } else
            services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onPreviewPlayer = function(e, t, i) {
        var o = this.getNavigationController()
          , n = new UTAcademyClubSearchViewController(this.viewmodel);
        o && (n.init(),
        o.pushViewController(n))
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onUnlockSlot = function(e, t, i) {
        var o = this.viewmodel.getSelectedSlot();
        DebugUtils.Assert(JSUtils.isValid(o), "Unable to locate selected Evolutions slot"),
        o && (t === UTAcademySlotItemDetailsView.Event.BUY_COINS ? this.unlockSlot(o, GameCurrency.COINS) : t === UTAcademySlotItemDetailsView.Event.BUY_POINTS ? this.unlockSlot(o, GameCurrency.POINTS) : this.unlockSlot(o))
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.unlockSlot = function(h, _) {
        var e, m = this, T = services.Localization, t = _ ? h.getPrice(_) : 0, i = h.player.getStaticData(), o = h.player.gender;
        if (h.timed && this.viewmodel.isTimedSlotsReachedLimit())
            this.showTimedEvolutionWarning(!0);
        else {
            DebugUtils.Assert(h.player.isValid(), "Cannot unlock a slot without a valid assigned player");
            var n = "";
            e = _ === GameCurrency.COINS ? (n = h.timed ? "evo.unlock.timed.coins.desc" : "evo.unlock.coins.desc",
            [h.slotName, t.toString(), i.name]) : _ === GameCurrency.POINTS ? (n = h.timed ? "evo.unlock.timed.points.desc" : "evo.unlock.points.desc",
            [h.slotName, t.toString(), i.name]) : (n = h.timed ? "evo.unlock.timed.desc" : "evo.unlock.desc",
            [h.slotName, i.name]);
            var r = this.slotPlayerHasAnyAtCapStat(h) ? T.localize("popup.confirmSlot.reachedMaxStat", e, {
                gender: o
            }) : "";
            if (h.player) {
                var a = new EADialogViewController({
                    dialogOptions: [{
                        labelEnum: enums.UIDialogOptions.OK
                    }, {
                        labelEnum: enums.UIDialogOptions.CANCEL,
                        negativeActionFlag: !0
                    }],
                    message: T.localize(n, e, {
                        gender: o
                    }),
                    title: T.localize("evo.unlock.title"),
                    type: EADialogView.Type.MESSAGE,
                    secondaryMessage: r
                });
                a.modalDisplayDimensions.width = "380px",
                a.init(),
                a.viewWillAppear(),
                a.onExit.observe(this, function(e, t) {
                    e.unobserve(m),
                    t == enums.UIDialogOptions.OK && (DebugUtils.Assert(JSUtils.isNumber(h.player.id), "Unexpected synthesized string player ID"),
                    m.viewmodel.addItemToSlot(h.id, h.player.id, _).observe(m, function(e, t) {
                        var i, o, n, r, a, s, l;
                        if (e.unobserve(m),
                        t.success) {
                            if (services.User.requestCurrencies(),
                            m.renderView(),
                            isPhone() || getDefaultDispatcher().notify(AppNotification.ACADEMY_ITEM_SLOTTED, m),
                            _ != GameCurrency.COINS && _ != GameCurrency.POINTS || window.services.revenueSDK.logEvent(RevenueAnalytics.Event.ACADEMY_SLOT_UNLOCKED, ((i = {})[RevenueAnalytics.Key.CURRENCY] = _,
                            i[RevenueAnalytics.Key.TYPE] = h.categoryId.toString(),
                            i[RevenueAnalytics.Key.ID] = h.id.toString(),
                            i)),
                            h.timed) {
                                var c = h.levels.find(function(e) {
                                    return !e.isInProgress() && !e.isComplete()
                                })
                                  , d = null !== (n = null === (o = null == c ? void 0 : c.getTimedObjective()) || void 0 === o ? void 0 : o.multiplier) && void 0 !== n ? n : 0;
                                if (h.player.setActiveInTimedEvo(!0),
                                d > h.getEnrollmentTimeRemaining())
                                    return void m.showTimedEvolutionWarning(!1);
                                m.timedAcademySlotChangedAction()
                            }
                        } else {
                            var u = ""
                              , p = services.Notification;
                            NetworkErrorManager.checkCriticalStatus(t.status) ? (NetworkErrorManager.handleStatus(t.status),
                            u = T.localize("academy.addtoslot.loaderror")) : h.timed && (null === (r = t.error) || void 0 === r ? void 0 : r.code) === UtasErrorCode.PERMISSION_DENIED ? m.showTimedEvolutionWarning(!1) : t.status === HttpStatusCode.SERVICE_UNAVAILABLE_ERROR || (null === (a = t.error) || void 0 === a ? void 0 : a.code) === UtasErrorCode.SERVICE_IS_DISABLED ? (u = T.localize("academy.feature.disabled"),
                            services.Academy.reset(),
                            null === (s = m.getNavigationController()) || void 0 === s || s.popToRootViewController()) : (u = T.localize("academy.addtoslot.unexpectederror"),
                            t.status === HttpStatusCode.CONFLICT && (null === (l = m.getNavigationController()) || void 0 === l || l.popToRootViewController())),
                            p.queue([u, UINotificationType.NEGATIVE])
                        }
                    }))
                }),
                gPopupClickShield.setActivePopup(a)
            }
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.showTimedEvolutionWarning = function(e) {
        var t = services.Localization
          , i = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: t.localize(e ? "academy.timedslot.limitReachedDescription" : "academy.timedslot.warningDescription"),
            title: t.localize(e ? "academy.timedslot.limitReachedTitle" : "academy.timedslot.warningTitle")
        });
        i.init(),
        i.viewWillAppear(),
        i.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(i)
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.timedAcademySlotChangedAction = function() {
        var e;
        services.Academy.reset(),
        isPhone() ? null === (e = this.getNavigationController()) || void 0 === e || e.popViewController() : getDefaultDispatcher().notify(AppNotification.ACADEMY_ITEM_CHANGED, this)
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.slotPlayerHasAnyAtCapStat = function(e) {
        return e.levels.some(function(t) {
            return t.awards.some(function(e) {
                return !!JSUtils.isValid(e.maxValue) && UTAcademyUtils.getPlayerFinalStatValue(t.boostedPlayer, e) >= e.maxValue
            })
        })
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.cancelTimedEvo = function() {
        var o = this
          , n = services.Localization
          , r = this.viewmodel.getSelectedSlot();
        r && this.viewmodel.requestCancelTimedEvolution(r.id).observe(this, function(e, t) {
            if (e.unobserve(o),
            t.success) {
                null == r || r.player.setActiveInTimedEvo(!1),
                o.timedAcademySlotChangedAction(),
                r.player.setActiveInTimedEvo(!1);
                var i = o.getView();
                i.toggleCancelTimedEvoButtonState(!1),
                i.togglePreviewButtonState(!1),
                services.Academy.reset(),
                o.renderEmptySlot()
            } else
                services.Notification.queue([n.localize("notification.timedEvolution.cancelFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onCancelTimedEvo = function() {
        var e, i = this, t = services.Localization, o = this.viewmodel.getSelectedSlot(), n = null !== (e = null == o ? void 0 : o.getCurrentLevelNumber()) && void 0 !== e ? e : -1;
        if (-1 != n) {
            var r = null == o ? void 0 : o.getCurrentLevel()
              , a = null == r ? void 0 : r.getTimedObjective();
            if (null != a) {
                var s = new UTCancelTimedEvolutionPopupViewController;
                s.setBodyText(t.localize("view.popup.cancelEvolution.body")),
                s.setTitleText(t.localize("view.popup.cancelEvolution.title")),
                s.setTimerData(a, n),
                s.onExit.observe(this, function(e, t) {
                    e.unobserve(i),
                    t === enums.UIDialogOptions.OK && i.cancelTimedEvo()
                }),
                gPopupClickShield.setActivePopup(s)
            }
        }
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onResumeSlot = function() {
        var a = this
          , s = services.Localization
          , l = services.Notification
          , e = this.viewmodel.getSelectedSlot();
        e && this.viewmodel.resumeSlot(e.id).observe(this, function(e, t) {
            var i, o;
            if (e.unobserve(a),
            t.success && JSUtils.isObject(t.data)) {
                a.renderView();
                var n = a.viewmodel.getSlotById(t.data.pausedSlotId);
                n && l.queue([s.localize("notification.academy.slotpaused", [n.slotName]), UINotificationType.NEUTRAL])
            } else if (!t.success) {
                var r = void 0;
                NetworkErrorManager.checkCriticalStatus(t.status) ? (NetworkErrorManager.handleStatus(t.status),
                r = s.localize("academy.resumeslot.loaderror")) : t.status === HttpStatusCode.SERVICE_UNAVAILABLE_ERROR || (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? (r = s.localize("academy.feature.disabled"),
                services.Academy.reset(),
                null === (o = a.getNavigationController()) || void 0 === o || o.popToRootViewController()) : r = s.localize("academy.resumeslot.unexpectederror"),
                r && l.queue([r, UINotificationType.NEGATIVE])
            }
        })
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onIndexChange = function(e, t, i) {
        i.index !== this.viewmodel.getSelectedLevelIndex() && (this.viewmodel.setSelectedLevelIndex(i.index),
        this.renderView())
    }
    ,
    UTAcademySlotItemDetailsViewController.prototype.onUpdateSlotView = function(e, t, i) {
        this.renderView()
    }
    ,
    UTAcademySlotItemDetailsViewController
}(EAViewController))
  , UTEvolveAnimationShineView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTEvolveAnimationShineView() {
        var e = null !== t && t.apply(this, arguments) || this;
        return e.loop = !1,
        e.offsetX = 56,
        e.offsetY = 25,
        e.traceWidth = 3,
        e.shineSpriteX = 56,
        e.shineSpriteY = -375,
        e.animationSpeed = 4,
        e
    }
    return __extends(UTEvolveAnimationShineView, t),
    UTEvolveAnimationShineView.prototype.getAnimationSpeed = function() {
        return this.animationSpeed
    }
    ,
    UTEvolveAnimationShineView.prototype.setShellMask = function(e) {
        if (this.loop = !0,
        this.pixiApplication) {
            var t = PIXI.Sprite.from(e);
            t.height = 200,
            t.width = 144,
            this.pixiApplication.stage.addChild(t),
            (this.pixiApplication.stage.mask = t).position.set(this.offsetX, this.offsetY)
        }
    }
    ,
    UTEvolveAnimationShineView.prototype.startGlowAnimation = function(e, t) {
        if (this.pixiApplication) {
            this.shineSprite.width = 128;
            var i = this.pixiApplication.stage.mask;
            i && this.pixiApplication.stage.removeChild(i),
            this.pixiApplication.stage.mask = this.shineSprite,
            this.shineSprite.position.set(this.shineSpriteX, this.shineSpriteY);
            var o = PIXI.Sprite.from(e)
              , n = PIXI.Sprite.from(t);
            o.height = 200,
            o.width = 144,
            n.x += this.traceWidth,
            n.y += this.traceWidth,
            n.width -= 2 * this.traceWidth,
            n.height -= 2 * this.traceWidth,
            o.addChild(n),
            o.mask = n,
            o.position.set(this.offsetX, this.offsetY),
            this.pixiApplication.stage.addChild(o)
        }
    }
    ,
    UTEvolveAnimationShineView
}(UTBaseShineView))
  , UTBackgroundEffectsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTBackgroundEffectsView() {
        var e = null !== t && t.apply(this, arguments) || this;
        return e.white = "rgba(255, 255, 255, 0.90)",
        e.transparent = "rgba(255, 255, 255, 0.0)",
        e.shineSpriteY = -270,
        e.shineSpriteX = 30,
        e.isAnimating = !1,
        e.secondAnimation = !1,
        e
    }
    return __extends(UTBackgroundEffectsView, t),
    UTBackgroundEffectsView.prototype.dealloc = function() {
        this.stopAnimation(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTBackgroundEffectsView.prototype.startGlowAnimation = function() {
        if (!this.isAnimating && !this.pixiApplication) {
            if (this.pixiApplicationOptions = new PixiApplicationOptions,
            this.pixiApplicationOptions.backgroundAlpha = 0,
            this.pixiApplicationOptions.autoDensity = !0,
            this.pixiApplicationOptions.resolution = window.devicePixelRatio,
            PIXI.utils.skipHello(),
            this.pixiApplication = new PIXI.Application(this.pixiApplicationOptions),
            this.shineSprite = new PIXI.Sprite(this._generateShineTexture()),
            this.pixiApplication) {
                this.__container.appendChild(this.pixiApplication.view);
                var e = this.pixiApplication.loader;
                e.add("triangles", "images/PackAnimation/triangles.png"),
                e.add("mask", "images/PackAnimation/mask.png"),
                e.load(this._assetsLoaded.bind(this))
            }
            this._animateShineTexture(),
            this.isAnimating = !0
        }
    }
    ,
    UTBackgroundEffectsView.prototype._assetsLoaded = function(e, t) {
        this.pixiApplication && (this.bgSprite = new PIXI.Sprite(t.triangles.texture),
        this.maskSprite = new PIXI.Sprite(t.mask.texture),
        this.bgSprite.scale.set(.5),
        this.bgSprite.anchor.set(.5),
        this.maskSprite.anchor.set(.5),
        this.bgSprite.x = 128,
        this.bgSprite.y = 128)
    }
    ,
    UTBackgroundEffectsView.prototype._generateShineTexture = function() {
        var e = document.createElement("canvas")
          , t = e.getContext("2d");
        if (e.width = 64,
        e.height = 1,
        t) {
            var i = t.createLinearGradient(0, 0, 64, 0);
            i.addColorStop(0, this.transparent),
            i.addColorStop(.25, this.white),
            i.addColorStop(.85, this.white),
            i.addColorStop(1, this.transparent),
            t.fillStyle = i,
            t.fillRect(0, 0, 64, 1)
        }
        return PIXI.Texture.from(e)
    }
    ,
    UTBackgroundEffectsView.prototype.stopAnimation = function() {
        this.pixiApplication && this.isAnimating && (this.pixiApplication.destroy(!0),
        this.isAnimating = !1,
        this.pixiApplication = null)
    }
    ,
    UTBackgroundEffectsView.prototype._animateShineTexture = function() {
        var e, t, i = this, o = 4 * Math.SQRT2;
        this.shineSprite.position.set(this.shineSpriteX, this.shineSpriteY),
        this.shineSprite.rotation = Math.PI / 7,
        this.shineSprite.width = 64,
        this.shineSprite.height = 500,
        this.shineSprite.alpha = 1,
        null === (e = this.pixiApplication) || void 0 === e || e.stage.addChild(this.shineSprite);
        var n = .01;
        null === (t = this.pixiApplication) || void 0 === t || t.ticker.add(function(e) {
            i.pixiApplication && (i.secondAnimation ? n < 7 && (n += .05 * e,
            i.maskSprite.scale.set(n)) : i.shineSprite.width < 500 && (i.pixiApplication.resizeTo = i.__container,
            i.shineSprite.width += e * o))
        })
    }
    ,
    UTBackgroundEffectsView.prototype.setShell = function(e) {
        if (this.pixiApplication) {
            var t = PIXI.Sprite.from(e);
            t.x = 56,
            t.y = 25,
            t.height = 200,
            t.width = 144,
            this.pixiApplication.stage.addChild(t),
            this.pixiApplication.stage.mask = this.shineSprite,
            t.filters = [new PIXI.filters.BlurFilter(40,15)]
        }
    }
    ,
    UTBackgroundEffectsView.prototype.startTrianglesAnimation = function() {
        this.secondAnimation = !0,
        this.pixiApplication && (this.pixiApplication.stage.removeChild(this.shineSprite),
        this.pixiApplication.stage.mask = null,
        this.bgSprite.mask = this.maskSprite,
        this.bgSprite.addChild(this.maskSprite),
        this.pixiApplication.stage.addChild(this.bgSprite))
    }
    ,
    UTBackgroundEffectsView
}(EAView));
UTBackgroundEffectsView.prototype._generate = function _generate() {
    this._generated || (this.__container = document.createElement("div"),
    this.__root = this.__container,
    this._generated = !0)
}
,
UTBackgroundEffectsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__container = null
}
,
UTBackgroundEffectsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTEvolveAnimationView = function(e) {
    function UTEvolveAnimationView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTEvolveAnimationView, e),
    UTEvolveAnimationView.prototype.dealloc = function() {
        this.cardComponent.dealloc(),
        this.cardComponent2.dealloc(),
        e.prototype.dealloc.call(this)
    }
    ,
    UTEvolveAnimationView.prototype.init = function() {
        e.prototype.init.call(this),
        this.setInteractionState(!0),
        this._skipButton.init(),
        this._skipButton.setText(services.Localization.localize("academy.slot.skipButton")),
        this._skipButton.addTarget(this, this._eSkipButtonSelected, EventType.TAP),
        this._skipButton.setInteractionState(!0)
    }
    ,
    UTEvolveAnimationView.prototype.runAnimation = function(e, t) {
        var i = this;
        if (this.cardComponent.areAssetsLoaded() && this.cardComponent2.areAssetsLoaded()) {
            var o = this.cardComponent2.getShellMask()
              , n = (null == t || t.getLargeColorMap(e.getTier()),
            this.cardComponent.getShellMask(!0))
              , r = this.cardComponent.getShellSillouhette({
                r: 255,
                g: 255,
                b: 255
            });
            setTimeout(function() {
                r && n && (i._evolveShine.startAnimation(),
                i._evolveShine.startGlowAnimation(r, n),
                i._backgroundEffects.startGlowAnimation(),
                i._backgroundEffects.setShell(r))
            }, 1200),
            setTimeout(function() {
                i.__itemShell2.classList.add("front"),
                i._backgroundEffects.startTrianglesAnimation(),
                i._evolvedShine.shineAlpha = .7,
                i._evolvedShine.startAnimation(),
                o && i._evolvedShine.setShellMask(o)
            }, 3e3)
        } else
            setTimeout(this.runAnimation.bind(this, e, t), 10)
    }
    ,
    UTEvolveAnimationView.prototype.generateItem = function(e, t) {
        this.cardComponent = new UTLargePlayerItemView,
        this.cardComponent.init(),
        this.cardComponent.supportSecondaryViews = !1,
        this.cardComponent.render(e),
        this.__itemShell.appendChild(this.cardComponent.getRootElement()),
        this.cardComponent2 = new UTLargePlayerItemView,
        this.cardComponent2.init(),
        this.cardComponent2.supportSecondaryViews = !1,
        this.cardComponent2.render(t),
        this.__itemShell2.appendChild(this.cardComponent2.getRootElement())
    }
    ,
    UTEvolveAnimationView.prototype._eSkipButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTEvolveAnimationView.Events.SKIP_ANIMATION)
    }
    ,
    UTEvolveAnimationView.Events = {
        SKIP_ANIMATION: "SKIP_ANIMATION"
    },
    UTEvolveAnimationView
}(EATargetActionView);
UTEvolveAnimationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-evolve-animation-view");
        var t = document.createElement("div");
        t.classList.add("pack-animation-vignette"),
        e.appendChild(t),
        this.__itemShell = document.createElement("div"),
        this.__itemShell.classList.add("animated-current-item-shell"),
        this._evolveShine = new UTEvolveAnimationShineView,
        this._evolveShine.getRootElement().classList.add("ut-item-view--shine"),
        this.__itemShell.appendChild(this._evolveShine.getRootElement()),
        this._backgroundEffects = new UTBackgroundEffectsView,
        this._backgroundEffects.getRootElement().classList.add("back"),
        this._backgroundEffects.getRootElement().classList.add("ut-item-view--shine"),
        this.__itemShell.appendChild(this._backgroundEffects.getRootElement()),
        e.appendChild(this.__itemShell),
        this.__itemShell2 = document.createElement("div"),
        this.__itemShell2.classList.add("animated-upgraded-item-shell"),
        this._evolvedShine = new UTEvolveAnimationShineView,
        this._evolvedShine.getRootElement().classList.add("ut-item-view--shine"),
        this.__itemShell2.appendChild(this._evolvedShine.getRootElement()),
        e.appendChild(this.__itemShell2),
        this._skipButton = new UTStandardButtonControl,
        this._skipButton.getRootElement().classList.add("skip-button"),
        this._skipButton.getRootElement().classList.add("call-to-action"),
        e.appendChild(this._skipButton.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTEvolveAnimationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__itemShell = null,
    this._evolveShine.destroy(),
    this._backgroundEffects.destroy(),
    this.__itemShell2 = null,
    this._evolvedShine.destroy(),
    this._skipButton.destroy()
}
,
UTEvolveAnimationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTEvolveAnimationViewController = function(t) {
    function UTEvolveAnimationViewController() {
        var e = t.call(this) || this;
        return e.animationTimeout = 0,
        e.running = !1,
        e.callback = null,
        e
    }
    return __extends(UTEvolveAnimationViewController, t),
    UTEvolveAnimationViewController.prototype.initWithEvolution = function(e, t) {
        this.initialized || (this.currentItem = e,
        this.upgradedItem = t,
        DebugUtils.Assert(JSUtils.isValid(this.currentItem), "UTEvolveAnimationViewController expects evolution to be a valid item"),
        this.init())
    }
    ,
    UTEvolveAnimationViewController.prototype.dealloc = function() {
        clearTimeout(this.animationTimeout),
        this.callback = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTEvolveAnimationViewController.prototype._getViewInstanceFromData = function() {
        return new UTEvolveAnimationView
    }
    ,
    UTEvolveAnimationViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.getView().addTarget(this, this.eSkipAnimation, UTEvolveAnimationView.Events.SKIP_ANIMATION),
        this.runAnimation();
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.APP_PAUSE, this, this._nAppPaused),
        e.addObserver(AppNotification.APP_RESUME, this, this._nAppResumed)
    }
    ,
    UTEvolveAnimationViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this),
        this.getView().removeTarget(this, this.eSkipAnimation, UTEvolveAnimationView.Events.SKIP_ANIMATION)
    }
    ,
    UTEvolveAnimationViewController.prototype.setAnimationCallback = function(e) {
        JSUtils.isFunction(e) && (this.callback = e)
    }
    ,
    UTEvolveAnimationViewController.prototype.runAnimation = function() {
        if (!this.running) {
            this.running = !0;
            var e = this.getView()
              , t = services.Configuration.getItemRarity(this.upgradedItem);
            e.generateItem(this.currentItem, this.upgradedItem),
            e.runAnimation(this.currentItem, t),
            this.animationTimeout = window.setTimeout(this.runCallback.bind(this), 10500)
        }
    }
    ,
    UTEvolveAnimationViewController.prototype.runCallback = function() {
        var e = this.getNavigationController();
        this.callback && JSUtils.isFunction(this.callback) ? this.callback() : e && e.popViewController()
    }
    ,
    UTEvolveAnimationViewController.prototype._nAppPaused = function(e, t, i) {
        clearTimeout(this.animationTimeout)
    }
    ,
    UTEvolveAnimationViewController.prototype._nAppResumed = function(e, t, i) {
        this.runCallback()
    }
    ,
    UTEvolveAnimationViewController.prototype.eSkipAnimation = function(e, t, i) {
        this.runCallback()
    }
    ,
    UTEvolveAnimationViewController
}(EAViewController)
  , UTAcademySplitViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTAcademySplitViewController(e, t) {
        void 0 === t && (t = !1);
        var i = o.call(this) || this;
        return i.viewModel = e,
        i.slotItemViewController = new UTAcademySlotItemDetailsViewController(i.viewModel),
        i.searchViewController = new UTAcademyClubSearchViewController(i.viewModel),
        i.rightNavigationController = new UTNavigationController,
        i.leftNavigationController = new UTNavigationController,
        i.isPlayerSelected = t,
        i
    }
    return __extends(UTAcademySplitViewController, o),
    UTAcademySplitViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this.rightNavigationController.init(),
        this.leftNavigationController.init(),
        this.slotItemViewController.init(),
        this.searchViewController.init())
    }
    ,
    UTAcademySplitViewController.prototype.dealloc = function() {
        o.prototype.dealloc.call(this),
        this.rightNavigationController.dealloc(),
        this.leftNavigationController.dealloc(),
        this.slotItemViewController.dealloc(),
        this.searchViewController.dealloc()
    }
    ,
    UTAcademySplitViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this),
        this.setLeftController(this.leftNavigationController),
        this.leftNavigationController.pushViewController(this.slotItemViewController),
        this.setRightController(this.rightNavigationController),
        this.rightNavigationController.pushViewController(this.searchViewController),
        getDefaultDispatcher().addObserver(AppNotification.ACADEMY_ITEM_SLOTTED, this, this.handleApplyEvolution),
        getDefaultDispatcher().addObserver(AppNotification.ACADEMY_ITEM_CHANGED, this, this.handleTimedSlotClosed),
        this.isPlayerSelected && this.hideRightPanel(!0)
    }
    ,
    UTAcademySplitViewController.prototype.viewDidDisappear = function() {
        getDefaultDispatcher().removeObserver(AppNotification.ACADEMY_ITEM_SLOTTED, this),
        getDefaultDispatcher().removeObserver(AppNotification.ACADEMY_ITEM_CHANGED, this),
        o.prototype.viewDidDisappear.call(this)
    }
    ,
    UTAcademySplitViewController.prototype.getNavigationTitle = function() {
        var e, t;
        return null !== (t = null === (e = this.viewModel.getSelectedSlot()) || void 0 === e ? void 0 : e.slotName) && void 0 !== t ? t : services.Localization.localize("navbar.label.academy")
    }
    ,
    UTAcademySplitViewController.prototype.handleApplyEvolution = function(e, t, i) {
        this.hideRightPanel(!0)
    }
    ,
    UTAcademySplitViewController.prototype.handleTimedSlotClosed = function() {
        var e;
        null === (e = this.getNavigationController()) || void 0 === e || e.popViewController()
    }
    ,
    UTAcademySplitViewController
}(UTSplitViewController))
  , UTPaginatedAcademySlotListViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTPaginatedAcademySlotListViewModel(e) {
        var t = i.call(this, e) || this;
        return t.isFull = !1,
        t.numItemsPerPage = isPhone() ? 6 : 12,
        t
    }
    return __extends(UTPaginatedAcademySlotListViewModel, i),
    UTPaginatedAcademySlotListViewModel.prototype.add = function(e, t) {
        return i.prototype.add.call(this, e, t),
        JSUtils.isNumber(t) || this.organizeItems(),
        e
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.addArray = function(e) {
        var t = this.length;
        e.forEach(function(e) {
            this.add(e, t),
            t++
        }, this),
        this.organizeItems()
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.removeArray = function(i) {
        var t = [];
        this._collection.forEach(function(e) {
            !function(t) {
                return !!JSUtils.find(i, function(e) {
                    return t.id === e.id
                })
            }(e) && t.push(e)
        }),
        this._collection = t,
        this.organizeItems()
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.organizeItems = function() {
        0 !== this.length && this.resetCollection(this.values())
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.resetCollection = function(e) {
        i.prototype.resetCollection.call(this, e),
        this.isFull = !1
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.shouldRequestItems = function() {
        return !this.isFull || this.length <= this.numItemsPerPage * this.getCurrentPage()
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.getCurrentPage = function() {
        return Math.max(Math.ceil((this.getIndex() + 1) / this.numItemsPerPage), 1)
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.getNumPages = function() {
        return Math.max(Math.ceil(this.length / this.numItemsPerPage), 1)
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.getPageIndex = function() {
        return this.getIndex() % this.numItemsPerPage
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.getPageStartIndex = function(e) {
        return 1 <= e ? (e - 1) * this.numItemsPerPage : 0
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.getPageItems = function() {
        var e = this.getPageStartIndex(this.getCurrentPage());
        return this.values().slice(e, e + this.numItemsPerPage)
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.hasPreviousPage = function() {
        return 1 < this.getCurrentPage()
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.hasNextPage = function() {
        return this.getCurrentPage() < this.getNumPages()
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.previousPage = function() {
        return this.hasPreviousPage() && this.setIndex(this.getPageStartIndex(this.getCurrentPage() - 1)),
        this.getPageItems()
    }
    ,
    UTPaginatedAcademySlotListViewModel.prototype.nextPage = function() {
        return this.hasNextPage() && this.setIndex(this.getPageStartIndex(this.getCurrentPage() + 1)),
        this.getPageItems()
    }
    ,
    UTPaginatedAcademySlotListViewModel
}(EAIterator))
  , UTAcademySlotSearchCriteriaDTO = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTAcademySlotSearchCriteriaDTO() {
        var e = t.call(this) || this;
        return e._sort = SearchSortOrder.ASCENDING,
        e.count = 20,
        e.offset = 0,
        e._slotStatus = AcademySlotState.NOT_STARTED,
        e.categoryId = null,
        e
    }
    return __extends(UTAcademySlotSearchCriteriaDTO, t),
    Object.defineProperty(UTAcademySlotSearchCriteriaDTO.prototype, "sort", {
        get: function() {
            return this._sort
        },
        set: function(e) {
            this._sort = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTAcademySlotSearchCriteriaDTO.prototype, "slotStatus", {
        get: function() {
            return this._slotStatus
        },
        set: function(e) {
            this._slotStatus = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTAcademySlotSearchCriteriaDTO.prototype.update = function(e) {
        this.offset = e.offset,
        this.count = e.count,
        this.sort = e.sort,
        this.slotStatus = e.slotStatus,
        this.categoryId = e.categoryId
    }
    ,
    UTAcademySlotSearchCriteriaDTO.prototype.compare = function(e) {
        return this.offset === e.offset && this.sort === e.sort && this.slotStatus === e.slotStatus && this.count === e.count && this.categoryId === e.categoryId
    }
    ,
    UTAcademySlotSearchCriteriaDTO.prototype.reset = function() {
        this.offset = 0,
        this._sort = SearchSortOrder.ASCENDING,
        this.slotStatus = AcademySlotState.NOT_STARTED,
        this.count = 20,
        this.categoryId = null
    }
    ,
    UTAcademySlotSearchCriteriaDTO.prototype.isModified = function(e) {
        return void 0 === e && (e = !1),
        !e && (this.sort !== SearchSortOrder.ASCENDING || this.slotStatus !== AcademySlotState.STARTED)
    }
    ,
    UTAcademySlotSearchCriteriaDTO
}(EAObject))
  , UTAcademyFiltersView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTAcademyFiltersView() {
        return t.call(this) || this
    }
    return __extends(UTAcademyFiltersView, t),
    UTAcademyFiltersView.prototype.init = function() {
        t.prototype.init.call(this),
        this._sortGroupDD.init(),
        this._resetBtn.init(),
        this._submitBtn.init();
        var e = services.Localization;
        this.__sortGroupLabel.textContent = e.localize("objectives.filters.orderby"),
        this._resetBtn.addTarget(this, this._resetPressed, EventType.TAP),
        this._submitBtn.addTarget(this, this._submitPressed, EventType.TAP)
    }
    ,
    UTAcademyFiltersView.prototype.dealloc = function() {
        this._resetBtn.removeTarget(this, this._resetPressed, EventType.TAP),
        this._submitBtn.removeTarget(this, this._submitPressed, EventType.TAP),
        t.prototype.dealloc.call(this)
    }
    ,
    UTAcademyFiltersView.prototype._submitPressed = function(e, t, i) {
        var o = {
            sortOption: this._sortGroupDD.value
        };
        this._triggerActions(UTAcademyFiltersView.Event.SUBMIT, o)
    }
    ,
    UTAcademyFiltersView.prototype._resetPressed = function(e, t, i) {
        this._triggerActions(UTAcademyFiltersView.Event.RESET)
    }
    ,
    UTAcademyFiltersView.prototype.render = function() {
        var e = services.Localization;
        this._submitBtn.setText(e.localize("search.filter.submit")),
        this._resetBtn.setText(e.localize("search.filter.reset"))
    }
    ,
    UTAcademyFiltersView.prototype.getSubmitBtn = function() {
        return this._submitBtn
    }
    ,
    UTAcademyFiltersView.prototype.getSortOptionDD = function() {
        return this._sortGroupDD
    }
    ,
    UTAcademyFiltersView.prototype.setSortOptions = function(e) {
        this._sortGroupDD.setOptions(e)
    }
    ,
    UTAcademyFiltersView.prototype.setSortOption = function(e) {
        this._sortGroupDD.setDefaultIndexByValue(e, !0)
    }
    ,
    UTAcademyFiltersView.Event = {
        SUBMIT: "UTAcademyFiltersView.SUBMIT",
        RESET: "UTAcademyFiltersView.RESET"
    },
    UTAcademyFiltersView
}(EATargetActionView));
UTAcademyFiltersView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-academy-filters-view");
        var t = document.createElement("div");
        t.classList.add("ut-academy-filters-view--dropdown-container"),
        this.__sortGroupLabel = document.createElement("span"),
        this.__sortGroupLabel.classList.add("ut-academy-filters-view--dropdown-label"),
        t.appendChild(this.__sortGroupLabel),
        this._sortGroupDD = new UTDropDownControl,
        t.appendChild(this._sortGroupDD.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-academy-filters-view--button-group"),
        this._resetBtn = new UTStandardButtonControl,
        i.appendChild(this._resetBtn.getRootElement()),
        this._submitBtn = new UTStandardButtonControl,
        this._submitBtn.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._submitBtn.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAcademyFiltersView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__sortGroupLabel = null,
    this._sortGroupDD.destroy(),
    this._resetBtn.destroy(),
    this._submitBtn.destroy()
}
,
UTAcademyFiltersView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAcademyFiltersViewController = function(i) {
    function UTAcademyFiltersViewController(e) {
        var t = i.call(this) || this;
        return t.sortBy = e,
        t
    }
    return __extends(UTAcademyFiltersViewController, i),
    UTAcademyFiltersViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        TelemetryManager.trackEvent(TelemetryManager.Sections.ACADEMY, TelemetryManager.Categories.FILTER, "Academy filters - Sheet opened");
        var e = this.getView();
        e.setSortOptions(factories.DataProvider.getAcademyGroupSortDP()),
        e.setSortOption(this.sortBy),
        e.addTarget(this, this.submitTap, UTAcademyFiltersView.Event.SUBMIT),
        e.getSortOptionDD().addTarget(this, this.eSortOptionChanged, EventType.CHANGE),
        e.render()
    }
    ,
    UTAcademyFiltersViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.submitTap, UTAcademyFiltersView.Event.SUBMIT),
        e.getSortOptionDD().removeTarget(this, this.eSortOptionChanged, EventType.CHANGE)
    }
    ,
    UTAcademyFiltersViewController.prototype._getViewInstanceFromData = function() {
        return new UTAcademyFiltersView
    }
    ,
    UTAcademyFiltersViewController.prototype.submitTap = function(e, t) {
        this.closePopup()
    }
    ,
    UTAcademyFiltersViewController.prototype.eSortOptionChanged = function(e, t, i) {
        this.sortBy = i.value,
        TelemetryManager.trackEvent(TelemetryManager.Sections.ACADEMY, TelemetryManager.Categories.FILTER, "Academy filters - Sort Option Changed")
    }
    ,
    UTAcademyFiltersViewController
}(BasePopupViewController)
  , UTCancelTimedEvolutionPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTCancelTimedEvolutionPopupView() {
        return t.call(this) || this
    }
    return __extends(UTCancelTimedEvolutionPopupView, t),
    UTCancelTimedEvolutionPopupView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._btnCancel.init(),
        this._closeBtn.init(),
        this._btnConfirm.init(),
        this._btnCancel.addTarget(this, this.handleButtonSelect, EventType.TAP),
        this._closeBtn.addTarget(this, this.handleButtonSelect, EventType.TAP),
        this._btnConfirm.addTarget(this, this.handleButtonSelect, EventType.TAP),
        this._btnCancel.setText(e.localize("timeEvolution.cancelPopup.decline")),
        this._btnConfirm.setText(e.localize("timeEvolution.cancelPopup.confirm"))
    }
    ,
    UTCancelTimedEvolutionPopupView.prototype.dealloc = function() {
        this._btnCancel.removeTarget(this, this.handleButtonSelect, EventType.TAP),
        this._closeBtn.removeTarget(this, this.handleButtonSelect, EventType.TAP),
        this._btnConfirm.removeTarget(this, this.handleButtonSelect, EventType.TAP),
        t.prototype.dealloc.call(this)
    }
    ,
    UTCancelTimedEvolutionPopupView.prototype.setTitleText = function(e) {
        this.__title.textContent = e
    }
    ,
    UTCancelTimedEvolutionPopupView.prototype.setBodyText = function(e) {
        this.__body.textContent = e
    }
    ,
    UTCancelTimedEvolutionPopupView.prototype.setRemainingTimeText = function(e) {
        this.__timeRemainLabel.textContent = e
    }
    ,
    UTCancelTimedEvolutionPopupView.prototype.handleButtonSelect = function(e, t, i) {
        e === this._btnCancel || e === this._closeBtn ? this._triggerActions(UTCancelTimedEvolutionPopupView.Event.CANCEL) : e === this._btnConfirm && this._triggerActions(UTCancelTimedEvolutionPopupView.Event.CONFIRM)
    }
    ,
    UTCancelTimedEvolutionPopupView.Event = Object.freeze({
        CANCEL: "UTCancelTimedEvolutionPopupView.Event.CANCEL",
        CONFIRM: "UTCancelTimedEvolutionPopupView.Event.CONFIRM"
    }),
    UTCancelTimedEvolutionPopupView
}(EATargetActionView));
UTCancelTimedEvolutionPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-cancel-evolution-popup-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._closeBtn = new UTImageButtonControl,
        this._closeBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._closeBtn.getRootElement()),
        e.appendChild(t),
        this.__body = document.createElement("p"),
        this.__body.classList.add("ut-cancel-evolution-popup-view--body"),
        e.appendChild(this.__body);
        var i = document.createElement("div");
        i.classList.add("underline"),
        i.classList.add("ut-st-button-group"),
        this._btnConfirm = new UTStandardButtonControl,
        this._btnConfirm.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnConfirm.getRootElement()),
        this._btnCancel = new UTStandardButtonControl,
        i.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-cancel-evolution-popup-view--time-container");
        var n = document.createElement("span");
        n.classList.add("ut-cancel-evolution-popup-view--time-container--icon"),
        o.appendChild(n),
        this.__timeRemainLabel = document.createElement("span"),
        this.__timeRemainLabel.classList.add("ut-cancel-evolution-popup-view--time-container--message"),
        o.appendChild(this.__timeRemainLabel),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCancelTimedEvolutionPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._closeBtn.destroy(),
    this.__body = null,
    this._btnConfirm.destroy(),
    this._btnCancel.destroy(),
    this.__timeRemainLabel = null
}
,
UTCancelTimedEvolutionPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCancelTimedEvolutionPopupViewController = function(t) {
    function UTCancelTimedEvolutionPopupViewController() {
        var e = t.call(this) || this;
        return e.titleText = "",
        e.bodyText = "",
        e.timeRemain = "",
        e.timerInterval = null,
        e
    }
    return __extends(UTCancelTimedEvolutionPopupViewController, t),
    UTCancelTimedEvolutionPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTCancelTimedEvolutionPopupView
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.handleViewEvent, UTCancelTimedEvolutionPopupView.Event.CANCEL),
        e.addTarget(this, this.handleViewEvent, UTCancelTimedEvolutionPopupView.Event.CONFIRM)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.setTitleText = function(e) {
        this.titleText = e,
        this.getView().setTitleText(this.titleText)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.viewDidDisappear = function() {
        var e;
        t.prototype.viewDidDisappear.call(this),
        null === (e = this.timerInterval) || void 0 === e || e.stop()
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.dealloc = function() {
        var e;
        t.prototype.dealloc.call(this),
        this.timerInterval && (null === (e = this.timerInterval) || void 0 === e || e.stop(),
        this.timerInterval.dealloc(),
        this.timerInterval = null)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.setTimeRemainText = function(e) {
        this.timeRemain = e,
        this.getView().setRemainingTimeText(this.timeRemain)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.setTimerData = function(e, t) {
        this.objective = e,
        this.level = t,
        null == this.timerInterval && (this.timerInterval = new EAIntervalController(1e3,this.updateTimer.bind(this)),
        this.timerInterval.start()),
        this.updateTimer()
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.updateTimer = function() {
        var e, t = services.Localization, i = this.objective.calculateTimedEvoRemainingTime(), o = t.localize("view.popup.cancelEvolution.timeRemain", [t.localizeTimeRemaining(i), this.level.toString()]);
        this.getView().setRemainingTimeText(o),
        i <= 0 && (null === (e = this.timerInterval) || void 0 === e || e.stop())
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.setBodyText = function(e) {
        this.bodyText = e,
        this.getView().setBodyText(this.bodyText)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.handleViewEvent, UTCancelTimedEvolutionPopupView.Event.CANCEL),
        e.removeTarget(this, this.handleViewEvent, UTCancelTimedEvolutionPopupView.Event.CONFIRM)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key === KeyboardKey.ESCAPE || e.key === KeyboardKey.MS_ESCAPE ? this.onExit.notify(enums.UIDialogOptions.CANCEL) : e.key === KeyboardKey.ENTER && this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTCancelTimedEvolutionPopupViewController.prototype.handleViewEvent = function(e, t, i) {
        t === UTCancelTimedEvolutionPopupView.Event.CANCEL ? this.onExit.notify(enums.UIDialogOptions.CANCEL) : t === UTCancelTimedEvolutionPopupView.Event.CONFIRM && this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTCancelTimedEvolutionPopupViewController
}(BasePopupViewController)
  , UTAcademyHubViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTAcademyHubViewController() {
        var e = o.call(this) || this;
        return e.viewmodel = new UTAcademyViewModel(services.Academy),
        e.paginationList = new UTPaginatedAcademySlotListViewModel([]),
        e.intervalController = new EAIntervalController(1e3,e.onTimedUpdate.bind(e)),
        e
    }
    return __extends(UTAcademyHubViewController, o),
    UTAcademyHubViewController.prototype.dealloc = function() {
        var e;
        this.filtersModal && (this.filtersModal.onExit.unobserve(this),
        this.filtersModal.dealloc(),
        this.filtersModal = null),
        null === (e = this.intervalController) || void 0 === e || e.dealloc(),
        this.intervalController = null,
        o.prototype.dealloc.call(this)
    }
    ,
    UTAcademyHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTAcademyHubView({
            localization: services.Localization
        })
    }
    ,
    UTAcademyHubViewController.prototype._getTelemetryId = function() {
        return "Academy Hub"
    }
    ,
    UTAcademyHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.academy")
    }
    ,
    UTAcademyHubViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = this.getView();
        TelemetryManager.trackPage(TelemetryManager.Sections.ACADEMY, "Academy Hub"),
        services.Academy.requiresHubCall() || (this.setupTabs(this.viewmodel.hasSlottedSlots(), this.viewmodel.getCategories()),
        e.setActiveTab(this.viewmodel.activeTab)),
        this.requestData(),
        getDefaultDispatcher().notify(AppNotification.ACADEMY_UPDATE, this, {
            unread: 0
        }),
        e.addTarget(this, this.eTabSelected, UTAcademyHubView.Event.TAB_SELECTED),
        e.addTarget(this, this.onTileSelected, UTAcademyHubView.Event.TILE_SELECTED),
        e.addTarget(this, this.onClaimSelected, UTAcademyHubView.Event.CLAIM_SELECTED),
        e.addTarget(this, this.onNextPageSelected, enums.UIPaginationEvent.NEXT),
        e.addTarget(this, this.onPreviousPageSelected, enums.UIPaginationEvent.PREVIOUS),
        e.addTarget(this, this.eFilterSelected, UTAcademyHubView.Event.FILTERS_SELECTED);
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.nAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.nAppResumed)
    }
    ,
    UTAcademyHubViewController.prototype.viewWillDisappear = function() {
        var e;
        o.prototype.viewWillDisappear.call(this);
        var t = this.getView();
        t.removeTarget(this, this.eTabSelected, UTAcademyHubView.Event.TAB_SELECTED),
        t.removeTarget(this, this.onTileSelected, UTAcademyHubView.Event.TILE_SELECTED),
        t.removeTarget(this, this.onNextPageSelected, enums.UIPaginationEvent.NEXT),
        t.removeTarget(this, this.onPreviousPageSelected, enums.UIPaginationEvent.PREVIOUS),
        t.removeTarget(this, this.eFilterSelected, UTAcademyHubView.Event.FILTERS_SELECTED),
        null === (e = this.intervalController) || void 0 === e || e.stop();
        var i = getDefaultDispatcher();
        i.removeObserver(AppNotification.APP_PAUSE, this),
        i.removeObserver(AppNotification.APP_RESUME, this)
    }
    ,
    UTAcademyHubViewController.prototype.nAppPaused = function(e, t, i) {
        var o;
        null === (o = this.intervalController) || void 0 === o || o.stop()
    }
    ,
    UTAcademyHubViewController.prototype.nAppResumed = function(e, t, i) {
        var o;
        0 < this.paginationList.getPageItems().length && (null === (o = this.intervalController) || void 0 === o || o.start())
    }
    ,
    UTAcademyHubViewController.prototype.requestData = function() {
        var e, i = this;
        if (services.Academy.requiresHubCall())
            e = this.viewmodel.requestHub(this.viewmodel.searchCriteria);
        else
            switch (this.viewmodel.activeTab) {
            case AcademyDisplayGroup.SLOTTED:
                e = this.viewmodel.searchSlottedSlots(this.viewmodel.searchCriteria);
                break;
            case AcademyDisplayGroup.UNSLOTTED:
            default:
                if (!JSUtils.isValid(this.viewmodel.searchCriteria.categoryId) && 0 < this.viewmodel.getCategories().length) {
                    var t = this.viewmodel.getCategories()[0];
                    this.viewmodel.searchCriteria.categoryId = t.id
                }
                e = this.viewmodel.searchSlotsByCategory(this.viewmodel.searchCriteria)
            }
        e.observe(this, function(e, t) {
            e.unobserve(i),
            i.onRequestHubDataComplete(e, t)
        })
    }
    ,
    UTAcademyHubViewController.prototype.onRequestHubDataComplete = function(e, t) {
        var i, o, n, r, a, s, l, c = services.Localization, d = services.Notification;
        if (e.unobserve(this),
        t.success && JSUtils.isObject(t.data)) {
            if (l = t.data,
            Array.isArray(l.disabledSlotIds || l.disabledWithProgressSlotIds || l.expiredSlotIds || l.strippedSlotIds)) {
                this.handleNotifications(t.data);
                var u = this.viewmodel.getCategories();
                this.setupTabs(this.viewmodel.hasSlottedSlots(), u)
            }
            if (0 < t.data.slots.length) {
                this.viewmodel.setSlots(t.data.slots);
                var p = this.filterHiddenSlots(this.viewmodel.getSlots());
                if (0 === p.length)
                    null === (i = this.intervalController) || void 0 === i || i.stop(),
                    this.paginationList.resetCollection([]),
                    this.paginationList.isFull = !0,
                    this.paginationList.setIndex(0),
                    this.handleEmptyTab();
                else {
                    var h = this.paginationList.getIndex()
                      , _ = null !== (n = null === (o = t.data) || void 0 === o ? void 0 : o.isFull) && void 0 !== n && n;
                    this.paginationList.resetCollection(p),
                    this.paginationList.isFull = _,
                    this.paginationList.setIndex(h),
                    this.setPageSlots(this.paginationList.getPageItems()),
                    null === (r = this.intervalController) || void 0 === r || r.start()
                }
            } else
                null === (a = this.intervalController) || void 0 === a || a.stop(),
                this.paginationList.resetCollection([]),
                this.paginationList.isFull = !0,
                this.paginationList.setIndex(0),
                this.handleEmptyTab()
        } else if (!t.success) {
            var m = void 0;
            (m = NetworkErrorManager.checkCriticalStatus(t.status) ? (NetworkErrorManager.handleStatus(t.status),
            c.localize("academy.hub.loaderror")) : t.status === HttpStatusCode.SERVICE_UNAVAILABLE_ERROR || (null === (s = t.error) || void 0 === s ? void 0 : s.code) === UtasErrorCode.SERVICE_IS_DISABLED ? c.localize("academy.feature.disabled") : t.status === UtasErrorCode.UT_BAD_REQUEST ? c.localize("popup.academy.noslots.body") : c.localize("academy.hub.unexpectederror")) && d.queue([m, UINotificationType.NEGATIVE]),
            services.Academy.reset(),
            getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME)
        }
    }
    ,
    UTAcademyHubViewController.prototype.handleEmptyTab = function() {
        var e = services.Localization
          , t = this.viewmodel.activeTab === AcademyDisplayGroup.SLOTTED
          , i = this.getView();
        i.setPaginationState(!1, !1),
        i.renderEmpty(e.localize(t ? "academy.hub.title.no-my-slots" : "academy.hub.title.no-available-slots"), e.localize(t ? "academy.hub.description.no-my-slots" : "academy.hub.description.no-available-slots"))
    }
    ,
    UTAcademyHubViewController.prototype.filterHiddenSlots = function(e) {
        return e.filter(function(e) {
            return !e.hidden
        })
    }
    ,
    UTAcademyHubViewController.prototype.handleNotifications = function(o) {
        var e, t, i, n = this, r = services.Localization, a = services.Notification, s = o.disabledSlotIds, l = null !== (e = o.disabledWithProgressSlotIds) && void 0 !== e ? e : [], c = null !== (t = o.expiredSlotIds) && void 0 !== t ? t : [], d = null !== (i = o.strippedSlotIds) && void 0 !== i ? i : [];
        s.concat(l, c, d).forEach(function(t) {
            var e = ""
              , i = n.viewmodel.getSlotById(t) ? n.viewmodel.getSlotById(t) : o.temporarySlots.find(function(e) {
                return t === e.id
            });
            i && (s.includes(t) ? e = r.localize("academy.notification.disabled", [i.slotName]) : l.includes(t) ? e = r.localize("academy.notification.disabledWithProgress", [i.slotName]) : c.includes(t) ? e = r.localize("academy.notification.expired", [i.slotName]) : d.includes(t) && (e = r.localize("academy.notification.stripped", [i.slotName])),
            0 < e.length && a.queue([e, UINotificationType.NEUTRAL]))
        })
    }
    ,
    UTAcademyHubViewController.prototype.setupTabs = function(e, t) {
        this.getView().setupTabs(t);
        var i = this.viewmodel.getHighestPriorityCategory();
        -1 === this.viewmodel.activeTab && (e ? this.viewmodel.activeTab = AcademyDisplayGroup.SLOTTED : i && (this.viewmodel.activeTab = i.id))
    }
    ,
    UTAcademyHubViewController.prototype.setPageSlots = function(e) {
        var t = this.getView();
        t.render(e),
        t.setPaginationState(this.paginationList.hasPreviousPage(), this.paginationList.hasNextPage())
    }
    ,
    UTAcademyHubViewController.prototype.onPreviousPageSelected = function(e, t, i) {
        var o;
        (null === (o = this.paginationList) || void 0 === o ? void 0 : o.hasPreviousPage()) && this.setPageSlots(this.paginationList.previousPage())
    }
    ,
    UTAcademyHubViewController.prototype.onNextPageSelected = function(e, t, i) {
        var o;
        (null === (o = this.paginationList) || void 0 === o ? void 0 : o.hasNextPage()) && (this.paginationList.nextPage(),
        this.paginationList.shouldRequestItems() ? (this.viewmodel.searchCriteria.offset += this.viewmodel.searchCriteria.count,
        this.requestData()) : this.setPageSlots(this.paginationList.getPageItems()))
    }
    ,
    UTAcademyHubViewController.prototype.onTimedUpdate = function() {
        var e, t = this.filterHiddenSlots(this.viewmodel.getSlots());
        if (0 === t.length)
            this.handleEmptyTab(),
            null === (e = this.intervalController) || void 0 === e || e.stop();
        else if (t.length !== this.paginationList.values().length) {
            var i = this.paginationList.getIndex();
            this.paginationList.resetCollection(t),
            this.paginationList.setIndex(i),
            this.setPageSlots(this.paginationList.getPageItems())
        } else {
            if (t.some(function(e) {
                return e.checkIfTimedSlotNeedUpdate()
            }))
                return void this.requestData();
            var o = this.paginationList.getPageItems();
            this.getView().updateViewTimers(o)
        }
    }
    ,
    UTAcademyHubViewController.prototype.onTileSelected = function(e, t, i) {
        var o;
        this.viewmodel.setSelectedSlot(i.id);
        var n = this.getNavigationController()
          , r = -1 !== (null === (o = this.viewmodel.getSelectedSlot()) || void 0 === o ? void 0 : o.realPlayerId)
          , a = isPhone() ? new UTAcademySlotItemDetailsViewController(this.viewmodel) : new UTAcademySplitViewController(this.viewmodel,r);
        n && (a.init(),
        n.pushViewController(a))
    }
    ,
    UTAcademyHubViewController.prototype.onClaimSelected = function(e, t, i) {
        var o = this;
        this.viewmodel.claimSlotReward(i.id).observe(this, function(e, t) {
            o.onClaimComplete(e, t)
        })
    }
    ,
    UTAcademyHubViewController.prototype.onClaimComplete = function(e, o) {
        var t, i, n, r = this, a = services.Localization, s = services.Notification;
        if (e.unobserve(this),
        o.success && JSUtils.isObject(o.data)) {
            var l = o.data.rewardedSlot
              , c = o.data.originalPlayer
              , d = o.data.upgradedPlayer;
            if (!c || !d)
                return void this.requestData();
            var u = new UTEvolveAnimationViewController;
            c.setActiveInTimedEvo(null !== (t = null == l ? void 0 : l.timed) && void 0 !== t && t),
            u.initWithEvolution(c, d),
            u.setAnimationCallback(function() {
                var e;
                if (r.dismissViewController(!1, function() {
                    return u.dealloc()
                }),
                (null == l ? void 0 : l.timed) && (services.Academy.reset(),
                null === (e = o.data) || void 0 === e ? void 0 : e.isCancelled)) {
                    var t = services.Localization
                      , i = new EADialogViewController({
                        dialogOptions: [{
                            labelEnum: enums.UIDialogOptions.OK
                        }],
                        message: t.localize("academy.timedslot.warningNoTimeToStartDescription"),
                        title: t.localize("academy.timedslot.warningTitle")
                    });
                    i.init(),
                    i.modalDisplayDimensions.width = "380px",
                    gPopupClickShield.setActivePopup(i)
                }
                r.requestData()
            }),
            u.modalDisplayStyle = "fullscreen",
            this.presentViewController(u, !0)
        } else if (!o.success) {
            var p = void 0;
            (p = NetworkErrorManager.checkCriticalStatus(o.status) ? (NetworkErrorManager.handleStatus(o.status),
            a.localize("academy.claim.error")) : o.status === HttpStatusCode.SERVICE_UNAVAILABLE_ERROR || (null === (i = o.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? a.localize("academy.feature.disabled") : a.localize("academy.claim.unexpectederror")) && s.queue([p, UINotificationType.NEGATIVE]),
            services.Academy.reset(),
            null === (n = this.getNavigationController()) || void 0 === n || n.popViewController()
        }
    }
    ,
    UTAcademyHubViewController.prototype.eFilterSelected = function(e, t, i) {
        var o = this;
        this.filtersModal = new UTAcademyFiltersViewController(this.viewmodel.searchCriteria.sort),
        this.filtersModal.init(),
        this.filtersModal.modalDisplayStyle = "sheet",
        this.filtersModal.modalCanDismissFromShield = !0,
        this.filtersModal.modalSheetTitle = services.Localization.localize("academy.filters.title"),
        this.filtersModal.getView().addTarget(this, this.onFilterModalEvent, UTAcademyFiltersView.Event.RESET),
        this.filtersModal.getView().addTarget(this, this.onFilterModalEvent, UTAcademyFiltersView.Event.SUBMIT);
        var n = this.filtersModal;
        this.filtersModal.onExit.observe(this, function() {
            n.getView().removeTarget(o, o.onFilterModalEvent, UTAcademyFiltersView.Event.RESET),
            n.getView().removeTarget(o, o.onFilterModalEvent, UTAcademyFiltersView.Event.SUBMIT)
        }),
        this.presentViewController(this.filtersModal)
    }
    ,
    UTAcademyHubViewController.prototype.onFilterModalEvent = function(e, t, i) {
        this.paginationList && this.filtersModal && (t === UTAcademyFiltersView.Event.RESET ? (this.viewmodel.searchCriteria.reset(),
        this.filtersModal.getView().setSortOption(this.viewmodel.searchCriteria.sort)) : t === UTAcademyFiltersView.Event.SUBMIT && (this.dismissViewController(),
        this.viewmodel.searchCriteria.sort !== i.sortOption && (this.viewmodel.searchCriteria.sort = i.sortOption,
        services.Academy.reset(),
        this.viewmodel.searchCriteria.offset = 0,
        this.paginationList.resetCollection([]),
        this.requestData()))),
        TelemetryManager.trackEvent(TelemetryManager.Sections.ACADEMY, TelemetryManager.Categories.FILTER, "Academy filters - Filters popup submit")
    }
    ,
    UTAcademyHubViewController.prototype.eTabSelected = function(e, t, i) {
        this.viewmodel.activeTab = i.id,
        "number" == typeof i.id ? this.viewmodel.searchCriteria.categoryId = i.id : i.id === AcademyDisplayGroup.UNSLOTTED && (this.viewmodel.searchCriteria.categoryId = 0),
        this.requestData()
    }
    ,
    UTAcademyHubViewController
}(EAViewController))
  , UTHomeHubViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(_) {
    function UTHomeHubViewController() {
        var e = _.call(this) || this;
        return e.playerPicks = [],
        e.availablePicks = 0,
        e.viewmodel = new UTHomeHubViewModel,
        e.goToLinkController = new UTGoToLinkController,
        e
    }
    return __extends(UTHomeHubViewController, _),
    UTHomeHubViewController.prototype.init = function() {
        this.initialized || (_.prototype.init.call(this),
        this.goToLinkController.init())
    }
    ,
    UTHomeHubViewController.prototype.dealloc = function() {
        this.viewmodel.dealloc(),
        this.goToLinkController.dealloc(),
        this.playerPicks = [],
        _.prototype.dealloc.call(this)
    }
    ,
    UTHomeHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTHomeHubView
    }
    ,
    UTHomeHubViewController.prototype._getTelemetryId = function() {
        return "Hub - Home"
    }
    ,
    UTHomeHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.home")
    }
    ,
    UTHomeHubViewController.prototype.viewDidAppear = function() {
        var e, t;
        _.prototype.viewDidAppear.call(this);
        var i = services.Localization
          , o = this.getView()
          , n = this.getNavigationController();
        null == n || n.setNavigationVisibility(!0, !0),
        this.goToLinkController.setNavigationController(this.getNavigationController());
        var r = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED)
          , a = o.getSBCTile();
        a.setInteractionState(r),
        a.setDescription(i.localize(r ? "sbc.tile.description" : "sbc.notification.disabled"));
        var s = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.ACADEMY_ENABLED)
          , l = o.getAcademyTile();
        l.setDescription(i.localize("academy.tile.description")),
        l.setInteractionState(s),
        o.getGameModesHubTile().setDescription(i.localize("gamemodes.tile.description"));
        var c = o.getCGETile();
        c.setInteractionState(r),
        c.setDescription(i.localize("cge.tile.description"));
        var d = o.getProClubsTile();
        d.setInteractionState(r),
        d.setDescription(i.localize("proclubs.tile.description"));
        var u = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.META_FCAS_ENABLED)
          , p = o.getObjectivesTile();
        if (p.setInteractionState(u),
        hasConnection() && (services.Messages.getLiveMessages().observe(this, this.onLiveMessagesRetrieved),
        services.Item.requestUnassignedItems().observe(this, this.onUnassignedItemsRequested),
        services.Squad.requestSquadByType("active").observe(this, this.onActiveSquadRequested),
        u ? services.Objectives.requestActiveCampaign().observe(this, this.onActiveMetaCampaignRequested) : p.setDescriptionFromObjectiveState(0, !1),
        (null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.hasPlayerPicksPending) ? services.Item.requestPendingPlayerPickItemSelection().observe(this, this.onPendingPlayerPickItemsRequested) : o.getPlayerPicksTile().hide(),
        this.requestTransferListData(),
        services.Messages.getHubMessages(3).observe(this, this.onHubMessagesRequested)),
        getDefaultDispatcher().addObserver(AppNotification.UNASSIGNED_ITEM_ADDED, this, this.nUnassignedItemAdded),
        o.getAcademyTile().addTarget(this, this.eAcademyTileSelected, EventType.TAP),
        o.getActiveSquadTile().addTarget(this, this.eActiveSquadTileSelected, EventType.TAP),
        o.getSBCTile().addTarget(this, this.eSBCTileSelected, EventType.TAP),
        o.getGameModesHubTile().addTarget(this, this.eGameModesTilesSelected, EventType.TAP),
        o.getTransferListTile().addTarget(this, this.eTransferListTileSelected, EventType.TAP),
        o.getUnassignedTile().addTarget(this, this.eUnassignedTileSelected, EventType.TAP),
        o.getPlayerPicksTile().addTarget(this, this.ePlayerPicksTileSelected, EventType.TAP),
        o.getObjectivesTile().addTarget(this, this.eObjectivesTileSelected, EventType.TAP),
        o.getHubMessagesTile().addTarget(this, this.eGoToLink, UTHubMessagesTileView.Event.GOTOLINK),
        o.getCGETile().addTarget(this, this.eCGETileSelected, EventType.TAP),
        o.getProClubsTile().addTarget(this, this.eProClubsTileSelected, EventType.TAP),
        TelemetryManager.trackPage(TelemetryManager.Sections.HOME, "Home"),
        null === (t = services.User.getUser()) || void 0 === t ? void 0 : t.hasMetaRewardsToBeGranted) {
            var h = o.getObjectivesTile();
            h.removeTarget(this, this.eObjectivesTileSelected, EventType.TAP),
            h.addTarget(this, this.eClaimExpiredRewards, EventType.TAP),
            h.setUnclaimedTagText(i.localize("scmp.campaign.entertoClaim")),
            h.toggleHasRewardsClass(!0)
        }
    }
    ,
    UTHomeHubViewController.prototype.viewWillDisappear = function() {
        _.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        getDefaultDispatcher().removeObserver(AppNotification.UNASSIGNED_ITEM_ADDED, this),
        e.getAcademyTile().removeTarget(this, this.eAcademyTileSelected, EventType.TAP),
        e.getActiveSquadTile().removeTarget(this, this.eActiveSquadTileSelected, EventType.TAP),
        e.getSBCTile().removeTarget(this, this.eSBCTileSelected, EventType.TAP),
        e.getGameModesHubTile().removeTarget(this, this.eGameModesTilesSelected, EventType.TAP),
        e.getTransferListTile().removeTarget(this, this.eTransferListTileSelected, EventType.TAP),
        e.getUnassignedTile().removeTarget(this, this.eUnassignedTileSelected, EventType.TAP),
        e.getPlayerPicksTile().removeTarget(this, this.ePlayerPicksTileSelected, EventType.TAP),
        e.getObjectivesTile().removeTarget(this, this.eObjectivesTileSelected, EventType.TAP),
        e.getHubMessagesTile().removeTarget(this, this.eGoToLink, UTHubMessagesTileView.Event.GOTOLINK),
        e.getCGETile().removeTarget(this, this.eCGETileSelected, EventType.TAP),
        e.getProClubsTile().removeTarget(this, this.eProClubsTileSelected, EventType.TAP)
    }
    ,
    UTHomeHubViewController.prototype.didDismiss = function(e) {
        var t;
        _.prototype.didDismiss.call(this, e),
        e instanceof UTPlayerPicksViewController && !(null === (t = services.User.getUser()) || void 0 === t ? void 0 : t.hasPlayerPicksPending) && (this.getView().getPlayerPicksTile().setDisplay(!1),
        this.playerPicks = []),
        e.dealloc()
    }
    ,
    UTHomeHubViewController.prototype.gotoActiveSquadOverview = function() {
        var r = this
          , a = this.getNavigationController();
        a && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Squad.requestSquadByType("active").observe(this, function(e, t) {
            var i;
            if (e.unobserve(r),
            t.success && JSUtils.isObject(t.data)) {
                var o = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController
                  , n = null === (i = t.data) || void 0 === i ? void 0 : i.squad;
                n && o.initWithSquad(n),
                null == a || a.pushViewController(o)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.squad.failedToLoad"), UINotificationType.NEGATIVE]);
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTHomeHubViewController.prototype.onLiveMessagesRetrieved = function(e, t) {
        var i = this;
        e.unobserve(this);
        var o = !1
          , n = !1;
        if (JSUtils.isObject(t.data) && 0 < t.data.messages.length) {
            o = t.data.promoCoins,
            n = t.data.promoItems;
            var r = isPhone() ? PopupQueueViewController.ModalType.PAGE : PopupQueueViewController.ModalType.FORM
              , a = new UTLiveMessagePopupViewController(t.data.messages);
            a.onExit.observe(this, function(e) {
                e.unobserve(i),
                o && services.User.requestCurrencies(),
                n && repositories.Item.setDirty(ItemPile.PURCHASED)
            }),
            isPhone() || (a.modalDisplayDimensions.width = "800px",
            a.modalDisplayDimensions.maxWidth = "90%"),
            gPopupClickShield.setActivePopup(a, r)
        }
        this.displayLoyaltyRewards(),
        services.Messages.getDailyGift().observe(this, this.onDailyGiftRequested)
    }
    ,
    UTHomeHubViewController.prototype.displayLoyaltyRewards = function() {
        var e, t, i = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona(), o = null !== (t = null == i ? void 0 : i.getLoyaltyRewards()) && void 0 !== t ? t : [], n = services.Localization;
        if (i && 0 < o.length) {
            var r = new UTGameRewardsViewController(o);
            r.getView().setTitle(n.localize("mobilestart.title.loyaltyRewards")),
            r.getView().setDescription(n.localize("mobilestart.text.rewardInfo")),
            r.getView().setButtonText(n.localize("common.dialog.accept")),
            r.modalDisplayDimensions.width = "24em",
            gPopupClickShield.setActivePopup(r),
            i.setLoyaltyRewards([]),
            TelemetryManager.trackPage(TelemetryManager.Sections.MISC, "Loyalty Rewards Popup")
        }
    }
    ,
    UTHomeHubViewController.prototype.requestTransferListData = function() {
        var r = this
          , a = this.getView().getTransferListTile()
          , s = services.Localization;
        a.showLoadingState(),
        services.Item.requestTransferItems().observe(this, function(e, t) {
            if (e.unobserve(r),
            a.hideLoadingState(),
            a && t.success && JSUtils.isObject(t.response)) {
                var i = new UTTransferSectionListViewModel(t.response.items)
                  , o = t.response.items.length
                  , n = 1 === o ? s.localize("dock.label.item") : s.localize("dock.label.items");
                a.setTotalTransferLabel(n),
                a.setTotalTransferCount(o),
                a.setActiveTransferCount(i.getActiveItems().length),
                a.setFinishedTransferCount(i.getSoldItems().length),
                a.setInteractionState(!0),
                a.setDimmed(!1)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : t.success || (services.Notification.queue([s.localize("tradepile.unavailable"), UINotificationType.NEGATIVE]),
                a.setInteractionState(!1),
                a.setDimmed(!0))
        })
    }
    ,
    UTHomeHubViewController.prototype.onUnassignedItemsRequested = function(e, t) {
        e.unobserve(this),
        t.success && JSUtils.isObject(t.response) ? this.getView().renderUnassignedTile(t.response.items.length) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
    }
    ,
    UTHomeHubViewController.prototype.onHubMessagesRequested = function(e, t) {
        var i, o;
        e.unobserve(this),
        this.getView().renderHubMessagesTile(null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.messages) && void 0 !== o ? o : [])
    }
    ,
    UTHomeHubViewController.prototype.onActiveSquadRequested = function(e, t) {
        e.unobserve(this),
        t.success && JSUtils.isObject(t.data) && t.data.squad ? this.getView().renderActiveSquadTile(t.data.squad) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
    }
    ,
    UTHomeHubViewController.prototype.onLearningClaimed = function(e, t) {
        var i;
        if (e.unobserve(this),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.rewards)) {
            var o = services.Localization
              , n = new UTGameRewardsViewController(t.data.rewards);
            n.init(),
            n.modalDisplayDimensions.width = "24em";
            var r = n.getView();
            r.setTitle(o.localize("scmp.milestones.rewards.title")),
            r.setDescription(o.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
            r.setButtonText(o.localize("objective.rewards.claim")),
            gPopupClickShield.setActivePopup(n);
            var a = this.getView().getObjectivesTile();
            a.setInteractionState(!1),
            a.removeTarget(this, this.eClaimExpiredMilestoneRewards, EventType.TAP),
            a.addTarget(this, this.eObjectivesTileSelected, EventType.TAP),
            services.Objectives.requestActiveCampaign().observe(this, this.onActiveMetaCampaignRequested)
        }
    }
    ,
    UTHomeHubViewController.prototype.eClaimAllExpiredRewards = function(e, t, i) {
        var l = this;
        services.Objectives.claimExpiredRewards().observe(this, function(e, t) {
            var i;
            if (e.unobserve(l),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.rewards)) {
                var o = services.User.getUser();
                o && (o.hasMetaRewardsToBeGranted = !1);
                var n = services.Localization
                  , r = new FCGameRewardsViewController(t.data.rewards);
                r.init(),
                r.modalDisplayDimensions.width = "24em";
                var a = r.getView();
                a.setTitle(n.localize("scmp.generic.rewards.title")),
                a.setDescription(n.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
                a.setClaimable(!0),
                a.setButtonText(n.localize("objective.rewards.claim")),
                gPopupClickShield.setActivePopup(r),
                r.onExit.observe(l, function(e) {
                    e.unobserve(l),
                    services.Objectives.resetAutoGrantedRewards().observe(l, function(e) {
                        services.Objectives.claimExpiredLearningRewards().observe(l, l.onLearningClaimed)
                    })
                });
                var s = l.getView().getObjectivesTile();
                s.setInteractionState(!1),
                s.removeTarget(l, l.eClaimAllExpiredRewards, EventType.TAP)
            }
        })
    }
    ,
    UTHomeHubViewController.prototype.eClaimExpiredRewards = function(e, t, i) {
        var l = this;
        services.Objectives.claimExpiredRewards().observe(this, function(e, t) {
            var i;
            if (e.unobserve(l),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.rewards)) {
                var o = services.User.getUser();
                o && (o.hasMetaRewardsToBeGranted = !1);
                var n = services.Localization
                  , r = new FCGameRewardsViewController(t.data.rewards);
                r.init(),
                r.modalDisplayDimensions.width = "24em";
                var a = r.getView();
                a.setClaimable(!0),
                a.setTitle(n.localize("scmp.generic.rewards.title")),
                a.setDescription(n.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
                a.setButtonText(n.localize("objective.rewards.claim")),
                r.onExit.observe(l, function(e) {
                    e.unobserve(l),
                    services.Objectives.resetAutoGrantedRewards().observe(l, function(e) {
                        e.unobserve(l),
                        services.Objectives.requestActiveCampaign().observe(l, l.onActiveMetaCampaignRequested)
                    })
                }),
                gPopupClickShield.setActivePopup(r);
                var s = l.getView().getObjectivesTile();
                s.setInteractionState(!1),
                s.removeTarget(l, l.eClaimExpiredRewards, EventType.TAP),
                s.addTarget(l, l.eObjectivesTileSelected, EventType.TAP)
            }
        })
    }
    ,
    UTHomeHubViewController.prototype.eClaimExpiredMilestoneRewards = function(e, t, i) {
        services.Objectives.claimExpiredLearningRewards().observe(this, this.onLearningClaimed)
    }
    ,
    UTHomeHubViewController.prototype.onActiveMetaCampaignRequested = function(e, t) {
        var i, o, s = this;
        e.unobserve(this);
        var l = services.Localization
          , c = this.getView().getObjectivesTile()
          , d = t.success ? null === (i = t.data) || void 0 === i ? void 0 : i.campaign : null;
        if (d) {
            var n = Math.round(Date.now() / 1e3)
              , r = d.startTime <= n && n <= d.startTime + 172800
              , a = d.endTime - n;
            c.setDescriptionFromObjectiveState(0, !0),
            c.setSubtitle(d.title),
            0 < a && c.setExpiryLabel(l.localize("scmp.campaign.countdown", [l.localizeTimeRemaining(a)])),
            r && !d.hasOutstandingRewards() && c.setUnclaimedTagText(l.localize("scmp.campaign.refreshed")),
            c.toggleHasRewardsClass(!1);
            services.Objectives.requestMilestonesAutoClaimState().observe(this, function(e, t) {
                var i, o, n;
                e.unobserve(s);
                var r = !!t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.needsMilestonesAutoClaim)
                  , a = d.hasOutstandingRewards() || null !== (n = null === (o = services.User.getUser()) || void 0 === o ? void 0 : o.hasMetaRewardsToBeGranted) && void 0 !== n && n;
                a && d.hasOutstandingMilestoneRewards() ? (c.removeTarget(s, s.eObjectivesTileSelected, EventType.TAP),
                c.addTarget(s, s.eClaimAllExpiredRewards, EventType.TAP),
                c.setUnclaimedTagText(l.localize("scmp.campaign.entertoClaim")),
                c.toggleHasRewardsClass(!0)) : a ? (c.removeTarget(s, s.eObjectivesTileSelected, EventType.TAP),
                c.addTarget(s, s.eClaimExpiredRewards, EventType.TAP),
                c.setUnclaimedTagText(l.localize("scmp.campaign.entertoClaim")),
                c.toggleHasRewardsClass(!0)) : r && (c.removeTarget(s, s.eObjectivesTileSelected, EventType.TAP),
                c.addTarget(s, s.eClaimExpiredMilestoneRewards, EventType.TAP),
                c.setUnclaimedTagText(l.localize("scmp.milestones.entertoClaim")),
                c.toggleHasRewardsClass(!0))
            }),
            c.setInteractionState(!0)
        } else
            (null === (o = t.error) || void 0 === o ? void 0 : o.code) === FcasErrorCode.SERVICE_IS_DISABLED && (c.setInteractionState(!1),
            c.setDescriptionFromObjectiveState(0, !1))
    }
    ,
    UTHomeHubViewController.prototype.onPendingPlayerPickItemsRequested = function(e, t) {
        e.unobserve(this),
        t.success && JSUtils.isObject(t.response) ? (this.playerPicks = t.response.items,
        this.availablePicks = t.response.availablePicks,
        this.getView().getPlayerPicksTile().show()) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
    }
    ,
    UTHomeHubViewController.prototype.onDailyGiftRequested = function(e, n) {
        var t, r = this;
        e.unobserve(this);
        function qP(e, t) {
            e.unobserve(r);
            var i = services.Localization
              , o = services.Notification;
            t.success ? o.queue([i.localize("infopanel.label.claimed"), UINotificationType.POSITIVE]) : NetworkErrorManager.checkCriticalStatus(n.status) ? NetworkErrorManager.handleStatus(n.status) : o.queue([i.localize("dailyreward.claimfailed"), UINotificationType.NEGATIVE])
        }
        if (n.success && (null === (t = n.data) || void 0 === t ? void 0 : t.dailyGift)) {
            var i = new UTDailyGiftViewController(n.data.dailyGift);
            i.onExit.observe(this, function(e) {
                e.unobserve(r),
                services.Messages.claimDailyGift().observe(r, qP)
            }),
            i.modalDisplayDimensions.width = "24em",
            gPopupClickShield.setActivePopup(i)
        }
    }
    ,
    UTHomeHubViewController.prototype.eAcademyTileSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Active Squad Tile");
        var o = this.getNavigationController();
        if (o) {
            var n = new UTAcademyHubViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTHomeHubViewController.prototype.eActiveSquadTileSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Active Squad Tile"),
        this.gotoActiveSquadOverview()
    }
    ,
    UTHomeHubViewController.prototype.eTransferListTileSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Transfer List Tile");
        var o = this.getNavigationController();
        if (o) {
            var n = isPhone() ? new UTTransferListViewController : new UTTransferListSplitViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTHomeHubViewController.prototype.eUnassignedTileSelected = function(e, t, i) {
        var n = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Unassigned Tile");
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Item.requestUnassignedItems().observe(this, function(e, t) {
            if (e.unobserve(n),
            t.success || !NetworkErrorManager.checkCriticalStatus(t.status)) {
                if (t.success && JSUtils.isObject(t.response)) {
                    var i = n.getNavigationController();
                    if (i) {
                        var o = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
                        t.success ? o.initWithItems(t.response.items) : o.init(),
                        i.pushViewController(o)
                    }
                }
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
            } else
                NetworkErrorManager.handleStatus(t.status)
        })
    }
    ,
    UTHomeHubViewController.prototype.ePlayerPicksTileSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Player Picks Tile");
        var o = new UTPlayerPicksViewController;
        o.initWithPicks(this.playerPicks, this.availablePicks),
        o.modalDisplayStyle = isPhone() ? "fullscreen" : "form",
        this.presentViewController(o, !0)
    }
    ,
    UTHomeHubViewController.prototype.eObjectivesTileSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Dynamic Objectives Tile"),
        o) {
            var n = new UTObjectivesHubViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTHomeHubViewController.prototype.eSBCTileSelected = function(e, t, i) {
        var o;
        if (this.getNavigationController()) {
            var n = new UTSBCHubViewController;
            n.init(),
            null === (o = this.getNavigationController()) || void 0 === o || o.pushViewController(n)
        }
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - SBC Tile")
    }
    ,
    UTHomeHubViewController.prototype.eGameModesTilesSelected = function(e, t, i) {
        var o = this.getNavigationController()
          , n = new UTGameModesHubViewController;
        n.init(),
        null == o || o.pushViewController(n),
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Game Modes Hub Tile")
    }
    ,
    UTHomeHubViewController.prototype.eCGETileSelected = function(e, t, i) {
        services.URL.process(services.Localization.localize("link.cge.url"))
    }
    ,
    UTHomeHubViewController.prototype.eProClubsTileSelected = function(e, t, i) {
        services.URL.process(services.Localization.localize("link.proclubs.url"))
    }
    ,
    UTHomeHubViewController.prototype.eGoToLink = function(e, t, i) {
        var o = i.goToLink;
        (0 === o.indexOf("goto") ? this.goToLinkController.attemptNavigation(o) : services.URL.process(o)) && (TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - FET Tile"),
        services.PIN.sendData(PINEventType.MESSAGE, {
            type: PINMessageEventType.FET,
            service: "aruba",
            count: 1,
            track: {
                trackingtag: i.trackingTag
            },
            status: PIN_MESSAGE_EVT_STATUS,
            destination_id: i.screen,
            msg_id: i.id.toString()
        }))
    }
    ,
    UTHomeHubViewController.prototype.nUnassignedItemAdded = function(e, t, i) {
        services.Item.requestUnassignedItems().observe(this, this.onUnassignedItemsRequested)
    }
    ,
    UTHomeHubViewController
}(EAViewController));
services.URL.registerDeepLinkID(DeepLinkSection.HOME, function(e) {
    getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME)
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingSummaryView = function(t) {
    function UTOnboardingSummaryView() {
        var e = t.call(this) || this;
        return e.loanerView = null,
        e
    }
    return __extends(UTOnboardingSummaryView, t),
    UTOnboardingSummaryView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._btnContinue.init(),
        this._btnContinue.setText(e.localize("onboarding.complete.start")),
        this._btnContinueMobile.init(),
        this._btnContinueMobile.setText(e.localize("onboarding.complete.start")),
        this.__title.textContent = e.localize("onboarding.complete.title", [APP_YEAR_SHORT.toString()]),
        this.__info.textContent = e.localize("onboarding.complete.body"),
        this.__nationTitle.textContent = e.localize("onboarding.complete.teamtitle", [APP_YEAR_SHORT.toString()]),
        this.__loanTitle.textContent = e.localize("onboarding.complete.loantitle"),
        this.__kitsTitle.textContent = e.localize("onboarding.complete.kitstitle"),
        this.__badgeTitle.textContent = e.localize("onboarding.complete.badgetitle")
    }
    ,
    UTOnboardingSummaryView.prototype.dealloc = function() {
        this.loanerView && (this.loanerView.dealloc(),
        this.loanerView = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTOnboardingSummaryView.prototype.setNation = function(e) {
        this._nationImg.src = AssetLocationUtils.getFlagImageUri(e, enums.UIThemeVariation.DARK),
        this.__nationValue.textContent = UTLocalizationUtil.nationIdToName(e, services.Localization)
    }
    ,
    UTOnboardingSummaryView.prototype.setLoaner = function(e) {
        this.loanerView && this.loanerView.dealloc(),
        this.loanerView = factories.ItemView.createSmallItem(e),
        this.loanerView.init(),
        this.loanerView.render(e),
        this.__loanerContainer.appendChild(this.loanerView.getRootElement()),
        this.__loanValue.textContent = e.getStaticData().name,
        this.__loanTitle.textContent = services.Localization.localize("onboarding.complete.loantitle", [], {
            gender: e.gender
        })
    }
    ,
    UTOnboardingSummaryView.prototype.setKits = function(e, t) {
        var i = e.getStaticData()
          , o = t.getStaticData()
          , n = i instanceof UTStaticKitItemDataDTO ? i.kitType : KitType.HOME
          , r = o instanceof UTStaticKitItemDataDTO ? o.kitType : KitType.HOME
          , a = services.Localization;
        this._kitHomeImg.src = AssetLocationUtils.getKitImageUri(n, e.teamId, i.assetYear),
        this._kitAwayImg.src = AssetLocationUtils.getKitImageUri(r, t.teamId, o.assetYear),
        this.__kitsValue.textContent = UTLocalizationUtil.teamIdToAbbr15(e.teamId, a) + ", " + UTLocalizationUtil.teamIdToAbbr15(t.teamId, a)
    }
    ,
    UTOnboardingSummaryView.prototype.setBadge = function(e) {
        this._badgeImg.src = AssetLocationUtils.getBadgeImageUri(e.teamId, enums.UIThemeVariation.DARK),
        this.__badgeValue.textContent = UTLocalizationUtil.teamIdToAbbr15(e.teamId, services.Localization)
    }
    ,
    UTOnboardingSummaryView.prototype.getContinueButton = function() {
        return this._btnContinue
    }
    ,
    UTOnboardingSummaryView.prototype.getContinueButtonMobile = function() {
        return this._btnContinueMobile
    }
    ,
    UTOnboardingSummaryView
}(EAView);
UTOnboardingSummaryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-onboarding-summary-view");
        var t = document.createElement("div");
        t.classList.add("ut-onboarding-summary-view--body"),
        this.__summary = document.createElement("div"),
        this.__summary.classList.add("ut-onboarding-summary-view--details");
        var i = document.createElement("div");
        i.classList.add("nation"),
        i.classList.add("summary-detail");
        var o = document.createElement("div");
        o.classList.add("asset-container"),
        this._nationImg = new EAImageView,
        o.appendChild(this._nationImg.getRootElement()),
        i.appendChild(o),
        this.__nationTitle = document.createElement("h1"),
        i.appendChild(this.__nationTitle),
        this.__nationValue = document.createElement("span"),
        i.appendChild(this.__nationValue),
        this.__summary.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("loan"),
        n.classList.add("summary-detail"),
        this.__loanerContainer = document.createElement("div"),
        this.__loanerContainer.classList.add("asset-container"),
        n.appendChild(this.__loanerContainer),
        this.__loanTitle = document.createElement("h1"),
        n.appendChild(this.__loanTitle),
        this.__loanValue = document.createElement("span"),
        n.appendChild(this.__loanValue),
        this.__summary.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("kits"),
        r.classList.add("summary-detail");
        var a = document.createElement("div");
        a.classList.add("asset-container"),
        this._kitHomeImg = new EAImageView,
        a.appendChild(this._kitHomeImg.getRootElement()),
        this._kitAwayImg = new EAImageView,
        a.appendChild(this._kitAwayImg.getRootElement()),
        r.appendChild(a),
        this.__kitsTitle = document.createElement("h1"),
        r.appendChild(this.__kitsTitle),
        this.__kitsValue = document.createElement("span"),
        r.appendChild(this.__kitsValue),
        this.__summary.appendChild(r);
        var s = document.createElement("div");
        s.classList.add("badge"),
        s.classList.add("summary-detail");
        var l = document.createElement("div");
        l.classList.add("asset-container"),
        this._badgeImg = new EAImageView,
        l.appendChild(this._badgeImg.getRootElement()),
        s.appendChild(l),
        this.__badgeTitle = document.createElement("h1"),
        s.appendChild(this.__badgeTitle),
        this.__badgeValue = document.createElement("span"),
        s.appendChild(this.__badgeValue),
        this.__summary.appendChild(s),
        t.appendChild(this.__summary),
        this.__choiceInfo = document.createElement("div"),
        this.__choiceInfo.classList.add("ut-onboarding-summary-view--info");
        var c = document.createElement("div");
        c.classList.add("content"),
        this.__title = document.createElement("h2"),
        this.__title.classList.add("ut-onboarding-info--title"),
        c.appendChild(this.__title),
        this.__info = document.createElement("p"),
        this.__info.classList.add("ut-onboarding-info--description"),
        c.appendChild(this.__info),
        this.__choiceInfo.appendChild(c);
        var d = document.createElement("div");
        d.classList.add("footer"),
        this._btnContinue = new UTStandardButtonControl,
        this._btnContinue.getRootElement().classList.add("ut-onboarding-info--cta"),
        this._btnContinue.getRootElement().classList.add("call-to-action"),
        d.appendChild(this._btnContinue.getRootElement()),
        this.__choiceInfo.appendChild(d),
        t.appendChild(this.__choiceInfo);
        var u = document.createElement("div");
        u.classList.add("ut-button-container"),
        this._btnContinueMobile = new UTStandardButtonControl,
        this._btnContinueMobile.getRootElement().classList.add("call-to-action"),
        u.appendChild(this._btnContinueMobile.getRootElement()),
        t.appendChild(u),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingSummaryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__summary = null,
    this._nationImg.destroy(),
    this.__nationTitle = null,
    this.__nationValue = null,
    this.__loanerContainer = null,
    this.__loanTitle = null,
    this.__loanValue = null,
    this._kitHomeImg.destroy(),
    this._kitAwayImg.destroy(),
    this.__kitsTitle = null,
    this.__kitsValue = null,
    this._badgeImg.destroy(),
    this.__badgeTitle = null,
    this.__badgeValue = null,
    this.__choiceInfo = null,
    this.__title = null,
    this.__info = null,
    this._btnContinue.destroy(),
    this._btnContinueMobile.destroy()
}
,
UTOnboardingSummaryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingSummaryViewController = function(i) {
    function UTOnboardingSummaryViewController() {
        return i.call(this) || this
    }
    return __extends(UTOnboardingSummaryViewController, i),
    UTOnboardingSummaryViewController.prototype.init = function() {
        if (!this.initialized) {
            i.prototype.init.call(this);
            var e = this.getView();
            e.getContinueButton().addTarget(this, this.onContinue, EventType.TAP),
            e.getContinueButtonMobile().addTarget(this, this.onContinue, EventType.TAP),
            TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, "Onboarding - Summary"),
            services.PIN.sendData(PINEventType.MILESTONE, {
                mode: PIN_MILESTONE_EVT_MODE,
                moment: PINMileStoneEventMoment.COMPLETE,
                mstid: PINMilestoneEventId.SUMMARY,
                type: PINMilestoneEventType.ONBOARDING
            })
        }
    }
    ,
    UTOnboardingSummaryViewController.prototype.initWithViewmodel = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTOnboardingStateViewModel, "Expected a UTOnboardingStateViewModel viewmodel."),
        this.viewmodel = e,
        this.init())
    }
    ,
    UTOnboardingSummaryViewController.prototype._getViewInstanceFromData = function() {
        return new UTOnboardingSummaryView
    }
    ,
    UTOnboardingSummaryViewController.prototype.viewDidAppear = function() {
        var e = this.getNavigationController()
          , t = services.Localization;
        i.prototype.viewDidAppear.call(this),
        e instanceof OnboardingNavigationController && (isPhone() ? (e.setNavigationTitle(t.localize("onboarding.complete.title")),
        e.showStepChain(!0)) : (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        e.setToolbarVisibility(!0),
        e.showStepChain(!1)),
        e.setCurrentStep(enums.UIOnboardingStep.SUMMARY)),
        this.loadItems()
    }
    ,
    UTOnboardingSummaryViewController.prototype.loadItems = function() {
        var n = this
          , r = this.getView()
          , e = this.getNavigationController();
        if (e instanceof OnboardingNavigationController) {
            var t = e.getOnboardingState()
              , i = []
              , o = null == t ? void 0 : t.getCountryId()
              , a = FUTDataUtils.mapOnboardingCountryIdToNationId(o)
              , s = 0;
            if (r.setNation(a),
            (null == t ? void 0 : t.hasLoaner()) && (s = t.getLoanerDefId()),
            (null == t ? void 0 : t.hasHomeKit()) && i.push(t.getHomeKitId()),
            (null == t ? void 0 : t.hasAwayKit()) && i.push(t.getAwayKitId()),
            (null == t ? void 0 : t.hasBadge()) && i.push(t.getBadgeId()),
            DebugUtils.Assert(0 < i.length, "Expected valid items."),
            gClickShield.showShield(EAClickShieldView.Shield.LOADING),
            services.Item.requestItemsById(i).observe(this, function(e, t) {
                if (e.unobserve(n),
                t.success && JSUtils.isObject(t.response)) {
                    var i = null
                      , o = null;
                    t.response.items.forEach(function(e) {
                        e.isActiveHomeKit() ? i = e : e.isActiveAwayKit() ? o = e : e.isBadge() ? r.setBadge(e) : DebugUtils.Assert(!1, "Expected a valid onboarding selection item.")
                    }, n),
                    i && o && r.setKits(i, o)
                } else
                    console.log("failed to load club items");
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
            }),
            0 < s) {
                gClickShield.showShield(EAClickShieldView.Shield.LOADING);
                var l = new UTSearchCriteriaDTO;
                l.type = SearchType.PLAYER,
                l.defId = [s],
                services.Club.search(l).observe(this, function(e, t) {
                    e.unobserve(n),
                    t.success && JSUtils.isObject(t.response) ? r.setLoaner(t.response.items[0]) : console.log("failed to load loaner item"),
                    gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
                })
            }
        }
    }
    ,
    UTOnboardingSummaryViewController.prototype.onContinue = function(e, t, i) {
        getAppMain().getLoginController().login(!0)
    }
    ,
    UTOnboardingSummaryViewController
}(EAViewController)
  , UTCustomSelectionTileView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTCustomSelectionTileView() {
        return e.call(this) || this
    }
    return __extends(UTCustomSelectionTileView, e),
    UTCustomSelectionTileView.prototype.init = function() {
        this.setInteractionState(!0)
    }
    ,
    UTCustomSelectionTileView.prototype.setText = function(e) {
        this.__title.textContent = e
    }
    ,
    UTCustomSelectionTileView.prototype.getImageSource = function() {
        var e;
        return null !== (e = this._imgLoader.getRootElement().getAttribute("src")) && void 0 !== e ? e : ""
    }
    ,
    UTCustomSelectionTileView.prototype.setImagePath = function(e, t) {
        var i = this;
        this._imgLoader.onerror = function(e) {
            i._imgLoader.onerror = null,
            i._imgLoader.src = t
        }
        ,
        this._imgLoader.src = e
    }
    ,
    UTCustomSelectionTileView.prototype.toggleTallState = function(e) {
        this.toggleClass("tall", e)
    }
    ,
    UTCustomSelectionTileView.prototype.setSelected = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTCustomSelectionTileView
}(UTButtonControl));
UTCustomSelectionTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-custom-selection-tile-view");
        var t = document.createElement("div");
        t.classList.add("content-container"),
        this._imgLoader = new EAImageView,
        t.appendChild(this._imgLoader.getRootElement()),
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCustomSelectionTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._imgLoader.destroy(),
    this.__title = null
}
,
UTCustomSelectionTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingSelectView = function(t) {
    function UTOnboardingSelectView() {
        var e = t.call(this) || this;
        return e.currentTile = null,
        e.ids = [],
        e.selectionTiles = [],
        e.type = enums.UIOnboardingSelectionType.BADGE,
        e
    }
    return __extends(UTOnboardingSelectView, t),
    UTOnboardingSelectView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._continueBtn.init(),
        this._continueBtn.setInteractionState(!1),
        this._continueBtn.setText(e.localize("common.dialog.continue")),
        this._continueBtnMobile.init(),
        this._continueBtnMobile.setInteractionState(!1),
        this._continueBtnMobile.setText(e.localize("common.dialog.continue"))
    }
    ,
    UTOnboardingSelectView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.clearTiles(),
        this.ids = []
    }
    ,
    UTOnboardingSelectView.prototype.clearTiles = function() {
        this.selectionTiles.forEach(function(e) {
            e.dealloc()
        }),
        this.selectionTiles = [],
        this.currentTile = null
    }
    ,
    UTOnboardingSelectView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTOnboardingSelectView.prototype.setDescription = function(e) {
        this.__info.textContent = e
    }
    ,
    UTOnboardingSelectView.prototype.setType = function(e) {
        this.type = e,
        this.removeClass(enums.UIOnboardingSelectionType.BADGE),
        this.removeClass(enums.UIOnboardingSelectionType.HOME_KIT),
        this.removeClass(enums.UIOnboardingSelectionType.AWAY_KIT),
        this.removeClass(enums.UIOnboardingSelectionType.NATION),
        this.addClass(this.type)
    }
    ,
    UTOnboardingSelectView.prototype.generateTile = function(e) {
        var t = ""
          , i = ""
          , o = new UTCustomSelectionTileView;
        switch (e.assetType) {
        case AssetLocationUtils.IMAGE_TYPE_BADGE:
            t = AssetLocationUtils.getBadgeImageUri(e.id, enums.UIThemeVariation.DARK),
            i = AssetLocationUtils.getBadgeImageUri(UTItemEntity.DEFAULT_ASSET_ID, enums.UIThemeVariation.DARK);
            break;
        case AssetLocationUtils.IMAGE_TYPE_FLAG:
            t = AssetLocationUtils.getFlagImageUri(e.id, enums.UIThemeVariation.DARK),
            i = AssetLocationUtils.getFlagImageUri(UTItemEntity.DEFAULT_ASSET_ID, enums.UIThemeVariation.DARK);
            break;
        case AssetLocationUtils.IMAGE_TYPE_KIT_AWAY:
            t = AssetLocationUtils.getKitImageUri(KitType.AWAY, e.id),
            i = AssetLocationUtils.getKitImageUri(KitType.AWAY, UTItemEntity.DEFAULT_ASSET_ID);
            break;
        case AssetLocationUtils.IMAGE_TYPE_KIT_HOME:
            t = AssetLocationUtils.getKitImageUri(KitType.HOME, e.id),
            i = AssetLocationUtils.getKitImageUri(KitType.HOME, UTItemEntity.DEFAULT_ASSET_ID);
            break;
        case AssetLocationUtils.IMAGE_TYPE_KIT_THIRD:
            t = AssetLocationUtils.getKitImageUri(KitType.THIRD, e.id),
            i = AssetLocationUtils.getKitImageUri(KitType.THIRD, UTItemEntity.DEFAULT_ASSET_ID)
        }
        o.init(),
        o.toggleTallState(this.type !== enums.UIOnboardingSelectionType.NATION),
        o.setText(e.name),
        o.setImagePath(t, i),
        o.addTarget(this, this.eTileSelected, EventType.TAP),
        this.addSubview(o, this.__selectGrid),
        this.selectionTiles.push(o)
    }
    ,
    UTOnboardingSelectView.prototype.setData = function(e) {
        var t = this;
        this.clearTiles(),
        this.ids = [],
        e.forEach(function(e) {
            t.ids.push(e.id),
            t.generateTile(e)
        }),
        this.layoutSubviews()
    }
    ,
    UTOnboardingSelectView.prototype.selectTile = function(e) {
        var t = this.selectionTiles[e];
        this.currentTile && this.currentTile.setSelected(!1),
        this.currentTile = t || null,
        this.currentTile && this.currentTile.setSelected(!0)
    }
    ,
    UTOnboardingSelectView.prototype.getContinueButton = function() {
        return this._continueBtn
    }
    ,
    UTOnboardingSelectView.prototype.getContinueButtonMobile = function() {
        return this._continueBtnMobile
    }
    ,
    UTOnboardingSelectView.prototype.getSelectedId = function() {
        return this.currentTile && 0 < this.selectionTiles.length ? this.ids[this.selectionTiles.indexOf(this.currentTile)] : -1
    }
    ,
    UTOnboardingSelectView.prototype.getSelectedIndex = function() {
        return this.currentTile ? this.selectionTiles.indexOf(this.currentTile) : -1
    }
    ,
    UTOnboardingSelectView.prototype.setFirstImageLocalPath = function(e) {
        this._selectedImage.src = e
    }
    ,
    UTOnboardingSelectView.prototype.setSecondImageLocalPath = function(e) {
        this._otherSelectedImage.src = e
    }
    ,
    UTOnboardingSelectView.prototype.setBackground = function(e) {
        var t = this;
        this.ids.forEach(function(e) {
            return t.removeClass("ui-selected-" + e)
        }),
        this.addClass("ui-selected-" + e)
    }
    ,
    UTOnboardingSelectView.prototype.eTileSelected = function(e, t, i) {
        if (e !== this.currentTile) {
            var o = this.selectionTiles.indexOf(e);
            this.selectTile(o),
            this.type === enums.UIOnboardingSelectionType.NATION && this.setBackground(this.ids[o]);
            var n = e.getImageSource();
            this.type === enums.UIOnboardingSelectionType.AWAY_KIT ? this._otherSelectedImage.src = n : this._selectedImage.src = n,
            this._continueBtn.setInteractionState(!0),
            this._continueBtnMobile.setInteractionState(!0)
        }
    }
    ,
    UTOnboardingSelectView
}(EAView);
UTOnboardingSelectView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-onboarding-select-view");
        var t = document.createElement("div");
        t.classList.add("ut-onboarding-select-view--body"),
        this.__selectGrid = document.createElement("div"),
        this.__selectGrid.classList.add("ut-onboarding-select-view--grid"),
        t.appendChild(this.__selectGrid),
        this.__choiceInfo = document.createElement("div"),
        this.__choiceInfo.classList.add("ut-onboarding-select-view--info");
        var i = document.createElement("div");
        i.classList.add("ut-onboarding-info-content");
        var o = document.createElement("div");
        o.classList.add("content"),
        this.__title = document.createElement("h2"),
        this.__title.classList.add("ut-onboarding-info--title"),
        o.appendChild(this.__title),
        this.__info = document.createElement("p"),
        this.__info.classList.add("ut-onboarding-info--description"),
        o.appendChild(this.__info);
        var n = document.createElement("div");
        n.classList.add("selected-images"),
        this._selectedImage = new EAImageView,
        this._selectedImage.getRootElement().classList.add("selected-image-a"),
        n.appendChild(this._selectedImage.getRootElement()),
        this._otherSelectedImage = new EAImageView,
        this._otherSelectedImage.getRootElement().classList.add("selected-image-b"),
        n.appendChild(this._otherSelectedImage.getRootElement()),
        o.appendChild(n),
        i.appendChild(o);
        var r = document.createElement("div");
        r.classList.add("footer"),
        this._continueBtn = new UTStandardButtonControl,
        this._continueBtn.getRootElement().classList.add("ut-onboarding-info--cta"),
        this._continueBtn.getRootElement().classList.add("call-to-action"),
        r.appendChild(this._continueBtn.getRootElement()),
        i.appendChild(r),
        this.__choiceInfo.appendChild(i),
        t.appendChild(this.__choiceInfo),
        e.appendChild(t);
        var a = document.createElement("div");
        a.classList.add("ut-button-container"),
        this._continueBtnMobile = new UTStandardButtonControl,
        this._continueBtnMobile.getRootElement().classList.add("call-to-action"),
        a.appendChild(this._continueBtnMobile.getRootElement()),
        e.appendChild(a),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingSelectView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__selectGrid = null,
    this.__choiceInfo = null,
    this.__title = null,
    this.__info = null,
    this._selectedImage.destroy(),
    this._otherSelectedImage.destroy(),
    this._continueBtn.destroy(),
    this._continueBtnMobile.destroy()
}
,
UTOnboardingSelectView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingBadgeSelectViewController = function(o) {
    function UTOnboardingBadgeSelectViewController() {
        var e = o.call(this) || this;
        return e.badges = [],
        e
    }
    return __extends(UTOnboardingBadgeSelectViewController, o),
    UTOnboardingBadgeSelectViewController.prototype.init = function() {
        if (!this.initialized) {
            o.prototype.init.call(this);
            var e = this.getView()
              , t = services.Localization;
            e.setType(enums.UIOnboardingSelectionType.BADGE),
            e.setTitle(t.localize("onboarding.badge.title")),
            e.setDescription(t.localize("onboarding.badge.body")),
            e.setFirstImageLocalPath("images/badge.png"),
            e.getContinueButton().addTarget(this, this.onContinue, EventType.TAP),
            e.getContinueButtonMobile().addTarget(this, this.onContinue, EventType.TAP);
            var i = "Onboarding - Badge";
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: i
            }),
            TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, i)
        }
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.dealloc = function() {
        o.prototype.dealloc.call(this),
        this.badges = []
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype._getViewInstanceFromData = function() {
        return new UTOnboardingSelectView
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("onboarding.badge.title")
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.viewDidAppear = function() {
        var e = this.getNavigationController();
        o.prototype.viewDidAppear.call(this),
        0 === this.badges.length && this.requestBadges(),
        e && e instanceof OnboardingNavigationController && (e.addNavBarClass("onboarding-select"),
        e.setCurrentStep(enums.UIOnboardingStep.BADGE),
        isPhone() || (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        e.setToolbarVisibility(!0)))
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.mapBadgesToData = function(e) {
        return e.map(function(e) {
            return {
                id: e.teamId,
                name: UTLocalizationUtil.teamIdToAbbr15(e.teamId, services.Localization),
                assetType: AssetLocationUtils.IMAGE_TYPE_BADGE
            }
        })
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.requestBadges = function() {
        var i = this
          , o = this.getView();
        services.Onboarding.UTAS.getBadges().observe(this, function(e, t) {
            e.unobserve(i),
            t.success && JSUtils.isObject(t.data) ? (i.badges = t.data.badges,
            o.setData(i.mapBadgesToData(i.badges))) : (NetworkErrorManager.handleStatus(UtasErrorCode.UNRECOVERABLE),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to retrieve badges"))
        })
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.selectBadge = function() {
        var d = this
          , e = this.getView()
          , u = this.badges[e.getSelectedIndex()]
          , p = services.Localization;
        DebugUtils.Assert(JSUtils.isValid(u), "Expected badge reference to point to item entity."),
        u && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.UTAS.selectBadge(u).observe(this, function(e, t) {
            var i, o, n;
            if (e.unobserve(d),
            t.success && JSUtils.isObject(t.data)) {
                services.PIN.sendData(PINEventType.MILESTONE, {
                    mode: PIN_MILESTONE_EVT_MODE,
                    moment: PINMileStoneEventMoment.COMPLETE,
                    mstid: PINMilestoneEventId.BADGE,
                    type: PINMilestoneEventType.ONBOARDING
                });
                var r = d.getNavigationController();
                if (r) {
                    r instanceof OnboardingNavigationController && (null === (i = r.getOnboardingState()) || void 0 === i || i.setBadgeId(t.data.badgeId));
                    var a = services.User.getUser()
                      , s = null !== (o = null == a ? void 0 : a.getSelectedPersona()) && void 0 !== o ? o : null
                      , l = null !== (n = null == s ? void 0 : s.getCurrentClub()) && void 0 !== n ? n : null;
                    null == l || l.setAssetId(u.getStaticData().assetId);
                    var c = new UTOnboardingSummaryViewController;
                    c.init(),
                    r.pushViewController(c, !0)
                }
            } else
                services.Notification.queue([p.localize("onboarding.error.badgeselectfailure"), UINotificationType.NEGATIVE]),
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to select badge");
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTOnboardingBadgeSelectViewController.prototype.onContinue = function(e, t, i) {
        this.selectBadge()
    }
    ,
    UTOnboardingBadgeSelectViewController
}(EAViewController)
  , UTKitSelectOnboardingViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTKitSelectOnboardingViewController() {
        var e = i.call(this) || this;
        return e.homeKits = [],
        e.awayKits = [],
        e.selectedHomeKit = null,
        e.selectedAwayKit = null,
        e
    }
    return __extends(UTKitSelectOnboardingViewController, i),
    UTKitSelectOnboardingViewController.prototype.init = function() {
        if (!this.initialized) {
            i.prototype.init.call(this);
            var e = this.getView();
            e.setType(enums.UIOnboardingSelectionType.HOME_KIT),
            e.setTitle(services.Localization.localize("onboarding.kits.titlehome")),
            e.setDescription(services.Localization.localize("onboarding.kits.bodyhome")),
            e.setFirstImageLocalPath("images/onboarding/kit.png"),
            e.setSecondImageLocalPath("images/onboarding/kit.png");
            var t = "Onboarding - Kits";
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: t
            }),
            TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
        }
    }
    ,
    UTKitSelectOnboardingViewController.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.homeKits = [],
        this.awayKits = [],
        this.selectedAwayKit = null,
        this.selectedHomeKit = null
    }
    ,
    UTKitSelectOnboardingViewController.prototype._getViewInstanceFromData = function() {
        return new UTOnboardingSelectView
    }
    ,
    UTKitSelectOnboardingViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("onboarding.kits.titlehome")
    }
    ,
    UTKitSelectOnboardingViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.getContinueButton().addTarget(this, this.eContinue, EventType.TAP),
        e.getContinueButtonMobile().addTarget(this, this.eContinue, EventType.TAP),
        0 !== this.homeKits.length && 0 !== this.awayKits.length || this.getKits();
        var t = this.getNavigationController();
        t && t instanceof OnboardingNavigationController && (t.addNavBarClass("onboarding-select"),
        isPhone() || (t.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        t.setToolbarVisibility(!0)),
        t.setCurrentStep(enums.UIOnboardingStep.KITS))
    }
    ,
    UTKitSelectOnboardingViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.getContinueButton().removeTarget(this, this.eContinue, EventType.TAP),
        e.getContinueButtonMobile().removeTarget(this, this.eContinue, EventType.TAP)
    }
    ,
    UTKitSelectOnboardingViewController.prototype.mapKitsToData = function(e) {
        return e.map(function(e) {
            return {
                id: e.teamId,
                name: UTLocalizationUtil.teamIdToAbbr15(e.teamId, services.Localization),
                assetType: e.getStaticData().assetType
            }
        })
    }
    ,
    UTKitSelectOnboardingViewController.prototype.getKits = function() {
        var i = this;
        services.Onboarding.UTAS.getKits().observe(this, function(e, t) {
            e.unobserve(i),
            t.success && JSUtils.isObject(t.data) ? (i.homeKits = t.data.homeKits,
            i.awayKits = t.data.awayKits,
            i.getView().setData(i.mapKitsToData(i.homeKits))) : (NetworkErrorManager.handleStatus(UtasErrorCode.UNRECOVERABLE),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to retrieve kits"))
        })
    }
    ,
    UTKitSelectOnboardingViewController.prototype.selectHomeKit = function() {
        var e = this.getView();
        this.selectedHomeKit = this.homeKits[e.getSelectedIndex()],
        e.getContinueButton().setInteractionState(!1),
        e.getContinueButtonMobile().setInteractionState(!1),
        services.PIN.sendData(PINEventType.MILESTONE, {
            mode: PIN_MILESTONE_EVT_MODE,
            moment: PINMileStoneEventMoment.COMPLETE,
            mstid: PINMilestoneEventId.HOMEKIT,
            type: PINMilestoneEventType.ONBOARDING
        }),
        e.setType(enums.UIOnboardingSelectionType.AWAY_KIT),
        e.setData(this.mapKitsToData(this.awayKits)),
        e.setTitle(services.Localization.localize("onboarding.kits.titleaway")),
        e.setDescription(services.Localization.localize("onboarding.kits.bodyaway"));
        var t = this.getNavigationController();
        t && t.setNavigationTitle(services.Localization.localize("onboarding.kits.titleaway"))
    }
    ,
    UTKitSelectOnboardingViewController.prototype.selectAwayKit = function() {
        var r = this;
        this.selectedAwayKit = this.awayKits[this.getView().getSelectedIndex()],
        DebugUtils.Assert(JSUtils.isValid(this.selectedHomeKit) && JSUtils.isValid(this.selectedAwayKit), "Expected both home and away kit references to point to item entities."),
        this.selectedHomeKit && this.selectedAwayKit && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.UTAS.selectKits(this.selectedHomeKit, this.selectedAwayKit).observe(this, function(e, t) {
            if (e.unobserve(r),
            t.success && JSUtils.isObject(t.data)) {
                services.PIN.sendData(PINEventType.MILESTONE, {
                    mode: PIN_MILESTONE_EVT_MODE,
                    moment: PINMileStoneEventMoment.COMPLETE,
                    mstid: PINMilestoneEventId.AWAYKIT,
                    type: PINMilestoneEventType.ONBOARDING
                });
                var i = r.getNavigationController();
                if (i) {
                    if (i instanceof OnboardingNavigationController) {
                        var o = i.getOnboardingState();
                        null == o || o.setHomeKitId(t.data.homeKitId),
                        null == o || o.setAwayKitId(t.data.awayKitId)
                    }
                    var n = new UTOnboardingBadgeSelectViewController;
                    n.init(),
                    i.pushViewController(n, !0)
                }
            } else
                services.Notification.queue([services.Localization.localize("onboarding.error.kitselectfailure"), UINotificationType.NEGATIVE]),
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to select kits");
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTKitSelectOnboardingViewController.prototype.eContinue = function(e, t, i) {
        this.selectedHomeKit ? this.selectAwayKit() : this.selectHomeKit()
    }
    ,
    UTKitSelectOnboardingViewController
}(EAViewController));
NamespaceManager.Register("interfaces"),
interfaces.SlotIterationDelegate = function() {}
,
interfaces.SlotIterationDelegate.prototype.setSlot = function(e, t) {}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingLoanPlayerSelectionViewModel = function(t) {
    function UTOnboardingLoanPlayerSelectionViewModel() {
        var e = t.call(this) || this;
        return e.items = [],
        e.positionList = [PlayerPosition.ST, PlayerPosition.LM, PlayerPosition.CM, PlayerPosition.RM, PlayerPosition.LB, PlayerPosition.CB, PlayerPosition.RB, PlayerPosition.GK],
        e
    }
    return __extends(UTOnboardingLoanPlayerSelectionViewModel, t),
    UTOnboardingLoanPlayerSelectionViewModel.prototype.setItems = function(e) {
        this.items = e
    }
    ,
    UTOnboardingLoanPlayerSelectionViewModel.prototype.getPositionFromSlot = function(e) {
        var t = e.generalPosition
          , i = services.User.getUser()
          , o = null == i ? void 0 : i.getSelectedPersona();
        if (t < 0 && o) {
            var n = o.id;
            t = this.positionList[(n + e.index) % this.positionList.length]
        }
        return t
    }
    ,
    UTOnboardingLoanPlayerSelectionViewModel.prototype.getLoanerSample = function(e, t) {
        return 0 === this.items.length ? [] : (e = e < 1 ? 1 : e,
        this.items.filter(function(e) {
            return e.preferredPosition === t
        }).sort(function(e, t) {
            return JSUtils.sortCompare(e.rating, t.rating, !0)
        }).slice(0, e))
    }
    ,
    UTOnboardingLoanPlayerSelectionViewModel
}(EAObject)
  , UTItemInfoChangeButtonControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTItemInfoChangeButtonControl() {
        var e = t.call(this) || this;
        return e._currentState = enums.UIItemInfoState.MAIN,
        e
    }
    return __extends(UTItemInfoChangeButtonControl, t),
    UTItemInfoChangeButtonControl.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._updateInfoStateAttribute()
    }
    ,
    UTItemInfoChangeButtonControl.prototype.setText = function(e) {
        this.__label.textContent = e
    }
    ,
    UTItemInfoChangeButtonControl.prototype.setCurrentState = function(e) {
        this._currentState !== e && (this._currentState = e,
        this._updateInfoStateAttribute())
    }
    ,
    UTItemInfoChangeButtonControl.prototype._updateInfoStateAttribute = function() {
        var e;
        switch (this._currentState) {
        case enums.UIItemInfoState.MAIN:
            e = "main";
            break;
        case enums.UIItemInfoState.BIO:
            e = "bio";
            break;
        case enums.UIItemInfoState.STATS:
            e = "stats";
            break;
        case enums.UIItemInfoState.STYLE:
            e = "style";
            break;
        case enums.UIItemInfoState.STRENGTH:
            e = "strength";
            break;
        case enums.UIItemInfoState.TRAITS:
            e = "traits";
            break;
        default:
            e = "main"
        }
        this.getRootElement().setAttribute("data-info-state", e)
    }
    ,
    UTItemInfoChangeButtonControl
}(UTNavigationButtonControl));
UTItemInfoChangeButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("ut-iteminfochange-button-control"),
        this.__label = document.createElement("span"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTItemInfoChangeButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null
}
,
UTItemInfoChangeButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStarterSquadOverviewView = function(t) {
    function UTStarterSquadOverviewView() {
        var e = t.call(this) || this;
        return e._slotSelectHeight = 0,
        e
    }
    return __extends(UTStarterSquadOverviewView, t),
    UTStarterSquadOverviewView.prototype.init = function() {
        t.prototype.init.call(this),
        this._squadOverview.init(),
        this._btnSlotSelect.init(),
        this._squadOverview.renderManager = !1,
        this._btnSlotSelect.setInteractionState(!1),
        this._btnSlotSelect.setText(services.Localization.localize("common.dialog.continue"))
    }
    ,
    UTStarterSquadOverviewView.prototype.didAddToSuperview = function() {
        t.prototype.didAddToSuperview.call(this),
        this._slotSelectHeight = this.__slotSelectContainer.offsetHeight
    }
    ,
    UTStarterSquadOverviewView.prototype.getSquadOverview = function() {
        return this._squadOverview
    }
    ,
    UTStarterSquadOverviewView.prototype.getSlotSelectButton = function() {
        return this._btnSlotSelect
    }
    ,
    UTStarterSquadOverviewView.prototype.toggleSlotSelect = function(e) {
        var t = this._squadOverview.getRootElement();
        e ? (this.__slotSelectContainer.style.display = "",
        t.style.bottom = this._slotSelectHeight + "px") : (this.__slotSelectContainer.style.display = "none",
        t.style.bottom = "0px")
    }
    ,
    UTStarterSquadOverviewView
}(EAView);
UTStarterSquadOverviewView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("OnboardingSquad"),
        this._squadOverview = new UTSquadOverviewView,
        e.appendChild(this._squadOverview.getRootElement()),
        this.__slotSelectContainer = document.createElement("div"),
        this.__slotSelectContainer.classList.add("button-container"),
        this._btnSlotSelect = new UTStandardButtonControl,
        this._btnSlotSelect.getRootElement().classList.add("call-to-action"),
        this.__slotSelectContainer.appendChild(this._btnSlotSelect.getRootElement()),
        e.appendChild(this.__slotSelectContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStarterSquadOverviewView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._squadOverview.destroy(),
    this.__slotSelectContainer = null,
    this._btnSlotSelect.destroy()
}
,
UTStarterSquadOverviewView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
NamespaceManager.Register("controllers.onboarding");
var StarterSquadOverviewViewController = function(n) {
    function StarterSquadOverviewViewController() {
        var e = n.call(this) || this;
        return e._mobileInfoDisplayed = !1,
        e._selectedIndex = -1,
        e._mobileInfoDisplayed = !1,
        e._itemInfoStateViewModel = new UTItemInfoStateViewModel(services.UserSettings),
        e._itemInfoSwitchButton = new UTItemInfoChangeButtonControl,
        e
    }
    return __extends(StarterSquadOverviewViewController, n),
    StarterSquadOverviewViewController.prototype.init = function() {
        this.initialized || (n.prototype.init.call(this),
        this.getView().getSlotSelectButton().addTarget(this, this._eSlotSelected, EventType.TAP),
        this._itemInfoSwitchButton.init(),
        this._itemInfoSwitchButton.setInteractionState(!0),
        this._itemInfoSwitchButton.addTarget(this, this._eItemInfoSwitchButtonSelected, EventType.TAP))
    }
    ,
    StarterSquadOverviewViewController.prototype.initWithSquad = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity."),
        this._squad = e,
        this._squad.onDataUpdated.observe(this, this._eSquadUpdated),
        this.init())
    }
    ,
    StarterSquadOverviewViewController.prototype.dealloc = function() {
        this._squad && this._squad.onDataUpdated.unobserve(this),
        this._itemInfoSwitchButton.dealloc(),
        n.prototype.dealloc.call(this)
    }
    ,
    StarterSquadOverviewViewController.prototype._getViewInstanceFromData = function() {
        return new UTStarterSquadOverviewView
    }
    ,
    StarterSquadOverviewViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("onboarding.complete.teamtitle", [APP_YEAR_SHORT.toString()])
    }
    ,
    StarterSquadOverviewViewController.prototype.getNavigationItem = function() {
        return this._itemInfoSwitchButton
    }
    ,
    StarterSquadOverviewViewController.prototype.viewDidAppear = function() {
        n.prototype.viewDidAppear.call(this),
        DebugUtils.Assert(this._squad instanceof UTSquadEntity, "View appearing on screen without a squad to display."),
        this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.getState());
        var e = this.getNavigationController();
        if (e instanceof OnboardingNavigationController && (e.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
        e.setToolbarVisibility(!1),
        e.setCurrentStep(enums.UIOnboardingStep.LOANER)),
        this._squad) {
            var t = this.getView().getSquadOverview();
            t.setSquad(this._squad),
            t.setChemistryEntries(this._squad.getSortedParameterChemistry()),
            t.addTarget(this, this._eItemTap, enums.UISquadPitchEvent.SLOT_SELECT);
            var i = t.getShowChemistryButton();
            i && i.addTarget(this, this._eShowChemistry, EventType.TAP)
        }
        isPhone() && !this._mobileInfoDisplayed && (this._mobileInfoDisplayed = !0,
        setTimeout(function() {
            if (!this._introMessage) {
                var e = services.Localization
                  , t = utils.PopupManager.Alerts.ONBOARDING_INTRO.title
                  , i = utils.PopupManager.Alerts.ONBOARDING_INTRO.message;
                this._introMessage = new EADialogViewController({
                    dialogOptions: [{
                        labelEnum: enums.UIDialogOptions.OK
                    }],
                    message: e.localize(i),
                    title: e.localize(t)
                }),
                this._introMessage.init(),
                this._introMessage.viewWillAppear(),
                this._introMessage.modalDisplayDimensions.width = "380px",
                gPopupClickShield.setActivePopup(this._introMessage)
            }
        }, 1e3));
        var o = "Onboarding - Squad";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: o
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, o)
    }
    ,
    StarterSquadOverviewViewController.prototype.setSlot = function(e) {
        if (this._selectedIndex = e,
        this._squad) {
            var t = this.getView()
              , i = t.getSlotSelectButton()
              , o = "";
            e < UTSquadEntity.FIELD_PLAYERS ? o = UTLocalizationUtil.positionIdToName(this._squad.getSlot(e).getGeneralPosition(), services.Localization) : e < UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS ? o = services.Localization.localize("dock.label.substitutes") : e < UTSquadEntity.MANAGER_SLOT_INDEX && (o = services.Localization.localize("dock.label.reserves")),
            i.setText(services.Localization.localize("swap.withposition", [o])),
            i.setInteractionState(!0),
            t.getSquadOverview().setSlotInteractionState(e, enums.UISlotInteractionState.SELECTED)
        }
    }
    ,
    StarterSquadOverviewViewController.prototype._loadLoanPlayers = function() {
        var r = this.getView()
          , a = this._squad.getSlot(this._selectedIndex);
        r.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.UTAS.getLoanPlayers().observe(this, function _gotoLoanSelector(e, t) {
            if (e.unobserve(this),
            t.success) {
                var i = new LoanSelectorOnboardingViewController
                  , o = new UTOnboardingLoanPlayerSelectionViewModel;
                o.setItems(t.data.items),
                i.initWithItems(o.getLoanerSample(5, o.getPositionFromSlot(a)), a.getItem()),
                i.setSquadViewDelegate(r.getSquadOverview()),
                this._squad && i.setSquad(this._squad);
                var n = this.getNavigationController();
                n && (n.pushViewController(i),
                r.getSlotSelectButton().setInteractionState(!1))
            } else
                r.setInteractionState(!0);
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    StarterSquadOverviewViewController.prototype._eSquadUpdated = function(e, t) {
        var i = this.getView()
          , o = i.getSlotSelectButton();
        services.Squad.resetSquadsCache(),
        i.getSquadOverview().setSquad(this._squad),
        o.setText(services.Localization.localize("common.dialog.continue")),
        o.removeTarget(this, this._eSlotSelected, EventType.TAP),
        o.addTarget(this, this._eContinue, EventType.TAP),
        o.setInteractionState(!0)
    }
    ,
    StarterSquadOverviewViewController.prototype._eItemTap = function(e, t, i) {
        var o = this.getParentViewController()
          , n = i && JSUtils.isNumber(i.slotIndex) ? i.slotIndex : 0;
        n >= UTSquadEntity.MANAGER_SLOT_INDEX - 2 || (this.setSlot(n),
        o && o instanceof StarterSquadLandscapeViewController && o.setSlot(this, n))
    }
    ,
    StarterSquadOverviewViewController.prototype._eSlotSelected = function(e, t, i) {
        this._loadLoanPlayers()
    }
    ,
    StarterSquadOverviewViewController.prototype._eContinue = function(e, t, i) {
        var o = this.getNavigationController()
          , n = this.getView().getSquadOverview().getShowChemistryButton();
        if (null == n || n.removeTarget(this, this._eShowChemistry, EventType.TAP),
        o) {
            var r = new UTKitSelectOnboardingViewController;
            r.init(),
            o.pushViewController(r, !0)
        }
    }
    ,
    StarterSquadOverviewViewController.prototype._eShowChemistry = function(e, t, i) {
        var o = new UTSquadChemistryPopupViewController;
        o.modalDisplayDimensions.width = "360px",
        o.init(),
        o.setChemistry(this._squad),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    StarterSquadOverviewViewController.prototype._eItemInfoSwitchButtonSelected = function(e, t, i) {
        this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.nextState())
    }
    ,
    StarterSquadOverviewViewController
}(EAViewController)
  , UTItemSelectionRowView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTItemSelectionRowView() {
        var e = t.call(this) || this;
        return e.itemView = null,
        e.statsView = null,
        e
    }
    return __extends(UTItemSelectionRowView, t),
    UTItemSelectionRowView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTItemSelectionRowView.prototype.dealloc = function() {
        this.itemView && (this.itemView.dealloc(),
        this.itemView = null),
        this.statsView && (this.statsView.dealloc(),
        this.statsView = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTItemSelectionRowView.prototype.select = function() {
        this.addClass(enums.UIState.SELECTED)
    }
    ,
    UTItemSelectionRowView.prototype.deselect = function() {
        this.removeClass(enums.UIState.SELECTED)
    }
    ,
    UTItemSelectionRowView.prototype.toggleSelection = function(e) {
        e ? this.select() : this.deselect()
    }
    ,
    UTItemSelectionRowView.prototype.setData = function(e) {
        DebugUtils.Assert(e.item instanceof UTItemEntity, "Expected property 'item' to be an instance of UTItemEntity"),
        this.renderName(e.item),
        this.renderItem(e.item),
        this.renderStats(e.item, e.comparison)
    }
    ,
    UTItemSelectionRowView.prototype.renderName = function(e) {
        this.__name.textContent = e.getStaticData().name
    }
    ,
    UTItemSelectionRowView.prototype.renderItem = function(e) {
        this.itemView ? this.itemView.canRender(e) || (this.itemView.dealloc(),
        this.itemView = factories.ItemView.createSmallItem(e),
        this.itemView.init(),
        this.__entityContainer.insertBefore(this.itemView.getRootElement(), this.__entityContainer.firstChild)) : (this.itemView = factories.ItemView.createSmallItem(e),
        this.itemView.init(),
        this.__entityContainer.insertBefore(this.itemView.getRootElement(), this.__entityContainer.firstChild)),
        this.itemView.render(e)
    }
    ,
    UTItemSelectionRowView.prototype.renderStats = function(e, t) {
        this.statsView || (this.statsView = new UTPlayerStatsListDataView({
            localization: services.Localization
        }),
        this.__entityContainer.appendChild(this.statsView.getRootElement())),
        this.statsView.render(e, t)
    }
    ,
    UTItemSelectionRowView.prototype._tapDetected = function(e) {
        this._triggerActions(EventType.TAP)
    }
    ,
    UTItemSelectionRowView
}(EATargetActionView));
UTItemSelectionRowView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("li");
        e.classList.add("selectionRow"),
        e.classList.add("listFUTItem"),
        this.__selectIcon = document.createElement("div"),
        this.__selectIcon.classList.add("selectIcon"),
        e.appendChild(this.__selectIcon),
        this.__entityContainer = document.createElement("div"),
        this.__entityContainer.classList.add("entityContainer"),
        this.__name = document.createElement("div"),
        this.__name.classList.add("name"),
        this.__entityContainer.appendChild(this.__name),
        e.appendChild(this.__entityContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTItemSelectionRowView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__selectIcon = null,
    this.__entityContainer = null,
    this.__name = null
}
,
UTItemSelectionRowView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLoanSelectorView = function(t) {
    function UTLoanSelectorView() {
        var e = t.call(this) || this;
        return e.pinnedRow = null,
        e.rows = [],
        e
    }
    return __extends(UTLoanSelectorView, t),
    UTLoanSelectorView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__header.textContent = e.localize("search.pagination.header"),
        DOMKit.toggleDisplayStyle(this.__header, !isPhone()),
        this._btnSelect.init(),
        this._btnSelect.setInteractionState(!1),
        this._btnSelect.setText(e.localize("common.dialog.continue"))
    }
    ,
    UTLoanSelectorView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.pinnedRow && (this.pinnedRow.dealloc(),
        this.pinnedRow = null),
        this.clearRows()
    }
    ,
    UTLoanSelectorView.prototype.clearRows = function() {
        0 < this.rows.length && (this.rows.forEach(function(e) {
            return e.dealloc()
        }),
        this.rows = [])
    }
    ,
    UTLoanSelectorView.prototype.getContinueButton = function() {
        return this._btnSelect
    }
    ,
    UTLoanSelectorView.prototype.setItems = function(e, t) {
        var i = this;
        this.clearRows(),
        this.pinnedRow && this.pinnedRow.dealloc(),
        this.rows = e.map(function(e) {
            return i.generateUTItemSelectionRowView(e, t)
        }, this),
        t && (this.pinnedRow = this.generateComparisonItemView(t)),
        this.layoutSubviews()
    }
    ,
    UTLoanSelectorView.prototype.generateUTItemSelectionRowView = function(e, t) {
        var i = new UTItemSelectionRowView;
        return i.setData({
            item: e,
            comparison: t
        }),
        i.addTarget(this, this._eRowSelected, EventType.TAP),
        i.init(),
        this.addSubview(i, this.__itemList),
        i
    }
    ,
    UTLoanSelectorView.prototype.generateComparisonItemView = function(e) {
        var t = new UTItemTableCellView;
        t.setData(e),
        t.render(),
        this.__pinnedDiv.appendChild(t.getRootElement());
        var i = this.__pinnedDiv.clientHeight;
        return this.__itemList.style.top = i + "px",
        t
    }
    ,
    UTLoanSelectorView.prototype._eRowSelected = function(t, e, i) {
        this.rows.forEach(function(e) {
            return e.toggleSelection(t === e)
        }),
        this._triggerActions(EventType.TAP, {
            row: t,
            rowIndex: this.rows.indexOf(t)
        })
    }
    ,
    UTLoanSelectorView
}(EATargetActionView);
UTLoanSelectorView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pinned-list-container"),
        e.classList.add("OnboardingLoanSelector"),
        this.__pinnedDiv = document.createElement("div"),
        this.__pinnedDiv.classList.add("ut-pinned-item"),
        this.__header = document.createElement("div"),
        this.__header.classList.add("header"),
        this.__pinnedDiv.appendChild(this.__header),
        e.appendChild(this.__pinnedDiv),
        this.__itemList = document.createElement("div"),
        this.__itemList.classList.add("ut-pinned-list"),
        e.appendChild(this.__itemList);
        var t = document.createElement("div");
        t.classList.add("button-container"),
        this._btnSelect = new UTStandardButtonControl,
        this._btnSelect.getRootElement().classList.add("call-to-action"),
        t.appendChild(this._btnSelect.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLoanSelectorView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__pinnedDiv = null,
    this.__header = null,
    this.__itemList = null,
    this._btnSelect.destroy()
}
,
UTLoanSelectorView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var LoanSelectorOnboardingViewController = function(i) {
    function LoanSelectorOnboardingViewController() {
        var e = i.call(this) || this;
        return e._items = [],
        e
    }
    return __extends(LoanSelectorOnboardingViewController, i),
    LoanSelectorOnboardingViewController.prototype.init = function() {
        if (!this.initialized) {
            i.prototype.init.call(this);
            var e = this.getView();
            e.addTarget(this, this._eRowSelected, EventType.TAP),
            e.getContinueButton().addTarget(this, this._eContinueButtonTapped, EventType.TAP);
            var t = "Onboarding - Loan Player";
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: t
            }),
            TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
        }
    }
    ,
    LoanSelectorOnboardingViewController.prototype.initWithItems = function(e, t) {
        this.initialized || (this._items = e,
        this._comparison = t || null,
        this.init())
    }
    ,
    LoanSelectorOnboardingViewController.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this._items = []
    }
    ,
    LoanSelectorOnboardingViewController.prototype._getViewInstanceFromData = function() {
        return new UTLoanSelectorView
    }
    ,
    LoanSelectorOnboardingViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("search.pagination.header")
    }
    ,
    LoanSelectorOnboardingViewController.prototype.viewWillAppear = function() {
        if (i.prototype.viewWillAppear.call(this),
        isPhone()) {
            var e = this.getNavigationController();
            e && e instanceof OnboardingNavigationController && e.showSettings(!1)
        }
    }
    ,
    LoanSelectorOnboardingViewController.prototype.viewWillDisappear = function() {
        if (i.prototype.viewWillDisappear.call(this),
        isPhone()) {
            var e = this.getNavigationController();
            e && e instanceof OnboardingNavigationController && e.showSettings(!0)
        }
    }
    ,
    LoanSelectorOnboardingViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.getView().setItems(this._items, this._comparison)
    }
    ,
    LoanSelectorOnboardingViewController.prototype.setSquad = function(e) {
        this._squad = e
    }
    ,
    LoanSelectorOnboardingViewController.prototype.setSquadViewDelegate = function(e) {
        e.conforms(interfaces.SquadViewDelegate) && (this._squadViewDelegate = e)
    }
    ,
    LoanSelectorOnboardingViewController.prototype._grantLoan = function() {
        var n;
        DebugUtils.Assert(JSUtils.isValid(this._selectedItem), "Expected a loan player item to have been selected."),
        DebugUtils.Assert(JSUtils.isValid(this._squad), "Expected a squad entity reference."),
        DebugUtils.Assert(JSUtils.isValid(this._comparison), "Expected a valid item to swap with the new loan player."),
        this._selectedItem && this._squad && this._comparison && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.UTAS.grantLoanPlayer(this._selectedItem).observe(this, function _onGrantLoanComplete(e, t) {
            var i;
            if (e.unobserve(this),
            t.success) {
                services.PIN.sendData(PINEventType.MILESTONE, {
                    mode: PIN_MILESTONE_EVT_MODE,
                    moment: PINMileStoneEventMoment.COMPLETE,
                    mstid: PINMilestoneEventId.LOANSELECT,
                    type: PINMilestoneEventType.ONBOARDING
                }),
                n = t.data.item,
                services.Item.move(n, ItemPile.CLUB).observe(this, _onLoanMoveComplete);
                var o = this.getRootNavigationController();
                o && o instanceof OnboardingNavigationController && (null === (i = o.getOnboardingState()) || void 0 === i || i.setLoanerDefId(n.definitionId))
            } else
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to grant loaner"),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }));
        function _onLoanMoveComplete(e, t) {
            if (e.unobserve(this),
            t.success) {
                var i = this._squad.getSlot(this._comparison);
                i && (this._squad.addItemToSlot(i.getIndex(), n),
                this._squad.addItemToSlot(UTSquadEntity.MANAGER_SLOT_INDEX - 1, this._comparison),
                this._squad.save())
            } else
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to move loaner to club"),
                NetworkErrorManager.handleStatus(t.status);
            this._squadViewDelegate && this._squadViewDelegate.setInteractionState(!1);
            var o = this.getNavigationController();
            o && o.popViewController(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            services.PIN.sendData(PINEventType.MILESTONE, {
                mode: PIN_MILESTONE_EVT_MODE,
                moment: PINMileStoneEventMoment.COMPLETE,
                mstid: PINMilestoneEventId.LOANEXPLORE,
                type: PINMilestoneEventType.ONBOARDING
            })
        }
    }
    ,
    LoanSelectorOnboardingViewController.prototype._eRowSelected = function(e, t, i) {
        this._selectedItem = this._items[i.rowIndex] || null,
        this.getView().getContinueButton().setInteractionState(!!this._selectedItem)
    }
    ,
    LoanSelectorOnboardingViewController.prototype._eContinueButtonTapped = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.BUTTON_PRESS, "Loaner Selected"),
        this._grantLoan()
    }
    ,
    LoanSelectorOnboardingViewController
}(EAViewController)
  , UTSlotSelectPanelView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSlotSelectPanelView() {
        return e.call(this) || this
    }
    return __extends(UTSlotSelectPanelView, e),
    UTSlotSelectPanelView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnSlotSelect.init(),
        this._btnSlotSelect.setInteractionState(!1),
        this._btnSlotSelect.setText(services.Localization.localize("common.dialog.continue"))
    }
    ,
    UTSlotSelectPanelView.prototype.getSlotSelectButton = function() {
        return this._btnSlotSelect
    }
    ,
    UTSlotSelectPanelView.prototype.setSlotSelectButtonState = function(e, t) {
        this._btnSlotSelect.setText(e),
        this._btnSlotSelect.setInteractionState(t)
    }
    ,
    UTSlotSelectPanelView.prototype.renderSwapDescription = function() {
        this.__descTitle.textContent = services.Localization.localize("onboarding.swapdescription.title"),
        this.__descBody1.textContent = services.Localization.localize("onboarding.swapdescription.body1"),
        this.__descBody2.textContent = services.Localization.localize("onboarding.swapdescription.body2"),
        DOMKit.toggleDisplayStyle(this.__descBody2, !0),
        DOMKit.toggleClass(this.__root, "swap-description", !0)
    }
    ,
    UTSlotSelectPanelView.prototype.renderLoanDescription = function() {
        this.__descTitle.textContent = services.Localization.localize("onboarding.loandescription.title"),
        this.__descBody1.textContent = services.Localization.localize("onboarding.loandescription.body"),
        DOMKit.toggleDisplayStyle(this.__descBody2, !1),
        DOMKit.toggleClass(this.__root, "swap-description", !1)
    }
    ,
    UTSlotSelectPanelView
}(EAView));
UTSlotSelectPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-item-detail-view-panel"),
        this.__description = document.createElement("div"),
        this.__description.classList.add("slotSelectDescription"),
        this.__descTitle = document.createElement("h2"),
        this.__description.appendChild(this.__descTitle),
        this.__descBody1 = document.createElement("p"),
        this.__description.appendChild(this.__descBody1),
        this.__descBody2 = document.createElement("p"),
        this.__description.appendChild(this.__descBody2),
        e.appendChild(this.__description),
        this._btnSlotSelect = new UTStandardButtonControl,
        this._btnSlotSelect.getRootElement().classList.add("call-to-action"),
        e.appendChild(this._btnSlotSelect.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSlotSelectPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null,
    this.__descTitle = null,
    this.__descBody1 = null,
    this.__descBody2 = null,
    this._btnSlotSelect.destroy()
}
,
UTSlotSelectPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var StarterSquadSlotSelectionViewController = function(t) {
    function StarterSquadSlotSelectionViewController() {
        var e = t.call(this) || this;
        return e._slotSelected = !1,
        e
    }
    return __extends(StarterSquadSlotSelectionViewController, t),
    StarterSquadSlotSelectionViewController.prototype.init = function() {
        if (!this.initialized) {
            t.prototype.init.call(this),
            this._panelView = new UTSlotSelectPanelView,
            this._panelView.init(),
            this._panelView.getSlotSelectButton().addTarget(this, this._eSlotSelected, EventType.TAP),
            this._panelView.renderSwapDescription();
            var e = this.getView();
            e.appendPanel(this._panelView),
            e.addClass("onboarding-detail-view"),
            this._itemIterator && e.addTarget(this, this._eIndexChange, UTItemDetailsView.Event.INDEX_CHANGE)
        }
    }
    ,
    StarterSquadSlotSelectionViewController.prototype.initWithSquad = function(e, t) {
        if (!this.initialized) {
            DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity"),
            DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a numeric slot index");
            var i = (this._squad = e).getPlayers();
            this._itemIterator = new EAIterator(i.slice(0, i.length - 2)),
            this._squad.onDataUpdated.observe(this, this._eSquadUpdated),
            this.init()
        }
    }
    ,
    StarterSquadSlotSelectionViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._panelView && this._panelView.dealloc(),
        this._squad && this._squad.onDataUpdated.unobserve(this)
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._getViewInstanceFromData = function() {
        return new UTItemDetailsView
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._getSlotName = function(e) {
        var t = e.index;
        return 0 <= t && t < UTSquadEntity.FIELD_PLAYERS ? UTLocalizationUtil.positionIdToName(e.getGeneralPosition(), services.Localization, e.item.gender) : 0 <= t && t < UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS ? services.Localization.localize("dock.label.substitutes") : 0 <= t && t < UTSquadEntity.MANAGER_SLOT_INDEX ? services.Localization.localize("dock.label.reserves") : BLANK_STR
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._renderView = function() {
        this._slotSelected ? this.getView().render(this._itemIterator.values().map(function(e) {
            return e.getItem()
        }, this), this._itemIterator.getIndex()) : this.getView().render(JSUtils.valToArray(this._squad.getSlot(-1).getItem()), 0)
    }
    ,
    StarterSquadSlotSelectionViewController.prototype.setSlot = function(t) {
        DebugUtils.Assert(this._itemIterator instanceof EAIterator, "Attempted to update iterator index when iterator doesn't exist."),
        this._itemIterator && this._itemIterator.current().getIndex() !== t && (this._slotSelected = !0,
        this._itemIterator.setIndex(this._itemIterator.indexOf(function(e) {
            return e.getIndex() === t
        })),
        this._renderView(),
        this._panelView.setSlotSelectButtonState(services.Localization.localize("swap.withposition", [this._getSlotName(this._itemIterator.current())]), !0))
    }
    ,
    StarterSquadSlotSelectionViewController.prototype.setSquadViewDelegate = function(e) {
        e.conforms(interfaces.SquadViewDelegate) && (this._squadViewDelegate = e)
    }
    ,
    StarterSquadSlotSelectionViewController.prototype.setSlotIterationDelegate = function(e) {
        e.conforms(interfaces.SlotIterationDelegate) && (this._slotIterationDelegate = e)
    }
    ,
    StarterSquadSlotSelectionViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getNavigationController();
        e && e.setNavigationVisibility(!1, !1),
        this._renderView()
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._loadLoanPlayers = function() {
        var n = this.getView()
          , r = this._panelView
          , a = this._itemIterator.current();
        n.setInteractionState(!1),
        r.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.UTAS.getLoanPlayers().observe(this, function _gotoLoanSelector(e, t) {
            if (e.unobserve(this),
            t.success) {
                var i = new LoanSelectorOnboardingViewController
                  , o = new UTOnboardingLoanPlayerSelectionViewModel;
                o.setItems(t.data.items),
                i.initWithItems(o.getLoanerSample(5, o.getPositionFromSlot(a)), a.getItem()),
                this._squad && i.setSquad(this._squad),
                this._squadViewDelegate && i.setSquadViewDelegate(this._squadViewDelegate),
                this.getNavigationController().pushViewController(i)
            } else
                n.setInteractionState(!0),
                r.setInteractionState(!0),
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to retrieve loaner list");
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._eIndexChange = function(e, t, i) {
        this._slotIterationDelegate && this._slotIterationDelegate instanceof interfaces.SlotIterationDelegate && this._slotIterationDelegate.setSlot(this, i.index)
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._eSlotSelected = function(e, t, i) {
        this._loadLoanPlayers()
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._eContinue = function(e, t, i) {
        var o = this.getRootNavigationController();
        if (o) {
            var n = new UTKitSelectOnboardingViewController;
            n.init(),
            o.pushViewController(n, !0)
        }
    }
    ,
    StarterSquadSlotSelectionViewController.prototype._eSquadUpdated = function(e, t) {
        this.getView().toggleCarouselSwiping(!1);
        var i = this._panelView.getSlotSelectButton();
        i.removeTarget(this, this._eSlotSelected, EventType.TAP),
        i.addTarget(this, this._eContinue, EventType.TAP),
        this._panelView.setSlotSelectButtonState(services.Localization.localize("common.dialog.continue"), !0),
        this._panelView.renderLoanDescription()
    }
    ,
    StarterSquadSlotSelectionViewController
}(EAViewController);
NamespaceManager.Register("controllers.navigation"),
controllers.navigation.LoanPlayerSelection = function LoanPlayerSelectionNavigationController(e, t) {
    UTNavigationController.call(this, e, t),
    this._squad = null,
    this._squadViewDelegate = null
}
,
JSUtils.inherits(controllers.navigation.LoanPlayerSelection, UTNavigationController),
controllers.navigation.LoanPlayerSelection.prototype.initWithSquad = function initWithSquad(e, t) {
    DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity."),
    DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a number for current squad slot."),
    this._squad = e;
    var i = this._getRootControllerInstance();
    i.initWithSquad(this._squad, t),
    this.initWithRootController(i)
}
,
controllers.navigation.LoanPlayerSelection.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._squad = null,
    this._squadViewDelegate = null
}
,
controllers.navigation.LoanPlayerSelection.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return new StarterSquadSlotSelectionViewController
}
,
controllers.navigation.LoanPlayerSelection.prototype.didMove = function didMove() {
    this.superclass();
    var e = this.getRootController()
      , t = this.getParentViewController();
    e && t && t.conforms(interfaces.SlotIterationDelegate) && e.setSlotIterationDelegate(t)
}
,
controllers.navigation.LoanPlayerSelection.prototype.setSlot = function setSlot(e) {
    this.popToRootViewController(),
    this.getRootController().setSlot(e)
}
,
controllers.navigation.LoanPlayerSelection.prototype.setSquadViewDelegate = function setSquadViewDelegate(e) {
    e.conforms(interfaces.SquadViewDelegate) && (this._squadViewDelegate = e,
    this.getRootController().setSquadViewDelegate(e))
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var StarterSquadLandscapeViewController = function(e) {
    function StarterSquadLandscapeViewController() {
        return e.call(this) || this
    }
    return __extends(StarterSquadLandscapeViewController, e),
    StarterSquadLandscapeViewController.prototype.init = function() {
        this.initialized || (e.prototype.init.call(this),
        this._overviewController = this._generateSquadOverview(),
        this.addChildViewController(this._overviewController),
        this._panelController = this._generateLoanSelectNavController(),
        this.addChildViewController(this._panelController),
        this._panelController.setSquadViewDelegate(this._overviewController.getView().getSquadOverview()))
    }
    ,
    StarterSquadLandscapeViewController.prototype.initWithSquad = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected to receive a squad entity."),
        this._squad = e,
        this.init())
    }
    ,
    StarterSquadLandscapeViewController.prototype.dealloc = function() {
        e.prototype.dealloc.call(this),
        this._overviewController && this._overviewController.dealloc(),
        this._panelController && this._panelController.dealloc(),
        this._panelController = null,
        this._squad = null
    }
    ,
    StarterSquadLandscapeViewController.prototype._generateSquadOverview = function() {
        var e = new StarterSquadOverviewViewController;
        return this._squad ? e.initWithSquad(this._squad) : e.init(),
        e
    }
    ,
    StarterSquadLandscapeViewController.prototype._generateLoanSelectNavController = function() {
        var e = new controllers.navigation.LoanPlayerSelection;
        return this._squad ? e.initWithSquad(this._squad, 0) : DebugUtils.Assert(!1, "Expected to instantiate navigation controller with a squad"),
        e
    }
    ,
    StarterSquadLandscapeViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("onboarding.complete.teamtitle", [APP_YEAR_SHORT.toString()])
    }
    ,
    StarterSquadLandscapeViewController.prototype.getNavigationItem = function() {
        var e;
        return null === (e = this._overviewController) || void 0 === e ? void 0 : e.getNavigationItem()
    }
    ,
    StarterSquadLandscapeViewController.prototype.viewDidAppear = function() {
        e.prototype.viewDidAppear.call(this),
        this.setLeftController(this._overviewController),
        this.setRightController(this._panelController),
        this._overviewController.getView().toggleSlotSelect(!1)
    }
    ,
    StarterSquadLandscapeViewController.prototype.setSlot = function(e, t) {
        e !== this._panelController && this._panelController.setSlot(t),
        e !== this._overviewController && this._overviewController.setSlot(t)
    }
    ,
    StarterSquadLandscapeViewController
}(UTSplitViewController)
  , CountrySelectOnboardingViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function CountrySelectOnboardingViewController() {
        var e = i.call(this) || this;
        return e.countryIds = [],
        e
    }
    return __extends(CountrySelectOnboardingViewController, i),
    CountrySelectOnboardingViewController.prototype.init = function() {
        if (!this.initialized) {
            i.prototype.init.call(this);
            var e = this.getView();
            e.setType(enums.UIOnboardingSelectionType.NATION),
            e.setTitle(services.Localization.localize("onboarding.nation.title")),
            e.setDescription(services.Localization.localize("onboarding.nation.body")),
            e.setFirstImageLocalPath("images/onboarding/nation_flag.png"),
            e.getContinueButton().addTarget(this, this.onContinueButton, EventType.TAP),
            e.getContinueButtonMobile().addTarget(this, this.onContinueButton, EventType.TAP);
            var t = "Onboarding - Country";
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: t
            }),
            TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
        }
    }
    ,
    CountrySelectOnboardingViewController.prototype._getViewInstanceFromData = function() {
        return new UTOnboardingSelectView
    }
    ,
    CountrySelectOnboardingViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("onboarding.nation.title")
    }
    ,
    CountrySelectOnboardingViewController.prototype.viewDidAppear = function() {
        var e = this.getNavigationController();
        i.prototype.viewDidAppear.call(this),
        0 === this.countryIds.length && this.getCountries(),
        e instanceof OnboardingNavigationController && (e.addNavBarClass("onboarding-select"),
        isPhone() || (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        e.setToolbarVisibility(!0)),
        e.setCurrentStep(enums.UIOnboardingStep.NATION))
    }
    ,
    CountrySelectOnboardingViewController.prototype.getCountries = function() {
        var i = this;
        services.Onboarding.UTAS.getCountries().observe(this, function(e, t) {
            e.unobserve(i),
            t.success && t.data ? (i.countryIds = t.data.countries,
            i.getView().setData(i.mapCountryIdsToData(i.countryIds))) : TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Country Select load failure")
        })
    }
    ,
    CountrySelectOnboardingViewController.prototype.generateCountryDataObject = function(e) {
        return {
            id: e,
            name: UTLocalizationUtil.nationIdToName(e, services.Localization),
            assetType: AssetLocationUtils.IMAGE_TYPE_FLAG
        }
    }
    ,
    CountrySelectOnboardingViewController.prototype.mapCountryIdsToData = function(e) {
        var t = this;
        return e.map(function(e) {
            return t.generateCountryDataObject(e)
        })
    }
    ,
    CountrySelectOnboardingViewController.prototype.selectCountry = function() {
        function d$(e, t) {
            var i, o;
            if (e.unobserve(s),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.squad)) {
                services.PIN.sendData(PINEventType.MILESTONE, {
                    mode: PIN_MILESTONE_EVT_MODE,
                    moment: PINMileStoneEventMoment.COMPLETE,
                    mstid: PINMilestoneEventId.EXPLORESQUAD,
                    type: PINMilestoneEventType.ONBOARDING
                });
                var n = void 0;
                isPhone() ? (n = new StarterSquadOverviewViewController).initWithSquad(t.data.squad) : (n = new StarterSquadLandscapeViewController).initWithSquad(t.data.squad);
                var r = s.getNavigationController();
                if (r instanceof OnboardingNavigationController) {
                    var a = FUTDataUtils.mapNationIdToOnboardingCountryId(c);
                    null === (o = r.getOnboardingState()) || void 0 === o || o.setCountryId(a),
                    r.pushViewController(n, !0)
                }
            } else
                l.setInteractionState(!0),
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "Failed to load starter squad");
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }
        function e$(e, t) {
            e.unobserve(s),
            t.success ? services.Squad.requestSquadById(0).observe(s, d$) : (l.setInteractionState(!0),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            services.Notification.queue([services.Localization.localize("onboarding.error.clubcreation"), UINotificationType.NEGATIVE]),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to create club"))
        }
        var s = this
          , l = this.getView()
          , c = l.getSelectedId()
          , e = JSUtils.isNumber(c) && 0 < c;
        DebugUtils.Assert(e, "Invalid country ID"),
        e && (l.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.UTAS.selectCountry(c).observe(this, function(e, t) {
            var i;
            (e.unobserve(s),
            t.success) ? (services.PIN.sendData(PINEventType.MILESTONE, {
                mode: PIN_MILESTONE_EVT_MODE,
                moment: PINMileStoneEventMoment.COMPLETE,
                mstid: PINMilestoneEventId.COUNTRY,
                type: PINMilestoneEventType.ONBOARDING
            }),
            (null === (i = services.Authentication.getFCASSession().error) || void 0 === i ? void 0 : i.code) === FcasErrorCode.NO_USER ? services.Onboarding.FCAS.createClub().observe(s, function(e, t) {
                t.success ? services.Onboarding.UTAS.createClub().observe(s, e$) : (l.setInteractionState(!0),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
                services.Notification.queue([services.Localization.localize("onboarding.error.clubcreation"), UINotificationType.NEGATIVE]),
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to create FCAS club"))
            }) : services.Onboarding.UTAS.createClub().observe(s, e$)) : (l.setInteractionState(!0),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            services.Notification.queue([services.Localization.localize("onboarding.error.clubcreation"), UINotificationType.NEGATIVE]),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to save country selection"))
        }))
    }
    ,
    CountrySelectOnboardingViewController.prototype.onContinueButton = function(e, t, i) {
        this.selectCountry()
    }
    ,
    CountrySelectOnboardingViewController
}(EAViewController))
  , UTWelcomeBackView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTWelcomeBackView() {
        return e.call(this) || this
    }
    return __extends(UTWelcomeBackView, e),
    UTWelcomeBackView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnSubmit.init(),
        this._btnSubmit.setText(services.Localization.localize("mobilestart.label.getStarted"))
    }
    ,
    UTWelcomeBackView.prototype.appendPersonaSelector = function(e) {
        this.addClass("has-persona-selector"),
        this.addSubview(e, this.__personaSelectorContainer)
    }
    ,
    UTWelcomeBackView.prototype.setTitle = function(e) {
        this.__welcomeText.innerHTML = e
    }
    ,
    UTWelcomeBackView.prototype.setDescription = function(e) {
        this.__welcomeDesc.textContent = e
    }
    ,
    UTWelcomeBackView.prototype.getSubmitButton = function() {
        return this._btnSubmit
    }
    ,
    UTWelcomeBackView
}(EAView));
UTWelcomeBackView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("sm-ut-content-container"),
        e.classList.add("ut-content-container");
        var t = document.createElement("div");
        t.classList.add("ut-content"),
        this.__personaSelectorContainer = document.createElement("div"),
        this.__personaSelectorContainer.classList.add("onboarding"),
        this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"),
        t.appendChild(this.__personaSelectorContainer);
        var i = document.createElement("div");
        i.classList.add("ut-welcome-back"),
        i.classList.add("ut-login-generic");
        var o = document.createElement("div");
        o.classList.add("ut-login-generic-content");
        var n = document.createElement("div");
        this.__welcomeText = document.createElement("h2"),
        this.__welcomeText.classList.add("title"),
        n.appendChild(this.__welcomeText),
        this.__welcomeDesc = document.createElement("p"),
        n.appendChild(this.__welcomeDesc),
        o.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-button-container"),
        this._btnSubmit = new UTStandardButtonControl,
        this._btnSubmit.getRootElement().classList.add("call-to-action"),
        r.appendChild(this._btnSubmit.getRootElement()),
        o.appendChild(r),
        i.appendChild(o),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWelcomeBackView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__personaSelectorContainer = null,
    this.__welcomeText = null,
    this.__welcomeDesc = null,
    this._btnSubmit.destroy()
}
,
UTWelcomeBackView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWelcomeBackViewController = function(s) {
    function UTWelcomeBackViewController() {
        var e = s.call(this) || this;
        return e.personaController = new UTPersonaViewController,
        e
    }
    return __extends(UTWelcomeBackViewController, s),
    UTWelcomeBackViewController.prototype.init = function() {
        this.initialized || (s.prototype.init.call(this),
        this.personaController.init(),
        this.personaController.showPersonaChanger = !1,
        this.addChildViewController(this.personaController))
    }
    ,
    UTWelcomeBackViewController.prototype.dealloc = function() {
        this.personaController.dealloc(),
        s.prototype.dealloc.call(this)
    }
    ,
    UTWelcomeBackViewController.prototype._getTelemetryId = function() {
        return "Onboarding - Welcome Screen"
    }
    ,
    UTWelcomeBackViewController.prototype.viewDidAppear = function() {
        var e, t;
        s.prototype.viewDidAppear.call(this);
        var i = services.Localization
          , o = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona()
          , n = this.getNavigationController()
          , r = this.getView()
          , a = null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR;
        this.personaController && (r.appendPersonaSelector(this.personaController.getView()),
        r.layoutSubviews(),
        this.personaController.viewDidAppear()),
        n && !isPhone() && (n.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        n.setToolbarVisibility(!0)),
        r.setTitle(i.localize("mobilestart.text.welcomeBack", [a])),
        r.setDescription(i.localize("mobilestart.text.gettingStarted")),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, "Onboarding - Welcome Screen"),
        this.getView().getSubmitButton().addTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTWelcomeBackViewController.prototype.viewWillDisappear = function() {
        s.prototype.viewWillDisappear.call(this),
        this.getView().getSubmitButton().removeTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTWelcomeBackViewController.prototype._getViewInstanceFromData = function() {
        return new UTWelcomeBackView
    }
    ,
    UTWelcomeBackViewController.prototype.onTapEvent = function(e, t, i) {
        var o = this.getNavigationController()
          , n = new CountrySelectOnboardingViewController;
        n.init(),
        o instanceof OnboardingNavigationController && o.showStepChain(!0),
        null == o || o.pushViewController(n, !0)
    }
    ,
    UTWelcomeBackViewController
}(EAViewController)
  , UTPlayerHealthTileContentView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTPlayerHealthTileContentView() {
        return e.call(this) || this
    }
    return __extends(UTPlayerHealthTileContentView, e),
    UTPlayerHealthTileContentView.prototype.displayDashboardStats = function(e) {
        DOMKit.toggleDisplayStyle(this.__dashboardStats, e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setDescription = function(e) {
        this.__description && (this.__description.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setTotalLabel = function(e) {
        this.__totalLabel && (this.__totalLabel.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setTotalValue = function(e) {
        this.__totalValue && (this.__totalValue.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setAvgLabel = function(e) {
        this.__avgLabel && (this.__avgLabel.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setAvgValue = function(e) {
        this.__avgValue && (this.__avgValue.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setComparisonLabel = function(e) {
        this.__comparisonLabel && (this.__comparisonLabel.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setComparisonValue = function(e, t) {
        if (this.__comparisonValue && (this.__comparisonValue.textContent = e),
        t) {
            var i = [enums.UIValueArrowStyle.NEGATIVE_DECREASE, enums.UIValueArrowStyle.NEGATIVE_INCREASE, enums.UIValueArrowStyle.POSITIVE_DECREASE, enums.UIValueArrowStyle.POSITIVE_INCREASE].join(" ");
            DOMKit.removeClass(this.__comparisonValue, i),
            DOMKit.addClass(this.__comparisonValue, t)
        }
    }
    ,
    UTPlayerHealthTileContentView
}(EAView));
UTPlayerHealthTileContentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-content--player-health"),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-tile-view--description"),
        e.appendChild(this.__description),
        this.__dashboardStats = document.createElement("div"),
        this.__dashboardStats.classList.add("ut-tile-content--player-health--stats");
        var t = document.createElement("div");
        t.classList.add("ut-tile-content--player-health--total"),
        this.__totalValue = document.createElement("span"),
        this.__totalValue.classList.add("value"),
        t.appendChild(this.__totalValue),
        this.__totalLabel = document.createElement("span"),
        this.__totalLabel.classList.add("label"),
        t.appendChild(this.__totalLabel),
        this.__dashboardStats.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-tile-content--player-health--avg"),
        this.__avgValue = document.createElement("span"),
        this.__avgValue.classList.add("value"),
        i.appendChild(this.__avgValue),
        this.__avgLabel = document.createElement("span"),
        this.__avgLabel.classList.add("label"),
        i.appendChild(this.__avgLabel),
        this.__dashboardStats.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-tile-content--player-health--comparison"),
        this.__comparisonValue = document.createElement("span"),
        this.__comparisonValue.classList.add("value"),
        o.appendChild(this.__comparisonValue),
        this.__comparisonLabel = document.createElement("span"),
        this.__comparisonLabel.classList.add("label"),
        o.appendChild(this.__comparisonLabel),
        this.__dashboardStats.appendChild(o),
        e.appendChild(this.__dashboardStats),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthTileContentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null,
    this.__dashboardStats = null,
    this.__totalValue = null,
    this.__totalLabel = null,
    this.__avgValue = null,
    this.__avgLabel = null,
    this.__comparisonValue = null,
    this.__comparisonLabel = null
}
,
UTPlayerHealthTileContentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthTileView = function(e) {
    function UTPlayerHealthTileView() {
        return e.call(this) || this
    }
    return __extends(UTPlayerHealthTileView, e),
    UTPlayerHealthTileView.prototype.init = function() {
        e.prototype.init.call(this),
        this._tag.init()
    }
    ,
    UTPlayerHealthTileView.prototype.dealloc = function() {
        e.prototype.dealloc.call(this)
    }
    ,
    UTPlayerHealthTileView.prototype._getContentViewInstance = function() {
        return new UTPlayerHealthTileContentView
    }
    ,
    UTPlayerHealthTileView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTPlayerHealthTileView.prototype.getId = function() {
        return this.id
    }
    ,
    UTPlayerHealthTileView.prototype.displayDashboardStats = function(e) {
        var t = this.getContentView();
        t && t.displayDashboardStats(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setDescription = function(e) {
        var t = this.getContentView();
        e && t && t.setDescription(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setTotalLabel = function(e) {
        var t = this.getContentView();
        e && t && t.setTotalLabel(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setTotalValue = function(e) {
        var t = this.getContentView();
        e && t && t.setTotalValue(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setAvgLabel = function(e) {
        var t = this.getContentView();
        e && t && t.setAvgLabel(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setAvgValue = function(e) {
        var t = this.getContentView();
        e && t && t.setAvgValue(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setComparisonLabel = function(e) {
        var t = this.getContentView();
        e && t && t.setComparisonLabel(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setComparisonValue = function(e, t) {
        var i = this.getContentView();
        e && i && i.setComparisonValue(e, t)
    }
    ,
    UTPlayerHealthTileView.prototype.setTagText = function(e) {
        this._tag && (this._tag.setLabel(e),
        this._tag.setRoundedCorner(UTLabelView.Rounded.BOTTOM_LEFT),
        this._tag.setStyle(UTLabelView.Style.HIGHLIGHT))
    }
    ,
    UTPlayerHealthTileView
}(UTTileView);
UTPlayerHealthTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-tile-view"),
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t),
        this._tag = new UTLabelView,
        e.appendChild(this._tag.getRootElement());
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tag.destroy(),
    this.__tileTitle = null,
    this.__tileContent = null
}
,
UTPlayerHealthTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthStatView = function(e) {
    function UTPlayerHealthStatView() {
        return e.call(this) || this
    }
    return __extends(UTPlayerHealthStatView, e),
    UTPlayerHealthStatView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTPlayerHealthStatView.prototype.getId = function() {
        return this.id
    }
    ,
    UTPlayerHealthStatView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTPlayerHealthStatView.prototype.setDescription = function(e) {
        this.__description && (this.__description.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayDetailedStats = function(e) {
        DOMKit.toggleDisplayStyle(this.__detailedStats, e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyAvgLabel = function(e) {
        this.__weeklyAvgLabel && (this.__weeklyAvgLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyAvgValue = function(e) {
        this.__weeklyAvgValue && (this.__weeklyAvgValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyComparisonLabel = function(e) {
        this.__weeklyComparisonLabel && (this.__weeklyComparisonLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyComparisonValue = function(e, t) {
        if (this.__weeklyComparisonValue && (this.__weeklyComparisonValue.textContent = e),
        t) {
            var i = [enums.UIValueArrowStyle.NEGATIVE_DECREASE, enums.UIValueArrowStyle.NEGATIVE_INCREASE, enums.UIValueArrowStyle.POSITIVE_DECREASE, enums.UIValueArrowStyle.POSITIVE_INCREASE].join(" ");
            DOMKit.removeClass(this.__weeklyComparisonValue, i),
            DOMKit.addClass(this.__weeklyComparisonValue, t)
        }
    }
    ,
    UTPlayerHealthStatView.prototype.setPersonaUsageNote = function(e) {
        this.__personaUsageNote && (this.__personaUsageNote.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayTimeSpent = function(e) {
        DOMKit.toggleDisplayStyle(this.__timeSpent, e)
    }
    ,
    UTPlayerHealthStatView.prototype.setTotalTimeSpentLabel = function(e) {
        this.__totalTimeSpentLabel && (this.__totalTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setTotalTimeSpentValue = function(e) {
        this.__totalTimeSpentValue && (this.__totalTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setConsoleTimeSpentLabel = function(e) {
        this.__consoleTimeSpentLabel && (this.__consoleTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setConsoleTimeSpentValue = function(e) {
        this.__consoleTimeSpentValue && (this.__consoleTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWebTimeSpentLabel = function(e) {
        this.__webTimeSpentLabel && (this.__webTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWebTimeSpentValue = function(e) {
        this.__webTimeSpentValue && (this.__webTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setCompAppTimeSpentLabel = function(e) {
        this.__compAppTimeSpentLabel && (this.__compAppTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setCompAppTimeSpentValue = function(e) {
        this.__compAppTimeSpentValue && (this.__compAppTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayDonutGraph = function(e) {
        DOMKit.toggleDisplayStyle(this.__donutGraph, e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayLimitInput = function(e) {
        this.__limitInputLabel.textContent = services.Localization.localize("playerHealth.label.setLimit"),
        DOMKit.toggleDisplayStyle(this.__limitInput, e)
    }
    ,
    UTPlayerHealthStatView.prototype.addDonutGraph = function(e) {
        this.addSubview(e, this.__donutGraph),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthStatView.prototype.addLimitInput = function(e, t) {
        this.addSubview(e, this.__limitInput),
        this.addSubview(t, this.__limitInput),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthStatView.prototype.addElementToContentView = function(e) {
        this.addSubview(e, this.__statContentView),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthStatView
}(EAView);
UTPlayerHealthStatView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-stat-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this.__statContentView = document.createElement("div"),
        this.__statContentView.classList.add("ut-player-health-stat-view--content"),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-tile-view--description"),
        this.__statContentView.appendChild(this.__description),
        this.__donutGraph = document.createElement("div"),
        this.__donutGraph.classList.add("ut-player-health-stat-view--content--donut-graph"),
        this.__statContentView.appendChild(this.__donutGraph),
        this.__timeSpent = document.createElement("div"),
        this.__timeSpent.classList.add("ut-player-health-stat-view--content--time-spent");
        var i = document.createElement("div");
        i.classList.add("ut-player-health-stat-view--content--total-time-spent"),
        this.__totalTimeSpentValue = document.createElement("span"),
        this.__totalTimeSpentValue.classList.add("value"),
        i.appendChild(this.__totalTimeSpentValue),
        this.__totalTimeSpentLabel = document.createElement("span"),
        this.__totalTimeSpentLabel.classList.add("label"),
        i.appendChild(this.__totalTimeSpentLabel),
        this.__timeSpent.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-player-health-stat-view--content--web-time-spent"),
        this.__webTimeSpentValue = document.createElement("span"),
        this.__webTimeSpentValue.classList.add("value"),
        o.appendChild(this.__webTimeSpentValue),
        this.__webTimeSpentLabel = document.createElement("span"),
        this.__webTimeSpentLabel.classList.add("label"),
        o.appendChild(this.__webTimeSpentLabel),
        this.__timeSpent.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-player-health-stat-view--content--compapp-time-spent"),
        this.__compAppTimeSpentValue = document.createElement("span"),
        this.__compAppTimeSpentValue.classList.add("value"),
        n.appendChild(this.__compAppTimeSpentValue),
        this.__compAppTimeSpentLabel = document.createElement("span"),
        this.__compAppTimeSpentLabel.classList.add("label"),
        n.appendChild(this.__compAppTimeSpentLabel),
        this.__timeSpent.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-player-health-stat-view--content--console-time-spent"),
        this.__consoleTimeSpentValue = document.createElement("span"),
        this.__consoleTimeSpentValue.classList.add("value"),
        r.appendChild(this.__consoleTimeSpentValue),
        this.__consoleTimeSpentLabel = document.createElement("span"),
        this.__consoleTimeSpentLabel.classList.add("label"),
        r.appendChild(this.__consoleTimeSpentLabel),
        this.__timeSpent.appendChild(r),
        this.__statContentView.appendChild(this.__timeSpent),
        this.__detailedStats = document.createElement("div"),
        this.__detailedStats.classList.add("ut-player-health-stat-view--content--detailed-stats");
        var a = document.createElement("div");
        a.classList.add("ut-player-health-stat-view--content--weekly-avg"),
        this.__weeklyAvgValue = document.createElement("span"),
        this.__weeklyAvgValue.classList.add("value"),
        a.appendChild(this.__weeklyAvgValue),
        this.__weeklyAvgLabel = document.createElement("span"),
        this.__weeklyAvgLabel.classList.add("label"),
        a.appendChild(this.__weeklyAvgLabel),
        this.__detailedStats.appendChild(a);
        var s = document.createElement("div");
        s.classList.add("ut-player-health-stat-view--content--weekly-comparison"),
        this.__weeklyComparisonValue = document.createElement("span"),
        this.__weeklyComparisonValue.classList.add("value"),
        s.appendChild(this.__weeklyComparisonValue),
        this.__weeklyComparisonLabel = document.createElement("span"),
        this.__weeklyComparisonLabel.classList.add("label"),
        s.appendChild(this.__weeklyComparisonLabel),
        this.__detailedStats.appendChild(s),
        this.__statContentView.appendChild(this.__detailedStats),
        this.__limitInput = document.createElement("div"),
        this.__limitInput.classList.add("ut-player-health-stat-view--content--limit-input"),
        this.__limitInputLabel = document.createElement("span"),
        this.__limitInputLabel.classList.add("label"),
        this.__limitInput.appendChild(this.__limitInputLabel),
        this.__statContentView.appendChild(this.__limitInput),
        this.__personaUsageNote = document.createElement("p"),
        this.__personaUsageNote.classList.add("ut-player-health-stat-view--content--persona"),
        this.__statContentView.appendChild(this.__personaUsageNote),
        e.appendChild(this.__statContentView),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthStatView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__statContentView = null,
    this.__description = null,
    this.__donutGraph = null,
    this.__timeSpent = null,
    this.__totalTimeSpentValue = null,
    this.__totalTimeSpentLabel = null,
    this.__webTimeSpentValue = null,
    this.__webTimeSpentLabel = null,
    this.__compAppTimeSpentValue = null,
    this.__compAppTimeSpentLabel = null,
    this.__consoleTimeSpentValue = null,
    this.__consoleTimeSpentLabel = null,
    this.__detailedStats = null,
    this.__weeklyAvgValue = null,
    this.__weeklyAvgLabel = null,
    this.__weeklyComparisonValue = null,
    this.__weeklyComparisonLabel = null,
    this.__limitInput = null,
    this.__limitInputLabel = null,
    this.__personaUsageNote = null
}
,
UTPlayerHealthStatView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNumberInputSpinnerControl = function(i) {
    function UTNumberInputSpinnerControl() {
        var e = i.call(this) || this;
        return e.decreaseTimeout = 0,
        e.duration = 0,
        e.increaseTimeout = 0,
        e.speedInterval = 50,
        e.startInterval = 250,
        e
    }
    return __extends(UTNumberInputSpinnerControl, i),
    UTNumberInputSpinnerControl.prototype.init = function() {
        var e = this;
        i.prototype.init.call(this),
        this._numberInput.init(),
        this._numberInput.setPlaceholder(services.Localization.localize("post.spinnerDefaultValue")),
        this._numberInput.addTarget(this, this.eInputChanged, EventType.CHANGE);
        var t = JSUtils.debounce(this._triggerActions.bind(this), 500);
        this._decrementBtn.init(),
        this._decrementBtn.addTarget(this, function() {
            e.beginDecrease(),
            e.setInteractionState(!0)
        }, EventType.TOUCHSTART),
        this._decrementBtn.addTarget(this, function() {
            e.endDecrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHEND),
        this._decrementBtn.addTarget(this, function() {
            e.endDecrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHCANCEL),
        this._incrementBtn.init(),
        this._incrementBtn.addTarget(this, function() {
            e.beginIncrease(),
            e.setInteractionState(!0)
        }, EventType.TOUCHSTART),
        this._incrementBtn.addTarget(this, function() {
            e.endIncrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHEND),
        this._incrementBtn.addTarget(this, function() {
            e.endIncrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHCANCEL)
    }
    ,
    UTNumberInputSpinnerControl.prototype.reset = function() {
        this._numberInput.reset()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setInteractionState = function(e) {
        i.prototype.setInteractionState.call(this, e),
        this._numberInput.setInteractionState(e),
        this.updateIncrementDecrementButtonInteractionStates()
    }
    ,
    UTNumberInputSpinnerControl.prototype.getValue = function() {
        return this._numberInput.value
    }
    ,
    UTNumberInputSpinnerControl.prototype.setValue = function(e) {
        this._numberInput.value = e,
        this.updateIncrementDecrementButtonInteractionStates()
    }
    ,
    UTNumberInputSpinnerControl.prototype.getMinValue = function() {
        return this._numberInput.getMinValue()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setMinValue = function(e) {
        this._numberInput.setMinValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.getMaxValue = function() {
        return this._numberInput.getMaxValue()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setMaxValue = function(e) {
        this._numberInput.setMaxValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.setLimits = function(e, t) {
        var i = this.getValue();
        this._numberInput.setMinValue(e),
        this._numberInput.setMaxValue(t),
        this._decrementBtn.setInteractionState(e < i),
        this._incrementBtn.setInteractionState(i < t)
    }
    ,
    UTNumberInputSpinnerControl.prototype.focus = function() {
        this._numberInput.focus()
    }
    ,
    UTNumberInputSpinnerControl.prototype.blur = function() {
        this._numberInput.blur()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setPlaceholder = function(e) {
        this._numberInput.placeholder = e
    }
    ,
    UTNumberInputSpinnerControl.prototype.getNumberInput = function() {
        return this._numberInput
    }
    ,
    UTNumberInputSpinnerControl.prototype.updateIncrementDecrementButtonInteractionStates = function() {
        this._decrementBtn.setInteractionState(this.getValue() > this._numberInput.getMinValue()),
        this._incrementBtn.setInteractionState(this.getValue() < this._numberInput.getMaxValue())
    }
    ,
    UTNumberInputSpinnerControl.prototype.increment = function() {
        var e = this.getValue() + 1;
        this.setValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.decrement = function() {
        var e = this.getValue() - 1;
        this.setValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.beginIncrease = function() {
        if (!this.decreaseTimeout)
            if (this.getValue() < this.getMaxValue()) {
                this.increment(),
                this.duration++;
                var e = this.duration <= 4 ? this.startInterval : this.speedInterval;
                this.increaseTimeout = window.setTimeout(this.beginIncrease.bind(this), e)
            } else
                this.endIncrease()
    }
    ,
    UTNumberInputSpinnerControl.prototype.beginDecrease = function() {
        if (!this.increaseTimeout)
            if (this.getValue() > this.getMinValue()) {
                this.decrement(),
                this.duration++;
                var e = this.duration <= 4 ? this.startInterval : this.speedInterval;
                this.decreaseTimeout = window.setTimeout(this.beginDecrease.bind(this), e)
            } else
                this.endDecrease()
    }
    ,
    UTNumberInputSpinnerControl.prototype.endIncrease = function() {
        window.clearTimeout(this.increaseTimeout),
        this.increaseTimeout = 0,
        this.duration = 0
    }
    ,
    UTNumberInputSpinnerControl.prototype.endDecrease = function() {
        window.clearTimeout(this.decreaseTimeout),
        this.decreaseTimeout = 0,
        this.duration = 0
    }
    ,
    UTNumberInputSpinnerControl.prototype.eInputChanged = function(e, t, i) {
        this._triggerActions(EventType.CHANGE, {
            value: i.value
        }),
        this.setInteractionState(!0)
    }
    ,
    UTNumberInputSpinnerControl
}(UTControl);
UTNumberInputSpinnerControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-numeric-input-spinner-control"),
        this._decrementBtn = new UTStandardButtonControl,
        this._decrementBtn.getRootElement().classList.add("decrement-value"),
        e.appendChild(this._decrementBtn.getRootElement()),
        this._numberInput = new UTNumberInputControl,
        e.appendChild(this._numberInput.getRootElement()),
        this._incrementBtn = new UTStandardButtonControl,
        this._incrementBtn.getRootElement().classList.add("increment-value"),
        e.appendChild(this._incrementBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNumberInputSpinnerControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._decrementBtn.destroy(),
    this._numberInput.destroy(),
    this._incrementBtn.destroy()
}
,
UTNumberInputSpinnerControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLimitStatInputSpinnerControl = function(n) {
    function UTLimitStatInputSpinnerControl() {
        var e = n.call(this) || this;
        return e.currentValue = 0,
        e.unlimitedValue = 0,
        e
    }
    return __extends(UTLimitStatInputSpinnerControl, n),
    UTLimitStatInputSpinnerControl.prototype.getValue = function() {
        return this.currentValue
    }
    ,
    UTLimitStatInputSpinnerControl.prototype.setValue = function(e) {
        (this.currentValue = e) === this.unlimitedValue ? this.getNumberInput().getRootElement().value = "" : this.getNumberInput().value = e,
        this.updateIncrementDecrementButtonInteractionStates()
    }
    ,
    UTLimitStatInputSpinnerControl.prototype.eInputChanged = function(e, t, i) {
        var o = Number(i);
        this.currentValue = JSUtils.isNumber(o) ? o : 0,
        n.prototype.eInputChanged.call(this, e, t, {
            value: this.currentValue
        })
    }
    ,
    UTLimitStatInputSpinnerControl
}(UTNumberInputSpinnerControl)
  , UTPlayerHealthView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPlayerHealthView() {
        var e = t.call(this) || this;
        return e.donutGraph = null,
        e
    }
    return __extends(UTPlayerHealthView, t),
    UTPlayerHealthView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTPlayerHealthView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.btnEnablePlayerHealth && this.btnEnablePlayerHealth.dealloc(),
        this.donutGraph && this.donutGraph.dealloc(),
        this.limitInput && this.limitInput.dealloc(),
        this.resetButton && this.resetButton.dealloc()
    }
    ,
    UTPlayerHealthView.prototype.initTabMenu = function(e) {
        var t = this
          , i = services.Localization;
        this._tabMenu.addTab("All", i.localize("playerHealth.tabTitle.dashboard")),
        e && 0 < e.stats.length && e.stats.values().forEach(function(e) {
            e.id !== PlayerHealthStatId.MATCHES_PLAYED && e.id !== PlayerHealthStatId.TIME_SPENT_CONSOLE && e.id !== PlayerHealthStatId.TIME_SPENT_COMP_APP && t._tabMenu.addTab(e.id, i.localize("playerHealth.tabTitle." + e.id))
        }),
        this._tabMenu.setActiveTab("All"),
        this._tabMenu.layoutSubviews(),
        this._tabMenu.addTarget(this, this.handleTabSelect, EventType.TAP)
    }
    ,
    UTPlayerHealthView.prototype.clearViews = function() {
        this.playerHealthSection = [],
        this.removeSubviews()
    }
    ,
    UTPlayerHealthView.prototype.render = function(t, e) {
        var i = this;
        if (this.clearViews(),
        t && 0 < t.stats.length)
            if ("All" === e)
                t.stats.values().forEach(function(e) {
                    e.id !== PlayerHealthStatId.TIME_SPENT_CONSOLE && e.id !== PlayerHealthStatId.TIME_SPENT_COMP_APP && i.playerHealthSection.push(i.generateDashboardTile(t, e))
                });
            else if (e !== PlayerHealthStatId.MATCHES_PLAYED) {
                var o = t.getStatById(e);
                o && this.playerHealthSection.push(this.generateDetailedStatView(t, o))
            }
        this._tabMenu.setActiveTab(e),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthView.prototype.generateDashboardTile = function(e, t) {
        var i = services.Localization
          , o = new UTPlayerHealthTileView;
        o.init(),
        o.setId(t.id),
        o.title = i.localize("playerHealth.tileTitle." + t.id),
        o.setDescription(i.localize("playerHealth.tileDescription." + t.id));
        var n = t.percentChange;
        if (t.id === PlayerHealthStatId.TIME_SPENT_WEB_APP)
            n = e.getTotalTimeSpentPercentChange(),
            o.setTotalLabel(i.localize("playerHealth.label.totalTime")),
            o.setTotalValue(i.localizeTimeRemaining(e.getCurrentTotalTimeSpent())),
            o.setAvgLabel(i.localize("playerHealth.label.weeklyAvg")),
            o.setAvgValue(i.localizeTimeRemaining(e.getTotalTimeSpentWeeklyAvg()));
        else {
            o.setTotalLabel(i.localize("playerHealth.label.thisWeek"));
            var r = t.limit === UTPlayerHealthStatEntity.DEFAULT_LIMIT ? i.localize("playerHealth.inputPlaceholder.unlimited") : i.localizeNumber(t.limit);
            o.setTotalValue(i.localize("common.fraction", [i.localizeNumber(t.currentPeriodValue), r])),
            o.setAvgLabel(i.localize("playerHealth.label.weeklyAvg")),
            o.setAvgValue(i.localizeNumber(t.weeklyAverage))
        }
        var a = enums.UIValueArrowStyle.NONE;
        0 !== n && (a = 0 < n ? enums.UIValueArrowStyle.NEGATIVE_INCREASE : enums.UIValueArrowStyle.POSITIVE_DECREASE),
        o.setComparisonLabel(i.localize("playerHealth.label.lastWeek"));
        var s = 0 <= n ? n : -n;
        return o.setComparisonValue(i.localize("common.percentage", [i.localizeNumber(s)]), a),
        t.isLimitReached() && o.setTagText(i.localize("playerHealth.label.limitReached")),
        t.id !== PlayerHealthStatId.MATCHES_PLAYED ? o.setInteractionState(!0) : o.setInteractionState(!1),
        o.addTarget(this, this.handleTileSelect, EventType.TAP),
        this.addSubview(o, this.__tiles),
        o
    }
    ,
    UTPlayerHealthView.prototype.generateDetailedStatView = function(e, t) {
        var i, o = services.Localization, n = new UTPlayerHealthStatView;
        n.init(),
        n.setInteractionState(!1),
        n.setId(t.id),
        n.setTitle(o.localize("playerHealth.tileTitle." + t.id)),
        n.setDescription(o.localize("playerHealth.tileDescription." + t.id)),
        n.displayDonutGraph(!1),
        n.displayLimitInput(!1),
        n.displayTimeSpent(!1),
        n.displayDetailedStats(!0);
        var r = t.percentChange;
        if (t.id === PlayerHealthStatId.TIME_SPENT_WEB_APP) {
            r = e.getTotalTimeSpentPercentChange(),
            n.displayTimeSpent(!0),
            n.setTotalTimeSpentLabel(o.localize("playerHealth.label.thisWeek")),
            n.setTotalTimeSpentValue(o.localizeTimeRemaining(e.getCurrentTotalTimeSpent())),
            n.setWebTimeSpentLabel(o.localize("playerHealth.label." + t.id)),
            n.setWebTimeSpentValue(o.localizeTimeRemaining(t.currentPeriodValue));
            var a = e.getStatById(PlayerHealthStatId.TIME_SPENT_COMP_APP);
            n.setCompAppTimeSpentLabel(o.localize("playerHealth.label." + PlayerHealthStatId.TIME_SPENT_COMP_APP)),
            n.setCompAppTimeSpentValue(o.localizeTimeRemaining(a ? a.currentPeriodValue : 0));
            var s = e.getStatById(PlayerHealthStatId.TIME_SPENT_CONSOLE);
            n.setConsoleTimeSpentLabel(o.localize("playerHealth.label." + PlayerHealthStatId.TIME_SPENT_CONSOLE)),
            n.setConsoleTimeSpentValue(o.localizeTimeRemaining(s ? s.currentPeriodValue : 0)),
            n.setWeeklyAvgValue(o.localizeTimeRemaining(e.getTotalTimeSpentWeeklyAvg()));
            var l = null === (i = services.User.getUser()) || void 0 === i ? void 0 : i.getSelectedPersona();
            if (l && l.sku !== GameSku.UNKNOWN) {
                var c = this.getConsoleNameBySku(l.sku);
                n.setPersonaUsageNote(o.localize("playerHealth.tileNote.persona", [c, APP_YEAR_SHORT.toString()]))
            }
        } else {
            if (this.donutGraph = new UTDonutGraphView,
            this.donutGraph.init(),
            isPhone() ? this.donutGraph.setWidth(160) : this.donutGraph.setWidth(250),
            this.donutGraph.toggleLabelDisplay(!0),
            t.isLimitReached())
                this.donutGraph.setState(UTDonutGraphView.State.CAPPED),
                this.donutGraph.setData([100]),
                this.donutGraph.setLabel(o.localize("playerHealth.label.limitReached"), "");
            else {
                var d = t.limit === UTPlayerHealthStatEntity.DEFAULT_LIMIT ? 0 : t.currentPeriodValue / t.limit * 100;
                this.donutGraph.setData([d])
            }
            this.donutGraph.setStartLabel(o.localize("playerHealth.label.thisWeek"), o.localizeNumber(t.currentPeriodValue));
            var u = t.limit === UTPlayerHealthStatEntity.DEFAULT_LIMIT ? o.localize("playerHealth.inputPlaceholder.unlimited") : o.localizeNumber(t.limit);
            this.donutGraph.setEndLabel(o.localize("playerHealth.label.limit"), u),
            n.addDonutGraph(this.donutGraph),
            n.displayDonutGraph(!0),
            this.limitInput = new UTLimitStatInputSpinnerControl,
            this.limitInput.init(),
            this.limitInput.unlimitedValue = UTPlayerHealthStatEntity.DEFAULT_LIMIT,
            this.limitInput.setPlaceholder(o.localize("playerHealth.inputPlaceholder.unlimited")),
            this.limitInput.setValue(t.limit),
            this.limitInput.setMinValue(0),
            this.limitInput.setMaxValue(UTPlayerHealthStatEntity.MAXIMUM_LIMIT),
            this.limitInput.setInteractionState(!0),
            this.limitInput.addTarget(this, this.handleLimitInput, EventType.CHANGE),
            this.resetButton = new UTFlatButtonControl,
            this.resetButton.init(),
            this.resetButton.setText(o.localize("playerHealth.button.reset")),
            this.resetButton.setInteractionState(this.limitInput.getValue() !== UTPlayerHealthStatEntity.DEFAULT_LIMIT),
            this.resetButton.addTarget(this, this.handleReset, EventType.TAP),
            n.addLimitInput(this.limitInput, this.resetButton),
            n.displayLimitInput(!0),
            n.setWeeklyAvgValue(o.localizeNumber(t.weeklyAverage))
        }
        n.setWeeklyAvgLabel(o.localize("playerHealth.label.weeklyAvg")),
        n.setWeeklyComparisonLabel(o.localize("playerHealth.label.lastWeek"));
        var p = 0 <= r ? r : -r
          , h = enums.UIValueArrowStyle.NONE;
        return 0 !== r && (h = 0 < r ? enums.UIValueArrowStyle.NEGATIVE_INCREASE : enums.UIValueArrowStyle.POSITIVE_DECREASE),
        n.setWeeklyComparisonValue(o.localize("common.percentage", [o.localizeNumber(p)]), h),
        this.addSubview(n, this.__tiles),
        n
    }
    ,
    UTPlayerHealthView.prototype.renderDisabled = function() {
        this.clearViews();
        var e = services.Localization
          , t = new UTPlayerHealthStatView;
        t.init(),
        t.setInteractionState(!1),
        t.setTitle(e.localize("playerHealth.disabled.title")),
        t.setDescription(e.localize("playerHealth.disabled.description")),
        t.addClass(UTPlayerHealthView.TILE_CLASS.SHARING_DISABLED),
        this.addSubview(t, this.__tiles),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthView.prototype.bubbleEvent = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTPlayerHealthView.Events.ENABLE_PLAYER_HEALTH, i)
    }
    ,
    UTPlayerHealthView.prototype.handleTileSelect = function(e, t, i) {
        this.isInteractionEnabled() && (this.__tiles.scrollTop = 0,
        this._triggerActions(UTPlayerHealthView.Events.TAB_SELECTED, {
            id: e.getId()
        }),
        this._tabMenu.setActiveTab(e.getId()))
    }
    ,
    UTPlayerHealthView.prototype.handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && i && (this.__tiles.scrollTop = 0,
        this._triggerActions(UTPlayerHealthView.Events.TAB_SELECTED, i),
        this._tabMenu.setActiveTab(i.id))
    }
    ,
    UTPlayerHealthView.prototype.handleLimitInput = function(e, t, i) {
        this.isInteractionEnabled() && (this.resetButton && this.resetButton.setInteractionState(!0),
        this._triggerActions(UTPlayerHealthView.Events.LIMIT_CHANGED, i))
    }
    ,
    UTPlayerHealthView.prototype.handleReset = function(e, t, i) {
        this.isInteractionEnabled() && (this.limitInput && this.limitInput.setValue(UTPlayerHealthStatEntity.DEFAULT_LIMIT),
        this.resetButton && this.resetButton.setInteractionState(!1),
        this._triggerActions(UTPlayerHealthView.Events.LIMIT_CHANGED, {
            value: UTPlayerHealthStatEntity.DEFAULT_LIMIT
        }))
    }
    ,
    UTPlayerHealthView.prototype.getConsoleNameBySku = function(e) {
        var t = services.Localization;
        switch (e) {
        case GameSku.XBO:
        case GameSku.PREV_XBO:
            return t.localize("platform.console.xboxOne");
        case GameSku.XBX:
        case GameSku.PREV_XBX:
            return t.localize("platform.console.xboxX");
        case GameSku.PS4:
        case GameSku.PREV_PS4:
            return t.localize("platform.console.ps4");
        case GameSku.PS5:
        case GameSku.PREV_PS5:
            return t.localize("platform.console.ps5");
        case GameSku.SWI:
        case GameSku.PREV_SWI:
            return t.localize("platform.console.switch");
        case GameSku.PC:
        case GameSku.PREV_PC:
        case GameSku.STEAM:
        case GameSku.PREV_STEAM:
            return t.localize("platform.pc")
        }
        return BLANK_STR
    }
    ,
    UTPlayerHealthView.TILE_CLASS = {
        SHARING_DISABLED: "sharing-disabled"
    },
    UTPlayerHealthView.Events = {
        ENABLE_PLAYER_HEALTH: "ENABLE_PLAYER_HEALTH",
        TAB_SELECTED: "TAB_SELECTED",
        LIMIT_CHANGED: "LIMIT_CHANGED"
    },
    UTPlayerHealthView
}(EATargetActionView));
UTPlayerHealthView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-view"),
        this._tabMenu = new EAFilterBarView,
        e.appendChild(this._tabMenu.getRootElement()),
        this.__tiles = document.createElement("div"),
        this.__tiles.classList.add("ut-player-health-view--tiles"),
        e.appendChild(this.__tiles),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tabMenu.destroy(),
    this.__tiles = null
}
,
UTPlayerHealthView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthViewModel = function(t) {
    function UTPlayerHealthViewModel() {
        var e = t.call(this) || this;
        return e.selectedCategory = "All",
        e
    }
    return __extends(UTPlayerHealthViewModel, t),
    UTPlayerHealthViewModel.prototype.setCurrentCategoryById = function(e) {
        this.selectedCategory = e
    }
    ,
    UTPlayerHealthViewModel.prototype.getCurrentCategory = function() {
        return this.selectedCategory
    }
    ,
    UTPlayerHealthViewModel.prototype.updatePlayerHealthStatLimit = function(e, t) {
        var i = services.PlayerHealth.updatePlayerHealthStatLimit(e, t);
        return this._trackRequest(i, !0),
        i
    }
    ,
    UTPlayerHealthViewModel
}(UTViewModel)
  , UTPlayerHealthViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPlayerHealthViewController() {
        var e = t.call(this) || this;
        return e.viewmodel = new UTPlayerHealthViewModel,
        e
    }
    return __extends(UTPlayerHealthViewController, t),
    UTPlayerHealthViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("more.playerHealth")
    }
    ,
    UTPlayerHealthViewController.prototype._getViewInstanceFromData = function() {
        return new UTPlayerHealthView
    }
    ,
    UTPlayerHealthViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        e.addTarget(this, this.onTabSelected, UTPlayerHealthView.Events.TAB_SELECTED),
        e.addTarget(this, this.onEnablePlayerHealth, UTPlayerHealthView.Events.ENABLE_PLAYER_HEALTH),
        services.PlayerHealth.isFeatureEnabled() ? (this.requestPlayerHealth(),
        e.addTarget(this, this.onLimitChanged, UTPlayerHealthView.Events.LIMIT_CHANGED)) : e.renderDisabled()
    }
    ,
    UTPlayerHealthViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.onTabSelected, UTPlayerHealthView.Events.TAB_SELECTED),
        e.removeTarget(this, this.onEnablePlayerHealth, UTPlayerHealthView.Events.ENABLE_PLAYER_HEALTH),
        e.removeTarget(this, this.onLimitChanged, UTPlayerHealthView.Events.LIMIT_CHANGED)
    }
    ,
    UTPlayerHealthViewController.prototype.setData = function() {
        this.getView().render(this.playerHealthEntity, this.viewmodel.getCurrentCategory())
    }
    ,
    UTPlayerHealthViewController.prototype.requestPlayerHealth = function() {
        var n = this;
        services.PlayerHealth.isFeatureEnabled() && services.PlayerHealth.readPlayerHealth().observe(this, function(e, t) {
            var i;
            if (e.unobserve(n),
            n.isViewDisplayed())
                if (t.success && t.data && t.data.playerHealth) {
                    var o = n.getView();
                    n.playerHealthEntity = t.data.playerHealth,
                    n.playerHealthEntity.enabled ? (o.initTabMenu(n.playerHealthEntity),
                    n.setData(),
                    n.triggerTelemetryPage()) : o.renderDisabled()
                } else
                    services.Notification.queue([services.Localization.localize("notification.playerHealth.loadFailed"), UINotificationType.NEGATIVE]),
                    null === (i = n.getNavigationController()) || void 0 === i || i.popViewController()
        })
    }
    ,
    UTPlayerHealthViewController.prototype.onTabSelected = function(e, t, i) {
        services.PlayerHealth.isFeatureEnabled() && i && (this.viewmodel.setCurrentCategoryById(i.id),
        this.setData())
    }
    ,
    UTPlayerHealthViewController.prototype.onEnablePlayerHealth = function(e, t, i) {
        var o = this;
        services.PlayerHealth.updatePlayerHealthOptin(!0).observe(this, function(e, t) {
            var i;
            e.unobserve(o),
            t.success ? (services.PIN.sendData(PINEventType.SETTINGS, {
                status: "accepted",
                type: PINSettingsEventType.ENABLE_PLAY_TIME
            }),
            o.requestPlayerHealth()) : (services.PIN.sendData(PINEventType.ERROR, {
                sid: services.Authentication.getUtasSession().id.toString(),
                errid: "server",
                type: services.PIN.getErrorType(t.status)
            }),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.toggleFailed"), UINotificationType.NEGATIVE]),
            null === (i = o.getNavigationController()) || void 0 === i || i.popViewController())
        }),
        getAppMain().getPlayerHealthController().startTimeTracking()
    }
    ,
    UTPlayerHealthViewController.prototype.onLimitChanged = function(e, t, i) {
        var o = this
          , n = this.viewmodel.getCurrentCategory()
          , r = Math.round(i.value);
        n && JSUtils.isNumber(r) && this.viewmodel.updatePlayerHealthStatLimit(n, r).observe(this, function(e, t) {
            e.unobserve(o),
            t.success ? (services.PIN.sendData(PINEventType.SETTINGS, {
                status: "update",
                type: PINSettingsEventType.PLAY_TIME_LIMIT
            }),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.limitUpdateSuccess"), UINotificationType.POSITIVE]),
            services.PlayerHealth.readPlayerHealth().observe(o, function(e, t) {
                e.unobserve(o),
                t.success && JSUtils.isObject(t.data) && t.data.playerHealth && (o.playerHealthEntity = t.data.playerHealth,
                o.setData())
            })) : (services.PIN.sendData(PINEventType.ERROR, {
                sid: services.Authentication.getUtasSession().id.toString(),
                errid: "server",
                type: services.PIN.getErrorType(t.status)
            }),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.limitUpdateFailed"), UINotificationType.NEGATIVE]))
        })
    }
    ,
    UTPlayerHealthViewController.prototype.triggerTelemetryPage = function() {
        var e = this.viewmodel.getCurrentCategory()
          , t = e ? "Player Health - " + services.Localization.localize("playerHealth.tileTitle." + e) : "Player Health Hub";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: t
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.OBJECTIVES, t)
    }
    ,
    UTPlayerHealthViewController
}(EAViewController))
  , UTAboutView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTAboutView() {
        return o.call(this) || this
    }
    return __extends(UTAboutView, o),
    UTAboutView.prototype.init = function() {
        o.prototype.init.call(this);
        var e = services.Localization;
        for (var t = "", i = 1; i <= 3; i++)
            t += e.localize("about.message3.part" + i + ".web") + " ";
        this.__gamename.innerHTML = e.localize("about.gamename.web", [APP_YEAR_SHORT.toString()]),
        this.__message1.innerHTML = e.localize("about.message1.web"),
        this.__message2.innerHTML = e.localize("about.message2"),
        this.__message3.innerHTML = t,
        this.__support.innerHTML = e.localize("about.support")
    }
    ,
    UTAboutView.prototype.setVersion = function(e, t) {
        var i = "v" + e;
        i += "." + t,
        this.__version.textContent = i
    }
    ,
    UTAboutView
}(EAView));
UTAboutView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-about"),
        this.__gamename = document.createElement("p"),
        e.appendChild(this.__gamename),
        this.__message1 = document.createElement("p"),
        e.appendChild(this.__message1),
        this.__message2 = document.createElement("p"),
        e.appendChild(this.__message2),
        this.__message3 = document.createElement("p"),
        e.appendChild(this.__message3),
        this.__version = document.createElement("p"),
        e.appendChild(this.__version),
        this.__support = document.createElement("p"),
        e.appendChild(this.__support),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAboutView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__gamename = null,
    this.__message1 = null,
    this.__message2 = null,
    this.__message3 = null,
    this.__version = null,
    this.__support = null
}
,
UTAboutView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAboutViewController = function(e) {
    function UTAboutViewController() {
        return e.call(this) || this
    }
    return __extends(UTAboutViewController, e),
    UTAboutViewController.prototype.init = function() {
        e.prototype.init.call(this),
        this.getView().setVersion(getAppVersion(), getAppMain().getConfigRepository().getConfigString(EAConfigurationRepository.KEY_CHANGELIST))
    }
    ,
    UTAboutViewController.prototype._getTelemetryId = function() {
        return "Settings - About"
    }
    ,
    UTAboutViewController.prototype._getViewInstanceFromData = function() {
        return new UTAboutView
    }
    ,
    UTAboutViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.about")
    }
    ,
    UTAboutViewController
}(EAViewController)
  , UTResetWarningsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTResetWarningsView() {
        return e.call(this) || this
    }
    return __extends(UTResetWarningsView, e),
    UTResetWarningsView.prototype.init = function() {
        var e = services.Localization;
        this._managerPresetWarningToggle.init(),
        this._managerPresetWarningToggle.addToggleCell(UTResetWarningsView.MANAGER_PRESET, e.localize("more.managerPresetWarningEnabled")),
        this._movingSbcStorageWarningToggle.init(),
        this._movingSbcStorageWarningToggle.addToggleCell(UTResetWarningsView.SBC_STORAGE, e.localize("more.movingSbcStorageWarningEnabled")),
        this._sbcSquadWarningToggle.init(),
        this._sbcSquadWarningToggle.addToggleCell(UTResetWarningsView.SBC_SQUAD, e.localize("more.sbcSquadWarningEnabled")),
        this._swapDuplicatesWarningToggle.init(),
        this._swapDuplicatesWarningToggle.addToggleCell(UTResetWarningsView.SWAP_DUPLICATES, e.localize("more.swapDuplicatesWarningEnabled"))
    }
    ,
    UTResetWarningsView.prototype.appendPersonaSelector = function(e) {
        this.addSubview(e, this.__personaSelectorContainer)
    }
    ,
    UTResetWarningsView.prototype.getSbcSquadWarningToggle = function() {
        return this._sbcSquadWarningToggle
    }
    ,
    UTResetWarningsView.prototype.getSwapDuplicatesWarningToggle = function() {
        return this._swapDuplicatesWarningToggle
    }
    ,
    UTResetWarningsView.prototype.getApplyManagerPresetWarningToggle = function() {
        return this._managerPresetWarningToggle
    }
    ,
    UTResetWarningsView.prototype.getMovingSbcStorageToggle = function() {
        return this._movingSbcStorageWarningToggle
    }
    ,
    UTResetWarningsView.Event = Object.freeze({
        SELECT_IMPRESSUM: "UTAppSettingsView.SELECT_IMPRESSUM"
    }),
    UTResetWarningsView.SBC_SQUAD = "sbcSquadWarningEnabled",
    UTResetWarningsView.SBC_STORAGE = "sbcStorageWarningEnabled",
    UTResetWarningsView.MANAGER_PRESET = "managerPresetWarningEnabled",
    UTResetWarningsView.SWAP_DUPLICATES = "swapDuplicatesWarningEnabled",
    UTResetWarningsView
}(EATargetActionView));
UTResetWarningsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-app-settings"),
        e.classList.add("ut-content-container");
        var t = document.createElement("div");
        t.classList.add("ut-content"),
        this.__personaSelectorContainer = document.createElement("div"),
        this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"),
        t.appendChild(this.__personaSelectorContainer);
        var i = document.createElement("div");
        i.classList.add("ut-app-settings-actions");
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._managerPresetWarningToggle = new UTToggleControlGroupView,
        o.appendChild(this._managerPresetWarningToggle.getRootElement()),
        this._movingSbcStorageWarningToggle = new UTToggleControlGroupView,
        o.appendChild(this._movingSbcStorageWarningToggle.getRootElement()),
        this._sbcSquadWarningToggle = new UTToggleControlGroupView,
        o.appendChild(this._sbcSquadWarningToggle.getRootElement()),
        this._swapDuplicatesWarningToggle = new UTToggleControlGroupView,
        o.appendChild(this._swapDuplicatesWarningToggle.getRootElement()),
        i.appendChild(o),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTResetWarningsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__personaSelectorContainer = null,
    this._managerPresetWarningToggle.destroy(),
    this._movingSbcStorageWarningToggle.destroy(),
    this._sbcSquadWarningToggle.destroy(),
    this._swapDuplicatesWarningToggle.destroy()
}
,
UTResetWarningsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTResetWarningsViewController = function(r) {
    function UTResetWarningsViewController() {
        var e = r.call(this) || this;
        return e.personaController = null,
        e
    }
    return __extends(UTResetWarningsViewController, r),
    UTResetWarningsViewController.prototype.init = function() {
        r.prototype.init.call(this);
        var e = this.getView()
          , t = services.Authentication.getUtasSession();
        (t.user ? t.user.getSelectedPersona() : null) && (this.personaController = new UTPersonaViewController,
        this.personaController.init(),
        this.addChildViewController(this.personaController),
        e.appendPersonaSelector(this.personaController.getView()))
    }
    ,
    UTResetWarningsViewController.prototype.dealloc = function() {
        r.prototype.dealloc.call(this),
        this.personaController && (this.personaController.dealloc(),
        this.personaController = null)
    }
    ,
    UTResetWarningsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("more.resetWarnings")
    }
    ,
    UTResetWarningsViewController.prototype._getViewInstanceFromData = function() {
        return new UTResetWarningsView
    }
    ,
    UTResetWarningsViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this);
        var e = this.getView();
        this.personaController && this.personaController.viewDidAppear(),
        e.layoutSubviews(),
        TelemetryManager.trackPage(TelemetryManager.Sections.HOME, "Reset Warnings");
        var t = "true" != services.UserSettings.getSessionItem(UserSettingsKey.DONT_SHOW_APPLY_PRESET_POPUP)
          , i = "true" != services.UserSettings.getSessionItem(UserSettingsKey.BULK_ACTION_STORE_UNTRADEABLES)
          , o = services.UserSettings.getSBCValidationSkip()
          , n = services.UserSettings.getSwapDuplicatesWarningSkip();
        e.getApplyManagerPresetWarningToggle().toggleById(UTResetWarningsView.MANAGER_PRESET, t),
        e.getApplyManagerPresetWarningToggle().addTarget(this, this.eManagerPresetWarning, EventType.CHANGE),
        e.getMovingSbcStorageToggle().toggleById(UTResetWarningsView.SBC_STORAGE, i),
        e.getMovingSbcStorageToggle().addTarget(this, this.eMovingSbcStorageWarning, EventType.CHANGE),
        e.getSbcSquadWarningToggle().toggleById(UTResetWarningsView.SBC_SQUAD, !o),
        e.getSbcSquadWarningToggle().addTarget(this, this.eSbcSquadWarning, EventType.CHANGE),
        e.getSwapDuplicatesWarningToggle().toggleById(UTResetWarningsView.SWAP_DUPLICATES, !n),
        e.getSwapDuplicatesWarningToggle().addTarget(this, this.eSwapDuplicatesWarning, EventType.CHANGE),
        e.getApplyManagerPresetWarningToggle().layoutSubviews(),
        e.getMovingSbcStorageToggle().layoutSubviews(),
        e.getSbcSquadWarningToggle().layoutSubviews(),
        e.getSwapDuplicatesWarningToggle().layoutSubviews()
    }
    ,
    UTResetWarningsViewController.prototype.viewWillDisappear = function() {
        r.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.getApplyManagerPresetWarningToggle().removeTarget(this, this.eManagerPresetWarning, EventType.CHANGE),
        e.getMovingSbcStorageToggle().removeTarget(this, this.eMovingSbcStorageWarning, EventType.CHANGE),
        e.getSbcSquadWarningToggle().removeTarget(this, this.eSbcSquadWarning, EventType.CHANGE),
        e.getSwapDuplicatesWarningToggle().removeTarget(this, this.eSwapDuplicatesWarning, EventType.CHANGE)
    }
    ,
    UTResetWarningsViewController.prototype.eManagerPresetWarning = function(e, t, i) {
        services.UserSettings.setSessionItem(UserSettingsKey.DONT_SHOW_APPLY_PRESET_POPUP, i.checked ? "false" : "true")
    }
    ,
    UTResetWarningsViewController.prototype.eMovingSbcStorageWarning = function(e, t, i) {
        services.UserSettings.setSessionItem(UserSettingsKey.BULK_ACTION_STORE_UNTRADEABLES, i.checked ? "false" : "true")
    }
    ,
    UTResetWarningsViewController.prototype.eSbcSquadWarning = function(e, t, i) {
        services.UserSettings.setSBCValidationSkip(!i.checked)
    }
    ,
    UTResetWarningsViewController.prototype.eSwapDuplicatesWarning = function(e, t, i) {
        services.UserSettings.setSwapDuplicatesWarningSkip(!i.checked)
    }
    ,
    UTResetWarningsViewController
}(EAViewController)
  , UTAppSettingsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTAppSettingsView() {
        return e.call(this) || this
    }
    return __extends(UTAppSettingsView, e),
    UTAppSettingsView.prototype.init = function() {
        var e = services.Localization;
        this._aboutButton.init(),
        this._impressumButton.init(),
        this._languageSelectBtn.init(),
        this._licenseAgreementButton.init(),
        this._logoutButton.init(),
        this._playerHealthButton.init(),
        this._privacyPolicyButton.init(),
        this._resetWarningsButton.init(),
        this._aboutButton.setText(e.localize("more.about")),
        this._impressumButton.setText(e.localize("more.impressum")),
        this._languageSelectBtn.setText(e.localize("navbar.label.selectLanguage")),
        this._licenseAgreementButton.setText(e.localize("more.license")),
        this._logoutButton.setText(e.localize("more.signout")),
        this._playerHealthButton.setText(e.localize("more.playerHealth")),
        this._privacyPolicyButton.setText(e.localize("more.privacy")),
        this._rateThisAppButton.setText(e.localize("navbar.label.ratethisapp")),
        this._openSettingsButton.setText(e.localize("more.settings.ios")),
        this._measurementDropdown.init(),
        this._resetWarningsButton.setText(e.localize("more.resetWarnings")),
        this._impressumButton.addTarget(this, this.onButtonTap, EventType.TAP),
        this._playerHealthSharingButton.init(),
        this._playerHealthSharingButton.addToggleCell(UTAppSettingsView.PLAYER_HEALTH_SLIDER, e.localize("more.playerHealthSharingEnabled")),
        this._openSettingsButton.setDisplay(!1),
        this._usageSharingToggle.init(),
        this._usageSharingToggle.addToggleCell(UTAppSettingsView.USAGE_SHARING_SLIDER, e.localize("more.usagesharing.enable")),
        DOMKit.toggleDisplayStyle(this._rateThisAppButton.getRootElement(), !1),
        DOMKit.toggleDisplayStyle(this._optionsPN.getRootElement(), !1)
    }
    ,
    UTAppSettingsView.prototype.appendPersonaSelector = function(e) {
        this.addSubview(e, this.__personaSelectorContainer)
    }
    ,
    UTAppSettingsView.prototype.getPNToggle = function() {
        return this._optionsPN
    }
    ,
    UTAppSettingsView.prototype.getPlayerHealthSharingToggle = function() {
        return this._playerHealthSharingButton
    }
    ,
    UTAppSettingsView.prototype.getLanguageSelectButton = function() {
        return this._languageSelectBtn
    }
    ,
    UTAppSettingsView.prototype.getRateAppButton = function() {
        return this._rateThisAppButton
    }
    ,
    UTAppSettingsView.prototype.getLogoutButton = function() {
        return this._logoutButton
    }
    ,
    UTAppSettingsView.prototype.getAboutButton = function() {
        return this._aboutButton
    }
    ,
    UTAppSettingsView.prototype.getLicenseAgreementButton = function() {
        return this._licenseAgreementButton
    }
    ,
    UTAppSettingsView.prototype.getPrivacyPolicyButton = function() {
        return this._privacyPolicyButton
    }
    ,
    UTAppSettingsView.prototype.getPlayerHealthButton = function() {
        return this._playerHealthButton
    }
    ,
    UTAppSettingsView.prototype.getUsageSharingToggle = function() {
        return this._usageSharingToggle
    }
    ,
    UTAppSettingsView.prototype.getOpenSettingsButton = function() {
        return this._openSettingsButton
    }
    ,
    UTAppSettingsView.prototype.getResetWarningsButton = function() {
        return this._resetWarningsButton
    }
    ,
    UTAppSettingsView.prototype.setImpressumButtonDisplay = function(e) {
        this._impressumButton.setDisplay(e)
    }
    ,
    UTAppSettingsView.prototype.getMeasurementOptions = function() {
        return this._measurementDropdown
    }
    ,
    UTAppSettingsView.prototype.setMeasurementOptions = function(e) {
        this._measurementDropdown.setOptions(e)
    }
    ,
    UTAppSettingsView.prototype.setMeasurementOption = function(e) {
        this._measurementDropdown.setDefaultIndexByValue(e, !0)
    }
    ,
    UTAppSettingsView.prototype.onButtonTap = function(e, t, i) {
        e === this._impressumButton && this._triggerActions(UTAppSettingsView.Event.SELECT_IMPRESSUM)
    }
    ,
    UTAppSettingsView.Event = Object.freeze({
        SELECT_IMPRESSUM: "UTAppSettingsView.SELECT_IMPRESSUM"
    }),
    UTAppSettingsView.PN_SLIDER = "pnEnabled",
    UTAppSettingsView.PLAYER_HEALTH_SLIDER = "playerHealthEnabled",
    UTAppSettingsView.USAGE_SHARING_SLIDER = "usageSharingEnabled",
    UTAppSettingsView
}(EATargetActionView));
UTAppSettingsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-app-settings"),
        e.classList.add("ut-content-container");
        var t = document.createElement("div");
        t.classList.add("ut-content"),
        this.__personaSelectorContainer = document.createElement("div"),
        this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"),
        t.appendChild(this.__personaSelectorContainer);
        var i = document.createElement("div");
        i.classList.add("ut-app-settings-actions"),
        this.__topGroup = document.createElement("div"),
        this.__topGroup.classList.add("ut-button-group"),
        this._languageSelectBtn = new UTGroupButtonControl,
        this._languageSelectBtn.getRootElement().classList.add("more"),
        this.__topGroup.appendChild(this._languageSelectBtn.getRootElement()),
        this._logoutButton = new UTGroupButtonControl,
        this.__topGroup.appendChild(this._logoutButton.getRootElement()),
        i.appendChild(this.__topGroup);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._optionsPN = new UTToggleControlGroupView,
        o.appendChild(this._optionsPN.getRootElement()),
        this._usageSharingToggle = new UTToggleControlGroupView,
        o.appendChild(this._usageSharingToggle.getRootElement()),
        this._openSettingsButton = new UTGroupButtonControl,
        this._openSettingsButton.getRootElement().classList.add("more"),
        o.appendChild(this._openSettingsButton.getRootElement()),
        this._playerHealthSharingButton = new UTToggleControlGroupView,
        o.appendChild(this._playerHealthSharingButton.getRootElement()),
        this._playerHealthButton = new UTGroupButtonControl,
        this._playerHealthButton.getRootElement().classList.add("more"),
        o.appendChild(this._playerHealthButton.getRootElement()),
        this._resetWarningsButton = new UTGroupButtonControl,
        this._resetWarningsButton.getRootElement().classList.add("more"),
        o.appendChild(this._resetWarningsButton.getRootElement()),
        i.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-button-group--measurement"),
        this._measurementDropdown = new UTDropDownControl,
        n.appendChild(this._measurementDropdown.getRootElement()),
        i.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-button-group"),
        this._aboutButton = new UTGroupButtonControl,
        this._aboutButton.getRootElement().classList.add("more"),
        r.appendChild(this._aboutButton.getRootElement()),
        this._rateThisAppButton = new UTGroupButtonControl,
        r.appendChild(this._rateThisAppButton.getRootElement()),
        this._impressumButton = new UTGroupButtonControl,
        r.appendChild(this._impressumButton.getRootElement()),
        this._licenseAgreementButton = new UTGroupButtonControl,
        r.appendChild(this._licenseAgreementButton.getRootElement()),
        this._privacyPolicyButton = new UTGroupButtonControl,
        r.appendChild(this._privacyPolicyButton.getRootElement()),
        i.appendChild(r),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAppSettingsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__personaSelectorContainer = null,
    this.__topGroup = null,
    this._languageSelectBtn.destroy(),
    this._logoutButton.destroy(),
    this._optionsPN.destroy(),
    this._usageSharingToggle.destroy(),
    this._openSettingsButton.destroy(),
    this._playerHealthSharingButton.destroy(),
    this._playerHealthButton.destroy(),
    this._resetWarningsButton.destroy(),
    this._measurementDropdown.destroy(),
    this._aboutButton.destroy(),
    this._rateThisAppButton.destroy(),
    this._impressumButton.destroy(),
    this._licenseAgreementButton.destroy(),
    this._privacyPolicyButton.destroy()
}
,
UTAppSettingsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAppSettingsViewController = function(r) {
    function UTAppSettingsViewController() {
        var e = r.call(this) || this;
        e.personaController = null,
        e.canOpenExternalLinks = !1,
        e.canOpenExternalLinks = !0
    }
    return __extends(UTAppSettingsViewController, r),
    UTAppSettingsViewController.prototype.init = function() {
        r.prototype.init.call(this);
        var e = this.getView()
          , t = services.Authentication.getUtasSession();
        (t.user ? t.user.getSelectedPersona() : null) && (this.personaController = new UTPersonaViewController,
        this.personaController.init(),
        this.addChildViewController(this.personaController),
        e.appendPersonaSelector(this.personaController.getView()))
    }
    ,
    UTAppSettingsViewController.prototype.dealloc = function() {
        r.prototype.dealloc.call(this),
        this.personaController && (this.personaController.dealloc(),
        this.personaController = null)
    }
    ,
    UTAppSettingsViewController.prototype._getViewInstanceFromData = function() {
        return new UTAppSettingsView
    }
    ,
    UTAppSettingsViewController.prototype._getTelemetryId = function() {
        return "Settings"
    }
    ,
    UTAppSettingsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("button.settings")
    }
    ,
    UTAppSettingsViewController.prototype.viewWillAppear = function() {
        r.prototype.viewDidAppear.call(this);
        var e = this.getView()
          , t = services.PlayerHealth.isFeatureEnabled();
        e.getPlayerHealthButton().setDisplay(t),
        e.getPlayerHealthSharingToggle().setDisplay(t)
    }
    ,
    UTAppSettingsViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this);
        var e = this.getView()
          , t = services.Localization.locale;
        e.addTarget(this, this.onInteraction, UTAppSettingsView.Event.SELECT_IMPRESSUM),
        e.getPNToggle().addTarget(this, this.ePN, EventType.CHANGE),
        e.getLanguageSelectButton().addTarget(this, this.eLanguageSelect, EventType.TAP),
        e.getRateAppButton().addTarget(this, this.eRateApp, EventType.TAP),
        e.getOpenSettingsButton().addTarget(this, this.eOpenSettings, EventType.TAP),
        e.getLogoutButton().addTarget(this, this.eLogout, EventType.TAP),
        e.getAboutButton().addTarget(this, this.eAbout, EventType.TAP),
        e.getLicenseAgreementButton().addTarget(this, this.eLicense, EventType.TAP),
        e.getPrivacyPolicyButton().addTarget(this, this.ePrivacy, EventType.TAP),
        e.getUsageSharingToggle().addTarget(this, this.eUsagePopup, EventType.CHANGE),
        e.setImpressumButtonDisplay(t.language === LanguageEnum.GERMAN);
        var i = services.Localization.locale.region === RegionEnum.USA ? MeasurementSystem.IMPERIAL : MeasurementSystem.METRIC
          , o = services.UserSettings.getMeasurementSystem(i);
        e.setMeasurementOptions(factories.DataProvider.getMeasurementSystemDP()),
        e.getMeasurementOptions().addTarget(this, this.eMeasurementOptionChanged, EventType.CHANGE),
        e.setInteractionState(!0),
        e.setMeasurementOption(o),
        services.PlayerHealth.isFeatureEnabled() && (e.getPlayerHealthButton().addTarget(this, this.ePlayerHealth, EventType.TAP),
        e.getPlayerHealthSharingToggle().addTarget(this, this._ePlayerHealthSharingPopup, EventType.CHANGE),
        this.requestPlayerHealth()),
        e.getResetWarningsButton().addTarget(this, this.eResetWarnings, EventType.TAP);
        var n = this.getNavigationController();
        n && n.setNavigationVisibility(!0, !0),
        this.personaController && this.personaController.viewDidAppear(),
        this.getView().getPlayerHealthSharingToggle().layoutSubviews(),
        this.getView().getUsageSharingToggle().layoutSubviews(),
        this.getView().layoutSubviews(),
        this.getView().getUsageSharingToggle().toggleSlider(UTAppSettingsView.USAGE_SHARING_SLIDER, services.UserSettings.getUsageSharingEnabled()),
        TelemetryManager.trackPage(TelemetryManager.Sections.HOME, "Settings")
    }
    ,
    UTAppSettingsViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.getPNToggle().removeTarget(this, this.ePN, EventType.CHANGE),
        e.getLanguageSelectButton().removeTarget(this, this.eLanguageSelect, EventType.TAP),
        e.getRateAppButton().removeTarget(this, this.eRateApp, EventType.TAP),
        e.getLogoutButton().removeTarget(this, this.eLogout, EventType.TAP),
        e.getAboutButton().removeTarget(this, this.eAbout, EventType.TAP),
        e.getLicenseAgreementButton().removeTarget(this, this.eLicense, EventType.TAP),
        e.getPrivacyPolicyButton().removeTarget(this, this.ePrivacy, EventType.TAP),
        e.getUsageSharingToggle().removeTarget(this, this.eUsagePopup, EventType.CHANGE),
        e.getMeasurementOptions().removeTarget(this, this.eMeasurementOptionChanged, EventType.CHANGE),
        e.getResetWarningsButton().removeTarget(this, this.eResetWarnings, EventType.TAP),
        services.PlayerHealth.isFeatureEnabled() && (e.getPlayerHealthButton().removeTarget(this, this.ePlayerHealth, EventType.TAP),
        e.getPlayerHealthSharingToggle().removeTarget(this, this._ePlayerHealthSharingPopup, EventType.CHANGE))
    }
    ,
    UTAppSettingsViewController.prototype.requestPlayerHealth = function() {
        var o = this;
        services.PlayerHealth.isFeatureEnabled() && services.PlayerHealth.readPlayerHealth().observe(this, function(e, t) {
            e.unobserve(o);
            var i = o.getView().getPlayerHealthSharingToggle();
            t.success && t.data && t.data.playerHealth ? (o.playerHealthEntity = t.data.playerHealth,
            i.toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, o.playerHealthEntity.enabled),
            i.setInteractionState(!0)) : (services.Notification.queue([services.Localization.localize("notification.playerHealth.loadFailed"), UINotificationType.NEGATIVE]),
            i.toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, !1),
            i.setInteractionState(!1))
        })
    }
    ,
    UTAppSettingsViewController.prototype.ePN = function(e, t, i) {
        var o = this;
        if (!isWeb() && !isChrome()) {
            var n = services.User.getUser();
            if (n) {
                window.plugins.cordovaNimble.registerPushNotifications(n.id.toString(), i.checked.toString(), function() {
                    getStorage().setItem(STORAGE_PN_STATUS_KEY, i.checked);
                    var e = i.checked ? services.Localization.localize("notification.pushNotifications.enabled") : services.Localization.localize("notification.pushNotifications.disabled");
                    services.Notification.queue([e, UINotificationType.NEUTRAL])
                }
                .bind(this), function() {
                    o.getView().getPNToggle().toggleSlider(UTAppSettingsView.PN_SLIDER, !i.checked),
                    services.Notification.queue([services.Localization.localize("notification.pushNotifications.toggleFailed"), UINotificationType.NEGATIVE])
                }
                .bind(this))
            }
        }
    }
    ,
    UTAppSettingsViewController.prototype.eLanguageSelect = function(e, t, i) {
        services.SBC.reset(),
        services.Messages.reset(),
        services.Objectives.reset();
        var o = this.getNavigationController();
        if (o) {
            var n = new UTLanguageSelectViewController;
            n.init(),
            n.setLanguageSelectCallback(function() {
                location.reload()
            }),
            o.pushViewController(n)
        }
    }
    ,
    UTAppSettingsViewController.prototype.eRateApp = function(e, t, i) {
        this.canOpenExternalLinks ? window.plugins.utilities.showStoreAppPage(getStoreId(), !0, function() {
            console.log("Rate this app success!")
        }
        .bind(this), function() {
            services.Notification.queue([services.Localization.localize("popup.error.rateapp.Unavailable"), UINotificationType.NEGATIVE])
        }
        .bind(this)) : console.log("Rate app not shown in Chrome")
    }
    ,
    UTAppSettingsViewController.prototype.eAbout = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = new UTAboutViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTAppSettingsViewController.prototype.eLicense = function(e, t, i) {
        services.URL.process(services.Localization.localize("link.terms_of_service_base.url"))
    }
    ,
    UTAppSettingsViewController.prototype.ePrivacy = function(e, t, i) {
        services.URL.process(services.Localization.localize("link.privacy_policy_base.url"))
    }
    ,
    UTAppSettingsViewController.prototype.eLogout = function(e, t, i) {
        utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.SIGN_OUT, {
            params: []
        }, function() {
            getAppMain().getLoginController().logout()
        }
        .bind(this))
    }
    ,
    UTAppSettingsViewController.prototype.ePlayerHealth = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = new UTPlayerHealthViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTAppSettingsViewController.prototype.eMeasurementOptionChanged = function(e, t, i) {
        services.UserSettings.setMeasurementSystem(i.value)
    }
    ,
    UTAppSettingsViewController.prototype.eResetWarnings = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = new UTResetWarningsViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTAppSettingsViewController.prototype.eUsagePopup = function(e, t, i) {
        var o = this
          , n = services.UserSettings.getUsageSharingEnabled()
          , r = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.CANCEL,
                negativeActionFlag: !0
            }, {
                labelEnum: n ? enums.UIDialogOptions.DISABLE : enums.UIDialogOptions.ENABLE
            }],
            message: n ? services.Localization.localize("more.usagesharing.disablebody") : services.Localization.localize("more.usagesharing.enablebody"),
            title: services.Localization.localize("more.usagesharing.title")
        });
        r.init(),
        r.onExit.observe(this, function(e, t) {
            e.unobserve(o),
            t === enums.UIDialogOptions.ENABLE || t === enums.UIDialogOptions.DISABLE ? o.onConfirmToggleUsageSharing() : o.getView().getUsageSharingToggle().toggleSlider(UTAppSettingsView.USAGE_SHARING_SLIDER, !i.checked)
        }),
        gPopupClickShield.setActivePopup(r)
    }
    ,
    UTAppSettingsViewController.prototype.eOpenSettings = function(e, t, i) {
        alert("Triggered open application OS settings")
    }
    ,
    UTAppSettingsViewController.prototype.onConfirmToggleUsageSharing = function() {
        var e = !services.UserSettings.getUsageSharingEnabled();
        services.UserSettings.setUsageSharingEnabled(e),
        e ? (services.PIN.sendData(PINEventType.BOOT_START, {
            status: "success",
            source: "opt_in_tel"
        }, !0),
        services.PIN.sendData(PINEventType.SETTINGS, {
            type: PINSettingsEventType.ENABLE_TELEMETRY,
            status: "accepted"
        }, !0)) : (services.PIN.sendData(PINEventType.BOOT_END, {
            custom: {
                utas_metrics: {
                    endpoints: services.Metrics.getRequestData(),
                    rpups: services.Metrics.getRequestsPerSecond(),
                    sdur: services.Metrics.getSessionDuration()
                }
            },
            end_reason: "opt_out_tel"
        }, !0),
        services.PIN.sendData(PINEventType.SETTINGS, {
            type: PINSettingsEventType.ENABLE_TELEMETRY,
            status: "declined"
        }, !0))
    }
    ,
    UTAppSettingsViewController.prototype._ePlayerHealthSharingPopup = function(e, t, i) {
        var o = this
          , n = i.checked
          , r = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.NO,
                negativeActionFlag: !0
            }, {
                labelEnum: enums.UIDialogOptions.YES
            }],
            message: n ? services.Localization.localize("playerHealth.sharingPopup.optin.description") : services.Localization.localize("playerHealth.sharingPopup.optout.description"),
            title: services.Localization.localize("playerHealth.sharingPopup.title")
        });
        r.init(),
        r.onExit.observe(this, function(e, t) {
            e.unobserve(o),
            t === enums.UIDialogOptions.YES ? o._updatePlayerHealthSharing(n) : o.getView().getPlayerHealthSharingToggle().toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, !n)
        }),
        gPopupClickShield.setActivePopup(r)
    }
    ,
    UTAppSettingsViewController.prototype._updatePlayerHealthSharing = function(o) {
        var n = this
          , r = getAppMain().getPlayerHealthController();
        o || (r.stopTimeTracking(),
        services.PlayerHealth.persistTimeSpent()),
        services.PlayerHealth.updatePlayerHealthOptin(o).observe(this, function(e, t) {
            if (e.unobserve(n),
            t.success) {
                var i = o ? services.Localization.localize("notification.playerHealth.enabled") : services.Localization.localize("notification.playerHealth.disabled");
                services.PIN.sendData(PINEventType.SETTINGS, {
                    status: o ? "accepted" : "declined",
                    type: PINSettingsEventType.ENABLE_PLAY_TIME
                }),
                o && r.startTimeTracking(),
                services.Notification.queue([i, UINotificationType.NEUTRAL])
            } else
                services.PIN.sendData(PINEventType.ERROR, {
                    sid: services.Authentication.getUtasSession().id.toString(),
                    errid: "server_error",
                    type: services.PIN.getErrorType(t.status)
                }),
                n.getView().getPlayerHealthSharingToggle().toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, !o),
                services.Notification.queue([services.Localization.localize("notification.playerHealth.toggleFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTAppSettingsViewController.prototype.onInteraction = function(e, t, i) {
        t === UTAppSettingsView.Event.SELECT_IMPRESSUM && services.URL.process("https://www.ea.com/de-de/legal/impressum")
    }
    ,
    UTAppSettingsViewController
}(EAViewController)
  , UTStepLinkView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTStepLinkView() {
        var e = t.call(this) || this;
        return e.state = "incomplete",
        e
    }
    return __extends(UTStepLinkView, t),
    UTStepLinkView.prototype.setValue = function(e) {
        this.__value.textContent = e
    }
    ,
    UTStepLinkView.prototype.setState = function(e) {
        this.state !== e && (this.removeClass("in-progress complete"),
        "in-progress" !== e && "complete" !== e || this.addClass(e),
        this.state = e)
    }
    ,
    UTStepLinkView
}(EAView));
UTStepLinkView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-step-link-view");
        var t = document.createElement("div");
        t.classList.add("ut-step-link-view--link-line"),
        e.appendChild(t),
        this.__value = document.createElement("span"),
        this.__value.classList.add("ut-step-link-view--link-value"),
        e.appendChild(this.__value),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStepLinkView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__value = null
}
,
UTStepLinkView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStepChainView = function(t) {
    function UTStepChainView() {
        var e = t.call(this) || this;
        return e.steps = [],
        e
    }
    return __extends(UTStepChainView, t),
    UTStepChainView.prototype.dealloc = function() {
        this._removeSteps(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTStepChainView.prototype._removeSteps = function() {
        this.steps.forEach(function(e) {
            e.dealloc()
        }),
        this.steps = []
    }
    ,
    UTStepChainView.prototype._generateStep = function(e) {
        var t = new UTStepLinkView;
        t.setValue(e),
        this.steps.push(t),
        this.addSubview(t)
    }
    ,
    UTStepChainView.prototype.setCurrentStep = function(o) {
        this.steps.forEach(function(e, t) {
            var i = t + 1;
            i < o ? e.setState("complete") : i === o ? e.setState("in-progress") : e.setState("incomplete")
        })
    }
    ,
    UTStepChainView.prototype.setNumSteps = function(e) {
        this._removeSteps();
        for (var t = 0; t++ < e; )
            this._generateStep(t.toString());
        this.layoutSubviews()
    }
    ,
    UTStepChainView
}(EAView);
UTStepChainView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-step-chain-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStepChainView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTStepChainView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingNavbarView = function(t) {
    function UTOnboardingNavbarView() {
        return t.call(this) || this
    }
    return __extends(UTOnboardingNavbarView, t),
    UTOnboardingNavbarView.prototype.init = function() {
        t.prototype.init.call(this)
    }
    ,
    UTOnboardingNavbarView.prototype.layoutSubviews = function() {
        var t = this
          , e = this.getRootElement();
        this.primaryButton && DOMKit.insertBefore(this.primaryButton.getRootElement(), e.firstChild),
        this.secondaryButton && DOMKit.insertBefore(this.secondaryButton.getRootElement(), this.__onboardingSteps),
        this._subviews.forEach(function(e) {
            e.view !== t.primaryButton && e.view !== t.secondaryButton && e.container.appendChild(e.view.getRootElement())
        }, this)
    }
    ,
    UTOnboardingNavbarView.prototype.setHeader = function(e) {
        t.prototype.setHeader.call(this, e),
        this.toggleClass("empty-title", JSUtils.isEmpty(e))
    }
    ,
    UTOnboardingNavbarView.prototype.setCurrentStep = function(e) {
        this._steps.setCurrentStep(e)
    }
    ,
    UTOnboardingNavbarView.prototype.createSteps = function(e) {
        this._steps.setNumSteps(e)
    }
    ,
    UTOnboardingNavbarView.prototype.showStepChain = function(e) {
        this.toggleClass("no-step-chain", !e)
    }
    ,
    UTOnboardingNavbarView
}(UTNavigationBarView);
UTOnboardingNavbarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-navigation-bar-view"),
        e.classList.add("OnboardingNavbar"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("title"),
        e.appendChild(this.__title),
        this.__onboardingSteps = document.createElement("div"),
        this.__onboardingSteps.classList.add("stepsContainer"),
        this._steps = new UTStepChainView,
        this.__onboardingSteps.appendChild(this._steps.getRootElement()),
        e.appendChild(this.__onboardingSteps),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingNavbarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__onboardingSteps = null,
    this._steps.destroy()
}
,
UTOnboardingNavbarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingToolbarView = function(e) {
    function UTOnboardingToolbarView() {
        return e.call(this) || this
    }
    return __extends(UTOnboardingToolbarView, e),
    UTOnboardingToolbarView.prototype.init = function() {
        e.prototype.init.call(this),
        this._settingsBtn.init(),
        this._settingsBtn.setText(services.Localization.localize("button.settings"))
    }
    ,
    UTOnboardingToolbarView.prototype.getSettingsButton = function() {
        return this._settingsBtn
    }
    ,
    UTOnboardingToolbarView
}(UTToolbarView);
UTOnboardingToolbarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("nav");
        e.classList.add("FUIToolbar"),
        e.classList.add("OnboardingToolbar"),
        this._settingsBtn = new UTToolbarButtonControl,
        this._settingsBtn.getRootElement().classList.add("settings-btn"),
        e.appendChild(this._settingsBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingToolbarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._settingsBtn.destroy()
}
,
UTOnboardingToolbarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
NamespaceManager.Register("controllers.navigation");
var OnboardingNavigationController = function(i) {
    function OnboardingNavigationController() {
        var e = i.call(this, new UTOnboardingNavbarView, new UTOnboardingToolbarView) || this;
        return e._viewmodel = null,
        e._squad = null,
        e._settingsButton = new UTNavigationButtonControl,
        e._switchBackWithSettings = !1,
        e
    }
    return __extends(OnboardingNavigationController, i),
    OnboardingNavigationController.prototype.addNavBarClass = function(e) {
        this.navigationBar.addClass(e)
    }
    ,
    OnboardingNavigationController.prototype.init = function() {
        if (!this.initialized) {
            var e = this.getRootController();
            this._viewmodel || (this._viewmodel = new UTOnboardingStateViewModel),
            this._squad && e instanceof StarterSquadOverviewViewController ? e.initWithSquad(this._squad) : this._squad && e instanceof StarterSquadLandscapeViewController ? e.initWithSquad(this._squad) : e instanceof UTOnboardingSummaryViewController && e.initWithViewmodel(this._viewmodel),
            i.prototype.init.call(this),
            this.toolbar.getSettingsButton().addTarget(this, this._eSettingsSelected, EventType.TAP),
            this._settingsButton.init(),
            this._settingsButton.addClass("settings-btn"),
            this._settingsButton.addTarget(this, this._eSettingsSelected, EventType.TAP),
            this.showSettings(!0),
            this.navigationBar.createSteps(4);
            var t = e instanceof UTWelcomeBackViewController || e instanceof UTOnboardingSummaryViewController;
            this.showStepChain(!t)
        }
    }
    ,
    OnboardingNavigationController.prototype.initWithViewmodel = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTOnboardingStateViewModel, "Expected a UTOnboardingStateViewModel instance."),
        this._viewmodel = e,
        this.init())
    }
    ,
    OnboardingNavigationController.prototype.dealloc = function() {
        this._settingsButton.dealloc(),
        this._viewmodel = null,
        this._squad = null,
        i.prototype.dealloc.call(this)
    }
    ,
    OnboardingNavigationController.prototype._getRootControllerInstance = function() {
        return this._viewmodel ? this._viewmodel.hasLoaner() ? this._viewmodel.hasHomeKit() && this._viewmodel.hasAwayKit() ? this._viewmodel.hasBadge() ? new UTOnboardingSummaryViewController : new UTOnboardingBadgeSelectViewController : new UTKitSelectOnboardingViewController : isPhone() ? new StarterSquadOverviewViewController : new StarterSquadLandscapeViewController : new UTWelcomeBackViewController
    }
    ,
    OnboardingNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this._settingsButton
    }
    ,
    OnboardingNavigationController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.setNavigationVisibility(!0),
        this.setToolbarVisibility(!isPhone())
    }
    ,
    OnboardingNavigationController.prototype.setSquad = function(e) {
        this._squad = e
    }
    ,
    OnboardingNavigationController.prototype.setCurrentStep = function(e) {
        this.navigationBar.setCurrentStep(e)
    }
    ,
    OnboardingNavigationController.prototype.showStepChain = function(e) {
        this.navigationBar.showStepChain(e);
        var t = this.navigationBar.getRootElement().clientHeight + "px"
          , i = this.getView().getContentContainer();
        null !== i && (i.style.top = t)
    }
    ,
    OnboardingNavigationController.prototype.showSettings = function(e) {
        this._switchBackWithSettings = !!e,
        this.getPrimaryNavigationItem().toggleClass("settings-btn", this._switchBackWithSettings)
    }
    ,
    OnboardingNavigationController.prototype.getOnboardingState = function() {
        return this._viewmodel
    }
    ,
    OnboardingNavigationController.prototype._gotoSettingsView = function() {
        var e = new UTAppSettingsViewController;
        e.init(),
        this.showSettings(!1),
        this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
        this.setToolbarVisibility(!1),
        this.pushViewController(e)
    }
    ,
    OnboardingNavigationController.prototype._eSettingsSelected = function(e, t, i) {
        this._gotoSettingsView()
    }
    ,
    OnboardingNavigationController.prototype._eBackButtonTapped = function(e, t, i) {
        this._switchBackWithSettings ? this._gotoSettingsView() : this.currentController instanceof UTAppSettingsViewController && this.showSettings(!0)
    }
    ,
    OnboardingNavigationController
}(UTNavigationController)
  , UTBootFlowNavigationController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTBootFlowNavigationController() {
        var e = null !== t && t.apply(this, arguments) || this;
        return e._settingsNavButton = new UTNavigationButtonControl,
        e._settingsToolbarButton = new UTToolbarButtonControl,
        e
    }
    return __extends(UTBootFlowNavigationController, t),
    UTBootFlowNavigationController.prototype.init = function() {
        this.initialized || (t.prototype.init.call(this),
        this._settingsNavButton.init(),
        this._settingsNavButton.addClass("settings-btn"),
        this._settingsNavButton.setInteractionState(!0),
        this._settingsNavButton.addTarget(this, this._eSettingsButtonSelected, EventType.TAP),
        this._settingsToolbarButton.init(),
        this._settingsToolbarButton.setText(services.Localization.localize("button.settings")),
        this._settingsToolbarButton.addClass("settings-btn"),
        this._settingsToolbarButton.setInteractionState(!0),
        this._settingsToolbarButton.addTarget(this, this._eSettingsButtonSelected, EventType.TAP),
        this.toolbar.addClass("ut-bootflow-toolbar"))
    }
    ,
    UTBootFlowNavigationController.prototype.dealloc = function() {
        this._settingsNavButton.dealloc(),
        this._settingsToolbarButton.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTBootFlowNavigationController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.setNavigationVisibility(isPhone()),
        this.setToolbarVisibility(!isPhone()),
        this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE)
    }
    ,
    UTBootFlowNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this._settingsNavButton
    }
    ,
    UTBootFlowNavigationController.prototype.getToolbarItems = function() {
        return [this._settingsToolbarButton]
    }
    ,
    UTBootFlowNavigationController.prototype.didPush = function(e) {
        t.prototype.didPush.call(this, e),
        this.getRootController() === e && this.setToolbarVisibility(!isPhone(), !0)
    }
    ,
    UTBootFlowNavigationController.prototype._eSettingsButtonSelected = function(e, t, i) {
        var o = new UTAppSettingsViewController;
        o.init(),
        this.pushViewController(o),
        this.setToolbarVisibility(!1, !0)
    }
    ,
    UTBootFlowNavigationController
}(UTNavigationController))
  , UTPlayerHealthLimitPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPlayerHealthLimitPopupView() {
        return t.call(this) || this
    }
    return __extends(UTPlayerHealthLimitPopupView, t),
    UTPlayerHealthLimitPopupView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._dismissBtn.init(),
        this._dismissBtn.addTarget(this, this.onDismissTapped, EventType.TAP),
        this._ignoreBtn.init(),
        this._ignoreBtn.addTarget(this, this.onIgnoreTapped, EventType.TAP),
        this._reviewBtn.init(),
        this._reviewBtn.addTarget(this, this.onReviewTapped, EventType.TAP),
        this.setTitle(e.localize("playerHealth.limitPopup.title")),
        this.setDismissButtonText(e.localize("playerHealth.limitPopup.dismiss")),
        this.setIgnoreButtonText(e.localize("playerHealth.limitPopup.ignoreLimit")),
        this.setReviewButtonText(e.localize("playerHealth.limitPopup.reviewLimit"))
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setContent = function(e) {
        this.__content.innerHTML = e
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setContentByType = function(e, t) {
        var i = services.Localization
          , o = document.createElement("span");
        switch (DOMKit.addClass(o, "ut-player-health-limit-popup-view--highlight-text"),
        e) {
        case PlayerHealthStatId.PACKS_OPENED:
            o.textContent = i.localize("playerHealth.limitPopup.packs.value", [t.toString()]),
            this.setContent(i.localize("playerHealth.limitPopup.packs.content", [o.outerHTML, APP_YEAR_SHORT.toString()]));
            break;
        case PlayerHealthStatId.POINTS_PURCHASED:
            o.textContent = i.localize("playerHealth.limitPopup.points.value", [t.toString()]),
            this.setContent(i.localize("playerHealth.limitPopup.points.content", [o.outerHTML, APP_YEAR_SHORT.toString()]))
        }
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setDismissButtonText = function(e) {
        this._dismissBtn.setText(e)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setIgnoreButtonText = function(e) {
        this._ignoreBtn.setText(e)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setReviewButtonText = function(e) {
        this._reviewBtn.setText(e)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.onDismissTapped = function(e, t, i) {
        this._triggerActions(UTPlayerHealthLimitPopupView.Events.DISMISS_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.onIgnoreTapped = function(e, t, i) {
        this._triggerActions(UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.onReviewTapped = function(e, t, i) {
        this._triggerActions(UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupView.Events = {
        DISMISS_TAPPED: "DISMISS_TAPPED",
        IGNORE_TAPPED: "IGNORE_TAPPED",
        REVIEW_TAPPED: "REVIEW_TAPPED"
    },
    UTPlayerHealthLimitPopupView
}(EATargetActionView));
UTPlayerHealthLimitPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-limit-popup-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__content = document.createElement("p"),
        i.appendChild(this.__content),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-st-button-group"),
        this._dismissBtn = new UTGroupButtonControl,
        o.appendChild(this._dismissBtn.getRootElement()),
        this._ignoreBtn = new UTGroupButtonControl,
        this._ignoreBtn.getRootElement().classList.add("negative"),
        o.appendChild(this._ignoreBtn.getRootElement()),
        e.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-button-group"),
        this._reviewBtn = new UTGroupButtonControl,
        n.appendChild(this._reviewBtn.getRootElement()),
        e.appendChild(n),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthLimitPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__content = null,
    this._dismissBtn.destroy(),
    this._ignoreBtn.destroy(),
    this._reviewBtn.destroy()
}
,
UTPlayerHealthLimitPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthLimitPopupViewController = function(t) {
    function UTPlayerHealthLimitPopupViewController() {
        return t.call(this) || this
    }
    return __extends(UTPlayerHealthLimitPopupViewController, t),
    UTPlayerHealthLimitPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTPlayerHealthLimitPopupView
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.eDismissTapped, UTPlayerHealthLimitPopupView.Events.DISMISS_TAPPED),
        e.addTarget(this, this.eIgnoreTapped, UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED),
        e.addTarget(this, this.eReviewTapped, UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.eDismissTapped, UTPlayerHealthLimitPopupView.Events.DISMISS_TAPPED),
        e.removeTarget(this, this.eIgnoreTapped, UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED),
        e.removeTarget(this, this.eReviewTapped, UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.eDismissTapped = function(e, t, i) {
        this.onExit.notify(t)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.eIgnoreTapped = function(e, t, i) {
        this.onExit.notify(t)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.eReviewTapped = function(e, t, i) {
        this.onExit.notify(t)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE && e.key !== KeyboardKey.ENTER || this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTPlayerHealthLimitPopupViewController
}(BasePopupViewController)
  , UTCurrencyNavigationBarView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTCurrencyNavigationBarView() {
        return t.call(this) || this
    }
    return __extends(UTCurrencyNavigationBarView, t),
    UTCurrencyNavigationBarView.prototype.setCurrency = function(e) {
        switch (e.type) {
        case GameCurrency.COINS:
            this.__currencyCoins.textContent = services.Localization.localizeNumber(e.amount);
            break;
        case GameCurrency.POINTS:
            this.__currencyPoints.textContent = services.Localization.localizeNumber(e.amount)
        }
    }
    ,
    UTCurrencyNavigationBarView.prototype.setCurrencies = function(e) {
        JSUtils.valToArray(e).forEach(this.setCurrency, this)
    }
    ,
    UTCurrencyNavigationBarView.prototype.displayCurrencies = function(e) {
        DOMKit.toggleDisplayStyle(this.__currencies, e)
    }
    ,
    UTCurrencyNavigationBarView.prototype.displayClubInfo = function(e) {
        DOMKit.toggleDisplayStyle(this.__clubInfo, e)
    }
    ,
    UTCurrencyNavigationBarView.prototype.toggleEntitlementDisplay = function(e) {
        this._entitlement.setDisplay(e)
    }
    ,
    UTCurrencyNavigationBarView.prototype.displayFounderBadge = function() {
        this._entitlement.src = "images/entitlements/fc_founder.png"
    }
    ,
    UTCurrencyNavigationBarView.prototype.displayClubOwnerBadge = function() {
        this._entitlement.src = "images/entitlements/fc_club_member.png"
    }
    ,
    UTCurrencyNavigationBarView.prototype.setClubInfo = function(e, t) {
        this.__clubInfoName.textContent = e,
        this.__clubInfoEst.textContent = services.Localization.localizeEstablishedDate(new Date(t * MS_PER_SECOND))
    }
    ,
    UTCurrencyNavigationBarView.prototype.setClubBadge = function(e) {
        var t = this._clubInfoBadge
          , i = enums.UIThemeVariation.DARK;
        t.addClass("iconActive"),
        t.onerror = function(e) {
            t.onerror = null,
            t.src = AssetLocationUtils.getBadgeImageUri(UTItemEntity.DEFAULT_ASSET_ID, i)
        }
        ,
        t.src = AssetLocationUtils.getBadgeImageUri(e, i)
    }
    ,
    UTCurrencyNavigationBarView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        e.target instanceof HTMLElement && this.__currencyPoints.contains(e.target) && this._triggerActions(EventType.TAP)
    }
    ,
    UTCurrencyNavigationBarView
}(UTNavigationBarView));
UTCurrencyNavigationBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-navigation-bar-view"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("title"),
        e.appendChild(this.__title),
        this.__currencies = document.createElement("div"),
        this.__currencies.classList.add("view-navbar-currency"),
        this.__currencyCoins = document.createElement("div"),
        this.__currencyCoins.classList.add("view-navbar-currency-coins"),
        this.__currencies.appendChild(this.__currencyCoins),
        this.__currencyPoints = document.createElement("div"),
        this.__currencyPoints.classList.add("view-navbar-currency-points"),
        this.__currencies.appendChild(this.__currencyPoints),
        e.appendChild(this.__currencies),
        this.__clubInfo = document.createElement("div"),
        this.__clubInfo.classList.add("view-navbar-clubinfo");
        var t = document.createElement("div");
        t.classList.add("view-navbar-clubinfo-data"),
        this.__clubInfoEst = document.createElement("span"),
        this.__clubInfoEst.classList.add("view-navbar-clubinfo-est"),
        t.appendChild(this.__clubInfoEst),
        this.__clubInfoName = document.createElement("span"),
        this.__clubInfoName.classList.add("view-navbar-clubinfo-name"),
        t.appendChild(this.__clubInfoName),
        this.__clubInfo.appendChild(t),
        this._clubInfoBadge = new EAImageView,
        this._clubInfoBadge.getRootElement().classList.add("view-navbar-clubinfo-badge"),
        this.__clubInfo.appendChild(this._clubInfoBadge.getRootElement()),
        this._entitlement = new EAImageView,
        this._entitlement.getRootElement().classList.add("view-navbar-clubinfo-entitlement"),
        this.__clubInfo.appendChild(this._entitlement.getRootElement()),
        e.appendChild(this.__clubInfo),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCurrencyNavigationBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__currencies = null,
    this.__currencyCoins = null,
    this.__currencyPoints = null,
    this.__clubInfo = null,
    this.__clubInfoEst = null,
    this.__clubInfoName = null,
    this._clubInfoBadge.destroy(),
    this._entitlement.destroy()
}
,
UTCurrencyNavigationBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var PointsPurchaseViewState, EAFirstPartyStoreController = function(i) {
    function EAFirstPartyStoreController(e) {
        var t = i.call(this) || this;
        return t.authCode = "",
        t.clientId = e.clientId,
        t.consumeEntitlementsRequest = null,
        t.handleMessageEventCallback = t.handleMessageEvent.bind(t),
        t.hostname = e.hostname,
        t.redirectUri = e.redirectUri,
        t.storeUri = e.storeUri,
        t.storeWindow = null,
        t.storeWindowCloseInterval = new EAIntervalController(5 * MS_PER_SECOND,t.onCheckHeartbeat.bind(t)),
        t.userSentToStore = !1,
        t
    }
    return __extends(EAFirstPartyStoreController, i),
    EAFirstPartyStoreController.prototype.dealloc = function() {
        this.storeWindow && this.closeStoreWindow(),
        this.consumeEntitlementsRequest && (this.consumeEntitlementsRequest.dealloc(),
        this.consumeEntitlementsRequest = null),
        this.delegate = null,
        this.storeWindowCloseInterval.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    Object.defineProperty(EAFirstPartyStoreController.prototype, "authenticationCode", {
        get: function() {
            return this.authCode
        },
        enumerable: !1,
        configurable: !0
    }),
    EAFirstPartyStoreController.prototype.startHeartbeatChecks = function() {
        this.storeWindow && !this.storeWindow.closed && this.storeWindowCloseInterval.start()
    }
    ,
    EAFirstPartyStoreController.prototype.stopHeartbeatChecks = function() {
        this.storeWindowCloseInterval.stop()
    }
    ,
    EAFirstPartyStoreController.prototype.closeStoreWindow = function() {
        var e;
        this.stopHeartbeatChecks(),
        null === (e = this.storeWindow) || void 0 === e || e.close(),
        this.storeWindow = null,
        window.removeEventListener("message", this.handleMessageEventCallback)
    }
    ,
    EAFirstPartyStoreController.prototype.updateUserWallet = function() {
        var i = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.User.requestCurrencies().observe(this, function(e, t) {
            e.unobserve(i),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            t.error && NetworkErrorManager.checkCriticalStatus(t.error.code) && NetworkErrorManager.handleStatus(t.error.code)
        })
    }
    ,
    EAFirstPartyStoreController.prototype.performEntitlementCheck = function(e, t) {
        var s = this;
        void 0 === t && (t = !1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.didEntitlementCheck = !0,
        this.consumeEntitlements(e, void 0).observe(this, function(e, t) {
            var i, o, n, r;
            if (e.unobserve(s),
            s.consumeEntitlementsRequest = null,
            t.success) {
                var a = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.entitlementAwarded) && void 0 !== o && o;
                a && s.updateUserWallet(),
                null === (n = s.delegate) || void 0 === n || n.onEntitlementConsume(a)
            } else
                t.status !== HttpStatusCode.SERVER_ERROR && t.error && NetworkErrorManager.checkCriticalStatus(t.error.code) ? NetworkErrorManager.handleStatus(t.error.code) : null === (r = s.delegate) || void 0 === r || r.handleStoreClientError({
                    id: "entitlement_fail"
                });
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    EAFirstPartyStoreController.prototype.performEntitlementPreCheck = function(e) {
        var l = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.consumeEntitlements(e, void 0).observe(this, function(e, t) {
            var i, o, n, r, a;
            if (e.unobserve(l),
            l.consumeEntitlementsRequest = null,
            t.success) {
                var s = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.entitlementAwarded) && void 0 !== o && o;
                s && l.updateUserWallet(),
                null === (n = l.delegate) || void 0 === n || n.onEntitlementPreCheck(s)
            } else
                services.MTX.setMTXEnabled(!1),
                t.status !== HttpStatusCode.SERVER_ERROR && t.error && NetworkErrorManager.checkCriticalStatus(t.error.code) ? NetworkErrorManager.handleStatus(t.error.code) : t.error ? null === (r = l.delegate) || void 0 === r || r.handleStoreClientError({
                    code: t.error.code,
                    id: "precheck_fail"
                }) : null === (a = l.delegate) || void 0 === a || a.handleStoreClientError({
                    id: "precheck_fail"
                });
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    EAFirstPartyStoreController.prototype.consumeEntitlements = function(e, t) {
        return DebugUtils.Assert(!JSUtils.isValid(this.consumeEntitlementsRequest), "Entitlement consumption requested while already in progress."),
        this.consumeEntitlementsRequest || (this.consumeEntitlementsRequest = services.MTX.consumeEntitlements(e, t)),
        this.consumeEntitlementsRequest
    }
    ,
    EAFirstPartyStoreController.prototype.isAuthenticated = function() {
        return 0 < this.authCode.length
    }
    ,
    EAFirstPartyStoreController.prototype.needsTransactionCheck = function() {
        return this.isAuthenticated() && this.userSentToStore && !this.didEntitlementCheck
    }
    ,
    EAFirstPartyStoreController.prototype.handleAuthSuccess = function(e) {
        this.authCode = e,
        window.focus(),
        this.closeStoreWindow(),
        this.performEntitlementPreCheck(e)
    }
    ,
    EAFirstPartyStoreController.prototype.handleAuthFailure = function(e) {
        var t;
        null === (t = this.delegate) || void 0 === t || t.handleStoreAuthError(e.id)
    }
    ,
    EAFirstPartyStoreController.prototype.handleUnknownError = function() {
        var e;
        null === (e = this.delegate) || void 0 === e || e.handleStoreClientError({
            id: "unknown"
        })
    }
    ,
    EAFirstPartyStoreController.prototype.handleMessageEvent = function(e) {
        var t = e.data.state;
        "auth_success" === t ? e.data.code ? this.handleAuthSuccess(e.data.code) : this.handleUnknownError() : "auth_fail" === t ? (DebugUtils.Assert(JSUtils.isValid(e.data.error), "Encountered an authentication error. Missing error object."),
        e.data.error ? this.handleAuthFailure(e.data.error) : this.handleUnknownError()) : "unknown" === t && this.handleUnknownError()
    }
    ,
    EAFirstPartyStoreController.prototype.onCheckHeartbeat = function() {
        var e, t;
        this.storeWindow ? this.storeWindow.closed && (null === (t = this.delegate) || void 0 === t || t.onStoreWindowClose(),
        this.stopHeartbeatChecks()) : (null === (e = this.delegate) || void 0 === e || e.handleStoreClientError({
            id: "window_desync"
        }),
        this.stopHeartbeatChecks())
    }
    ,
    EAFirstPartyStoreController
}(EAObject), MSStoreController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function MSStoreController(e) {
        return t.call(this, e) || this
    }
    return __extends(MSStoreController, t),
    MSStoreController.prototype.getAuthUri = function() {
        var e = HttpUtils.generateUrlParams({
            client_id: this.clientId,
            redirect_uri: encodeURIComponent(this.redirectUri),
            response_mode: "query",
            response_type: "code",
            scope: "Xboxlive.Signin"
        });
        return encodeURIComponent(this.hostname + "/consumers/oauth2/v2.0/authorize" + e)
    }
    ,
    MSStoreController.prototype.openStoreWindow = function() {
        if (this.storeWindow && this.closeStoreWindow(),
        this.isAuthenticated())
            this.userSentToStore = !0,
            this.storeWindow = window.open(this.storeUri, "_blank");
        else {
            var e = HttpUtils.generateUrlParams({
                auth_uri: this.getAuthUri()
            });
            this.storeWindow = window.open("msauth.html" + e, "_blank"),
            window.addEventListener("message", this.handleMessageEventCallback)
        }
        return this.storeWindow
    }
    ,
    MSStoreController
}(EAFirstPartyStoreController)), PSNStoreController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function PSNStoreController(e, t) {
        var i = o.call(this, e) || this;
        return i.authPath = e.authPath,
        i.loc = t,
        i
    }
    return __extends(PSNStoreController, o),
    PSNStoreController.prototype.getAuthUri = function() {
        var e = HttpUtils.generateUrlParams({
            service_entity: "urn:service-entity:psn",
            redirect_uri: encodeURIComponent(this.redirectUri),
            response_type: "code",
            client_id: this.clientId,
            scope: "psn:s2s openid"
        });
        return encodeURIComponent("" + this.hostname + this.authPath + e)
    }
    ,
    PSNStoreController.prototype.openStoreWindow = function() {
        if (this.storeWindow && this.closeStoreWindow(),
        this.isAuthenticated())
            this.userSentToStore = !0,
            this.storeWindow = window.open(this.storeUri, "_blank");
        else {
            var e = HttpUtils.generateUrlParams({
                auth_uri: this.getAuthUri()
            });
            this.storeWindow = window.open("psnauth.html" + e, "_blank"),
            window.addEventListener("message", this.handleMessageEventCallback)
        }
        return this.storeWindow
    }
    ,
    PSNStoreController
}(EAFirstPartyStoreController));
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e.CONNECT_TO_CONSOLE = "connect_to_console",
    e.ACCOUNT_MISMATCH = "account_mismatch",
    e.AUTH_NEEDED = "auth_needed",
    e.AUTH_IN_PROGRESS = "auth_in_progress",
    e.AUTH_FAIL = "auth_fail",
    e.PRECHECK_WALLET_UPDATE = "precheck_wallet_update",
    e.PRECHECK_FAIL = "precheck_fail",
    e.PROCEED_TO_STORE = "proceed_to_store",
    e.REGION_MISMATCH = "region_mismatch",
    e.STORE_IN_PROGRESS = "store_in_progress",
    e.STORE_CLOSED = "store_closed",
    e.WINDOW_CLOSED = "window_closed",
    e.UNKNOWN_ERROR = "unknown_error"
}(PointsPurchaseViewState = PointsPurchaseViewState || {});
var UTFifaPointsPurchaseView = function(i) {
    function UTFifaPointsPurchaseView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.platform = e.platform,
        t
    }
    return __extends(UTFifaPointsPurchaseView, i),
    UTFifaPointsPurchaseView.prototype.init = function() {
        i.prototype.init.call(this),
        this.__titleText.textContent = this.loc.localize("fpp.title"),
        this._btnFinish.init(),
        this._btnFinish.setText(this.loc.localize("fpp.button.finish")),
        this._btnFinish.addTarget(this, this.onFinishButtonSelected, EventType.TAP),
        this._btnCancel.init(),
        this._btnCancel.setText(this.loc.localize("fpp.button.cancel")),
        this._btnCancel.addTarget(this, this.onCancelButtonSelected, EventType.TAP),
        this._btnFirstPartyStore.init(),
        this._btnFirstPartyStore.setText(this.loc.localize(this.platform === GamePlatform.PSN ? "fpp.button.sonystore" : "fpp.button.msstore")),
        this._btnFirstPartyStore.addTarget(this, this.onStoreButtonSelected, EventType.TAP),
        this.setInteractionState(!0)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setInteractionState = function(e) {
        i.prototype.setInteractionState.call(this, e),
        this._btnCancel.setInteractionState(e),
        this._btnFinish.setInteractionState(e),
        this._btnFirstPartyStore.setInteractionState(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setPlatform = function(e) {
        e === GamePlatform.PSN ? this._firstPartyImage.src = "images/commerce/ea-to-psn.png" : e === GamePlatform.XBL && (this._firstPartyImage.src = "images/commerce/ea-to-xbl.png")
    }
    ,
    UTFifaPointsPurchaseView.prototype.setPersonaName = function(e) {
        this.__personaText.textContent = e
    }
    ,
    UTFifaPointsPurchaseView.prototype.setMessage = function(e) {
        this.__infoText.innerHTML = e
    }
    ,
    UTFifaPointsPurchaseView.prototype.setWarning = function(e) {
        this.__warningText.textContent = e,
        this.__warningText.style.display = 0 < e.length ? "block" : "none"
    }
    ,
    UTFifaPointsPurchaseView.prototype.setStoreButtonDisplay = function(e) {
        this._btnFirstPartyStore.setDisplay(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setFinishButtonDisplay = function(e) {
        this._btnFinish.setDisplay(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setCancelButtonDisplay = function(e) {
        this._btnCancel.setDisplay(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setFlowState = function(e) {
        var t = this.platform === GamePlatform.PSN ? "psn" : "xbl";
        this.setMessage(""),
        this.setWarning(""),
        this.setStoreButtonDisplay(!1),
        this.setFinishButtonDisplay(!1),
        this.setCancelButtonDisplay(!1),
        e === PointsPurchaseViewState.CONNECT_TO_CONSOLE ? (this.setMessage(this.loc.localize("fpp.message.psn.connecttoconsole")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.ACCOUNT_MISMATCH ? (this.setMessage(this.loc.localize("fpp.message." + t + ".accountmismatch")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.AUTH_NEEDED ? (this.setMessage(this.loc.localize("fpp.message." + t + ".authneeded")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.AUTH_IN_PROGRESS ? (this.setMessage(this.loc.localize("fpp.message." + t + ".authinprogress")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.AUTH_FAIL ? (this.setMessage(this.loc.localize("fpp.message." + t + ".authneeded")),
        this.setWarning(this.loc.localize("fpp.warning.authfailure")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.PRECHECK_WALLET_UPDATE ? (this.setMessage(this.loc.localize("fpp.message." + t + ".precheckclaimed")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.PRECHECK_FAIL ? (this.setMessage(this.loc.localize("fpp.message." + t + ".precheckfailed")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.PROCEED_TO_STORE ? (this.setMessage(this.loc.localize("fpp.message." + t + ".proceedtostore")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.REGION_MISMATCH ? (this.setMessage(this.loc.localize("fpp.message.psn.regionmismatch")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.STORE_IN_PROGRESS ? (this.setMessage(this.loc.localize("fpp.message." + t + ".storeinprogress")),
        this.setFinishButtonDisplay(!0)) : e === PointsPurchaseViewState.STORE_CLOSED ? (this.setMessage(this.loc.localize("fpp.message." + t + ".storeclosed")),
        this.setFinishButtonDisplay(!0)) : e === PointsPurchaseViewState.WINDOW_CLOSED ? (this.setMessage(this.loc.localize("fpp.message.windowdesync")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.UNKNOWN_ERROR && (this.setMessage(this.loc.localize("fpp.message.unknownerror")),
        this.setCancelButtonDisplay(!0))
    }
    ,
    UTFifaPointsPurchaseView.prototype.onFinishButtonSelected = function(e, t, i) {
        this._triggerActions(UTFifaPointsPurchaseView.Event.FINISH)
    }
    ,
    UTFifaPointsPurchaseView.prototype.onCancelButtonSelected = function(e, t, i) {
        this._triggerActions(UTFifaPointsPurchaseView.Event.CANCEL)
    }
    ,
    UTFifaPointsPurchaseView.prototype.onStoreButtonSelected = function(e, t, i) {
        this._triggerActions(UTFifaPointsPurchaseView.Event.STORE_OPEN)
    }
    ,
    UTFifaPointsPurchaseView.Event = Object.freeze({
        STORE_OPEN: "UTFifaPointsPurchaseView.STORE_OPEN",
        CANCEL: "UTFifaPointsPurchaseView.CANCEL",
        FINISH: "UTFifaPointsPurchaseView.FINISH"
    }),
    UTFifaPointsPurchaseView
}(EATargetActionView);
UTFifaPointsPurchaseView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-fifa-points-purchase-view");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__personaText = document.createElement("p"),
        i.appendChild(this.__personaText),
        this.__infoText = document.createElement("p"),
        i.appendChild(this.__infoText),
        this.__warningText = document.createElement("p"),
        this.__warningText.classList.add("warning-text"),
        i.appendChild(this.__warningText),
        this._firstPartyImage = new EAImageView,
        this._firstPartyImage.getRootElement().classList.add("ut-fifa-points-purchase-view--image"),
        i.appendChild(this._firstPartyImage.getRootElement()),
        this._btnFirstPartyStore = new UTStandardButtonControl,
        this._btnFirstPartyStore.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnFirstPartyStore.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnFinish = new UTGroupButtonControl,
        o.appendChild(this._btnFinish.getRootElement()),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        o.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTFifaPointsPurchaseView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this.__personaText = null,
    this.__infoText = null,
    this.__warningText = null,
    this._firstPartyImage.destroy(),
    this._btnFirstPartyStore.destroy(),
    this._btnFinish.destroy(),
    this._btnCancel.destroy()
}
,
UTFifaPointsPurchaseView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTFifaPointsPurchaseViewController = function(r) {
    function UTFifaPointsPurchaseViewController() {
        var e, t = r.call(this) || this, i = getAppMain().getConfigRepository(), o = services.Localization.locale, n = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona();
        return t.triggeredRecoveryAttempt = !1,
        t.storeWindowBroker = n ? t.generateFirstPartyStoreController(i, o, n) : null,
        t
    }
    return __extends(UTFifaPointsPurchaseViewController, r),
    UTFifaPointsPurchaseViewController.prototype.dealloc = function() {
        this.storeWindowBroker && (this.storeWindowBroker.dealloc(),
        this.storeWindowBroker = null),
        r.prototype.dealloc.call(this)
    }
    ,
    UTFifaPointsPurchaseViewController.prototype._getViewInstanceFromData = function() {
        var e, t, i = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona(), o = null !== (t = null == i ? void 0 : i.platform) && void 0 !== t ? t : GamePlatform.NONE;
        return new UTFifaPointsPurchaseView({
            localization: services.Localization,
            platform: o
        })
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.viewDidAppear = function() {
        var e, t;
        r.prototype.viewDidAppear.call(this);
        services.Localization;
        var i = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona()
          , o = this.getView();
        i ? (o.setPersonaName(i.name),
        o.setPlatform(i.platform),
        o.setFlowState(PointsPurchaseViewState.AUTH_NEEDED)) : o.setFlowState(PointsPurchaseViewState.UNKNOWN_ERROR),
        o.addTarget(this, this.onFinish, UTFifaPointsPurchaseView.Event.FINISH),
        o.addTarget(this, this.onCancel, UTFifaPointsPurchaseView.Event.CANCEL),
        o.addTarget(this, this.onStoreOpen, UTFifaPointsPurchaseView.Event.STORE_OPEN),
        null === (t = this.storeWindowBroker) || void 0 === t || t.startHeartbeatChecks()
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.viewWillDisappear = function() {
        var e, t;
        r.prototype.viewWillDisappear.call(this);
        var i = this.getView();
        if (i.removeTarget(this, this.onFinish, UTFifaPointsPurchaseView.Event.FINISH),
        i.removeTarget(this, this.onCancel, UTFifaPointsPurchaseView.Event.CANCEL),
        i.removeTarget(this, this.onStoreOpen, UTFifaPointsPurchaseView.Event.STORE_OPEN),
        null === (e = this.storeWindowBroker) || void 0 === e || e.stopHeartbeatChecks(),
        null === (t = this.storeWindowBroker) || void 0 === t ? void 0 : t.needsTransactionCheck()) {
            var o = this.storeWindowBroker.authenticationCode;
            this.storeWindowBroker.performEntitlementCheck(o)
        }
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.generateSonyStoreController = function(e, t, i) {
        void 0 === i && (i = !1);
        var o = t.toBCPString().toLowerCase()
          , n = e.getConfigString(EAConfigurationRepository.KEY_PSN_OAUTH_HOST)
          , r = e.getConfigString(EAConfigurationRepository.KEY_PSN_OAUTH_PATH)
          , a = e.getConfigString(i ? EAConfigurationRepository.KEY_PSN_G5_CLIENTID : EAConfigurationRepository.KEY_PSN_G4_CLIENTID)
          , s = e.getConfigString(EAConfigurationRepository.KEY_PSN_REDIRECT_URI)
          , l = e.getConfigString(EAConfigurationRepository.KEY_PSN_STORE_HOST)
          , c = e.getConfigString(i ? EAConfigurationRepository.KEY_PSN_G5_PRODUCTID : EAConfigurationRepository.KEY_PSN_G4_PRODUCTID)
          , d = new PSNStoreController({
            authPath: r,
            clientId: a,
            hostname: n,
            redirectUri: s,
            storeUri: l + "/" + o + "/category/" + c
        },services.Localization);
        return d.delegate = this,
        d
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.generateMicrosoftStoreController = function(e, t) {
        var i, o = e.getConfigString(EAConfigurationRepository.KEY_MS_CLIENTID), n = e.getConfigString(EAConfigurationRepository.KEY_MS_OAUTH_HOST), r = e.getConfigString(EAConfigurationRepository.KEY_MS_REDIRECT_URI), a = e.getConfigString(EAConfigurationRepository.KEY_MS_STORE_HOST), s = e.getConfigObject(EAConfigurationRepository.KEY_MS_STORE_ENDPOINTS), l = s && null !== (i = s[t]) && void 0 !== i ? i : "", c = new MSStoreController({
            clientId: o,
            hostname: n,
            redirectUri: r,
            storeUri: "" + a + l
        });
        return c.delegate = this,
        c
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.generateFirstPartyStoreController = function(e, t, i) {
        return i.isPlaystation ? this.generateSonyStoreController(e, t, i.isG5) : i.isXbox ? this.generateMicrosoftStoreController(e, i.sku) : null
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onFinish = function(e, t, i) {
        var o, n, r;
        if (null === (o = this.storeWindowBroker) || void 0 === o || o.closeStoreWindow(),
        null === (n = this.storeWindowBroker) || void 0 === n ? void 0 : n.needsTransactionCheck()) {
            var a = this.storeWindowBroker.authenticationCode;
            this.storeWindowBroker.performEntitlementCheck(a)
        } else {
            var s = this.getParentViewController();
            this === (null == s ? void 0 : s.getPresentedViewController()) && (null === (r = this.getParentViewController()) || void 0 === r || r.dismissViewController())
        }
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onCancel = function(e, t, i) {
        var o, n, r = this.getParentViewController();
        null === (o = this.storeWindowBroker) || void 0 === o || o.closeStoreWindow(),
        this === (null == r ? void 0 : r.getPresentedViewController()) && (null === (n = this.getParentViewController()) || void 0 === n || n.dismissViewController())
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onStoreOpen = function(e, t, i) {
        var o, n, r;
        this.getView().setFlowState((null === (o = this.storeWindowBroker) || void 0 === o ? void 0 : o.isAuthenticated()) ? PointsPurchaseViewState.STORE_IN_PROGRESS : PointsPurchaseViewState.AUTH_IN_PROGRESS),
        null === (n = this.storeWindowBroker) || void 0 === n || n.openStoreWindow(),
        null === (r = this.storeWindowBroker) || void 0 === r || r.startHeartbeatChecks()
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.handleStoreAuthError = function(e) {
        this.getView().setFlowState(PointsPurchaseViewState.AUTH_FAIL)
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.handleStoreClientError = function(e) {
        var t, i, o, n = this, r = this.getView();
        if ("entitlement_fail" === e.id)
            if (this.storeWindowBroker && !this.triggeredRecoveryAttempt && services.MTX.isEntitlementRecoveryEnabled()) {
                var a = this.storeWindowBroker.authenticationCode;
                this.triggeredRecoveryAttempt = !0,
                window.setTimeout(function() {
                    var e;
                    return null === (e = n.storeWindowBroker) || void 0 === e ? void 0 : e.performEntitlementCheck(a, !0)
                }, services.MTX.getEntitlementRecoveryDelay())
            } else {
                var s = this.getParentViewController();
                this === (null == s ? void 0 : s.getPresentedViewController()) && s.dismissViewController(),
                services.Notification.queue([services.Localization.localize("fpp.notification.cannotgetpoints"), UINotificationType.NEGATIVE])
            }
        else
            "precheck_fail" === e.id ? (null === (t = this.storeWindowBroker) || void 0 === t || t.closeStoreWindow(),
            e.code === UtasErrorCode.NO_TITLE_ID ? r.setFlowState(PointsPurchaseViewState.CONNECT_TO_CONSOLE) : e.code === UtasErrorCode.ACCOUNT_MISMATCH ? r.setFlowState(PointsPurchaseViewState.ACCOUNT_MISMATCH) : e.code === UtasErrorCode.REGION_MISMATCH ? r.setFlowState(PointsPurchaseViewState.REGION_MISMATCH) : r.setFlowState(PointsPurchaseViewState.PRECHECK_FAIL)) : "unknown" === e.id ? (null === (i = this.storeWindowBroker) || void 0 === i || i.closeStoreWindow(),
            r.setFlowState(PointsPurchaseViewState.UNKNOWN_ERROR)) : "window_desync" === e.id && (null === (o = this.storeWindowBroker) || void 0 === o || o.closeStoreWindow(),
            r.setFlowState(PointsPurchaseViewState.WINDOW_CLOSED))
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onEntitlementPreCheck = function(e) {
        this.getView().setFlowState(e ? PointsPurchaseViewState.PRECHECK_WALLET_UPDATE : PointsPurchaseViewState.PROCEED_TO_STORE)
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onEntitlementConsume = function(e) {
        var t = this.getParentViewController();
        this === (null == t ? void 0 : t.getPresentedViewController()) && t.dismissViewController(),
        e && services.Notification.queue([services.Localization.localize("fpp.notification.pointsadded"), UINotificationType.POSITIVE])
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onStoreWindowClose = function() {
        var e;
        this.getView().setFlowState((null === (e = this.storeWindowBroker) || void 0 === e ? void 0 : e.needsTransactionCheck()) ? PointsPurchaseViewState.STORE_CLOSED : PointsPurchaseViewState.WINDOW_CLOSED)
    }
    ,
    UTFifaPointsPurchaseViewController
}(EAViewController)
  , UTGameFlowNavigationController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTGameFlowNavigationController(e, t) {
        var i = r.call(this, e || new UTCurrencyNavigationBarView, t) || this;
        return i._itemInfoStateViewModel = new UTItemInfoStateViewModel(services.UserSettings),
        i._itemInfoSwitchButton = new UTItemInfoChangeButtonControl,
        i._settingsNavButton = new UTNavigationButtonControl,
        i
    }
    return __extends(UTGameFlowNavigationController, r),
    UTGameFlowNavigationController.prototype.init = function() {
        this.initialized || (r.prototype.init.call(this),
        this._itemInfoSwitchButton.init(),
        this._itemInfoSwitchButton.setInteractionState(!0),
        this._itemInfoSwitchButton.addTarget(this, this._eItemInfoSwitchButtonSelected, EventType.TAP),
        this._settingsNavButton.init(),
        this._settingsNavButton.addClass("settings-btn"),
        this._settingsNavButton.setInteractionState(!0),
        this._settingsNavButton.addTarget(this, this._eSettingsButtonSelected, EventType.TAP),
        this.navigationBar instanceof UTCurrencyNavigationBarView && (this.navigationBar.displayCurrencies(!1),
        this.navigationBar.displayClubInfo(!1)))
    }
    ,
    UTGameFlowNavigationController.prototype.dealloc = function() {
        this._settingsNavButton.dealloc(),
        r.prototype.dealloc.call(this)
    }
    ,
    UTGameFlowNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this._settingsNavButton
    }
    ,
    UTGameFlowNavigationController.prototype.getSecondaryNavigationItem = function() {
        if (this.currentController) {
            var e = this.currentController.getNavigationItem();
            if (JSUtils.isValid(e))
                return e
        }
        return this._itemInfoSwitchButton
    }
    ,
    UTGameFlowNavigationController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this),
        this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
        this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.getState());
        var e = getDefaultDispatcher()
          , t = services.User.getUser();
        if (e.addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nItemStateChanged),
        t && this.navigationBar instanceof UTCurrencyNavigationBarView) {
            var i = t.getSelectedPersona()
              , o = null == i ? void 0 : i.getCurrentClub();
            this.navigationBar.setCurrencies(t.getCurrencies()),
            this.navigationBar.displayCurrencies(!0),
            o && this.setClubInfo(o.name, o.established, o.assetId),
            (null == i ? void 0 : i.isFounder) ? this.navigationBar.displayFounderBadge() : (null == i ? void 0 : i.isClubOwner) ? this.navigationBar.displayClubOwnerBadge() : this.navigationBar.toggleEntitlementDisplay(!1);
            var n = this._hasCommerceAccess();
            this.navigationBar.toggleClass("currency-purchase", n),
            n && (this.navigationBar.addTarget(this, this._eNavigationBarTapped, EventType.TAP),
            (null == i ? void 0 : i.isPC) && utils.OriginStore.onCheckout.observe(this, this._eOriginCheckout)),
            e.addObserver(AppNotification.ITEM_ACTIVATE, this, this._nItemActivated),
            e.addObserver(AppNotification.USER_CURRENCY_UPDATE, this, this._nCurrencyUpdated)
        }
    }
    ,
    UTGameFlowNavigationController.prototype.viewWillDisappear = function() {
        r.prototype.viewWillDisappear.call(this),
        utils.OriginStore.onCheckout.unobserve(this),
        this.navigationBar.removeTarget(this, this._eNavigationBarTapped, EventType.TAP);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_RESUME, this),
        e.removeObserver(AppNotification.ITEM_ACTIVATE, this),
        e.removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
        e.removeObserver(AppNotification.USER_CURRENCY_UPDATE, this)
    }
    ,
    UTGameFlowNavigationController.prototype.didPush = function(e) {
        this.tabBarItem && this.tabBarItem.togglePopToRootDisplayStyle(1 <= this.childViewControllers.length && this.currentController !== this.rootController),
        r.prototype.didPush.call(this, e)
    }
    ,
    UTGameFlowNavigationController.prototype.toggleFUTLogo = function(e) {
        this.navigationBar.toggleClass("has-fut-logo", e)
    }
    ,
    UTGameFlowNavigationController.prototype.setClubInfo = function(e, t, i) {
        this.navigationBar instanceof UTCurrencyNavigationBarView && (this.navigationBar.setClubInfo(e, t),
        this.navigationBar.setClubBadge(null != i ? i : 0),
        this.navigationBar.displayClubInfo(!0))
    }
    ,
    UTGameFlowNavigationController.prototype._hasCommerceAccess = function() {
        var e = services.User.getUser()
          , t = null == e ? void 0 : e.getSelectedPersona();
        return !!t && (t.isPC || t.isPlaystation || t.isXbox) && getAppMain().getConfigRepository().getConfigArray(EAConfigurationRepository.KEY_BANNED_COUNTRIES).indexOf(null == e ? void 0 : e.country) < 0 && !!t && services.MTX.isMTXEnabled() && (t.isPlaystation || t.isXbox || t.isPC && utils.OriginStore.storeLoaded)
    }
    ,
    UTGameFlowNavigationController.prototype._eSettingsButtonSelected = function(e, t, i) {
        var o = new UTAppSettingsViewController;
        o.init(),
        this.pushViewController(o)
    }
    ,
    UTGameFlowNavigationController.prototype._eItemInfoSwitchButtonSelected = function(e, t, i) {
        this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.nextState())
    }
    ,
    UTGameFlowNavigationController.prototype._eNavigationBarTapped = function(e, t, i) {
        function Hga() {
            var e, t = services.User.getUser(), i = null !== (e = null == t ? void 0 : t.getSelectedPersona()) && void 0 !== e ? e : null, o = services.Localization;
            if (DebugUtils.Assert(JSUtils.isValid(t), "Missing user entity when launching FIFA points purchase flow"),
            t && t.hasTradeAccess()) {
                if (null == i ? void 0 : i.isPC)
                    utils.OriginStore.openStore();
                else if ((null == i ? void 0 : i.isPlaystation) || (null == i ? void 0 : i.isXbox)) {
                    var n = new UTFifaPointsPurchaseViewController;
                    n.modalDisplayStyle = "form",
                    n.modalCanDismissFromShield = !1,
                    a.presentViewController(n)
                }
            } else {
                var r = new EADialogViewController({
                    dialogOptions: [{
                        labelEnum: enums.UIDialogOptions.OK
                    }],
                    message: o.localize("popup.error.body.needtradeaccesstobuypoints"),
                    title: o.localize("popup.error.title.needtradeaccesstobuypoints")
                });
                r.init(),
                r.modalDisplayDimensions.width = "380px",
                r.modalCanDismissFromShield = !1,
                gPopupClickShield.setActivePopup(r)
            }
        }
        function Iga(e, t) {
            if (e.unobserve(a),
            t === UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
                Hga(),
                services.PlayerHealth.storeLimitIgnoredTimestamp(PlayerHealthStatId.POINTS_PURCHASED);
            else if (t === UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED) {
                var i = new UTPlayerHealthViewController;
                i.init(),
                a.pushViewController(i, !0)
            }
        }
        function Jga(e, t) {
            if (e.unobserve(a),
            t.success && JSUtils.isObject(t.data) && t.data.playerHealth) {
                var i = t.data.playerHealth
                  , o = i.getStatById(PlayerHealthStatId.POINTS_PURCHASED);
                if (i.enabled && o && o.isLimitReached()) {
                    var n = new UTPlayerHealthLimitPopupViewController
                      , r = n.getView();
                    n.init(),
                    n.onExit.observe(a, Iga),
                    r.setContentByType(o.id, o.limit),
                    gPopupClickShield.setActivePopup(n)
                } else
                    Hga()
            } else
                Hga()
        }
        var a = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Configuration.requestSettingsData().observe(this, function(e, t) {
            e.unobserve(a);
            var i = a._hasCommerceAccess();
            a.navigationBar.toggleClass("currency-purchase", i),
            i && (services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.POINTS_PURCHASED) ? services.PlayerHealth.readPlayerHealth().observe(a, Jga) : Hga()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTGameFlowNavigationController.prototype._eOriginCheckout = function(e, t) {
        var i, o, n = services.User.getUser();
        (null === (o = null === (i = services.User.getUser()) || void 0 === i ? void 0 : i.getSelectedPersona()) || void 0 === o ? void 0 : o.isPC) ? services.MTX.consumeEntitlements().observe(this, function _onMTXCheck(e, t) {
            e.unobserve(this);
            var i = t.success;
            n && (n.hasUnrecoveredFIFAPointsTransaction = !i),
            i ? services.User.requestCurrencies() : services.Notification.queue([services.Localization.localize("popup.error.mobile.invalidTransactionState"), UINotificationType.NEGATIVE])
        }) : services.User.requestCurrencies()
    }
    ,
    UTGameFlowNavigationController.prototype._nItemActivated = function(e, t, i) {
        var o, n = services.User.getUser();
        if (n && this.navigationBar instanceof UTCurrencyNavigationBarView) {
            var r = null === (o = null == n ? void 0 : n.getSelectedPersona()) || void 0 === o ? void 0 : o.getCurrentClub();
            r && this.navigationBar.setClubBadge(r.assetId)
        }
    }
    ,
    UTGameFlowNavigationController.prototype._nCurrencyUpdated = function(e, t, i) {
        this.navigationBar instanceof UTCurrencyNavigationBarView && (this.navigationBar.setCurrency(i.currency),
        this.navigationBar.displayCurrencies(!0))
    }
    ,
    UTGameFlowNavigationController.prototype._nItemStateChanged = function(e, t, i) {
        t !== this._itemInfoStateViewModel && this._itemInfoSwitchButton.setCurrentState(i.state)
    }
    ,
    UTGameFlowNavigationController
}(UTNavigationController))
  , UTSBCRewardTableCellView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCRewardTableCellView() {
        return t.call(this) || this
    }
    return __extends(UTSBCRewardTableCellView, t),
    UTSBCRewardTableCellView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTSBCRewardTableCellView.prototype.setReward = function(e) {
        if (e.item) {
            var t = factories.ItemView.createSmallItem(e.item);
            t.init(),
            t.supportSecondaryViews = !1,
            t.render(e.item),
            this.addSubview(t, this.__reward),
            this.layoutSubviews()
        } else if (e.isPack) {
            var i = new UTPackGraphicView;
            i.init(),
            i.setPackBackground(e.assetId),
            i.setPromo(PurchaseDealType.REGULAR),
            this.__reward.appendChild(i.getRootElement())
        } else
            e.isCoin ? (this.setValue(e.value),
            DOMKit.addClass(this.__reward, GameRewardStyle.COIN)) : e.isXP && (this.setValue(e.value),
            DOMKit.addClass(this.__reward, GameRewardStyle.XP));
        this.setLabel(e)
    }
    ,
    UTSBCRewardTableCellView.prototype.setValue = function(e) {
        this.__value.textContent = services.Localization.localizeNumber(e) + " "
    }
    ,
    UTSBCRewardTableCellView.prototype.toggleActive = function(e) {
        this.toggleClass("active", e)
    }
    ,
    UTSBCRewardTableCellView.prototype.setLabel = function(e) {
        var t = UTLocalizationUtil.buildRewardString(e, services.Localization);
        this.__label.textContent = t
    }
    ,
    UTSBCRewardTableCellView.prototype.enableTapCallback = function() {
        DOMKit.addClass(this.__rowContent, "has-tap-callback"),
        DOMKit.addClass(this.getRootElement(), "has-tap-callback")
    }
    ,
    UTSBCRewardTableCellView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTSBCRewardTableCellView
}(EATargetActionView));
UTSBCRewardTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("li");
        e.classList.add("ut-sbc-reward-table-cell-view");
        var t = document.createElement("div");
        t.classList.add("image-container"),
        this.__reward = document.createElement("div"),
        this.__reward.classList.add("ut-sbc-reward-table-cell-view--reward"),
        t.appendChild(this.__reward),
        e.appendChild(t),
        this.__rowContent = document.createElement("div"),
        this.__rowContent.classList.add("rowContent");
        var i = document.createElement("div");
        i.classList.add("text-container"),
        this.__value = document.createElement("span"),
        this.__value.classList.add("ut-sbc-reward-table-cell-view--value"),
        i.appendChild(this.__value),
        this.__label = document.createElement("span"),
        this.__label.classList.add("ut-sbc-reward-table-cell-view--label"),
        i.appendChild(this.__label),
        this.__rowContent.appendChild(i),
        e.appendChild(this.__rowContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRewardTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__reward = null,
    this.__rowContent = null,
    this.__value = null,
    this.__label = null
}
,
UTSBCRewardTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCGroupRewardListView = function(t) {
    function UTSBCGroupRewardListView() {
        var e = t.call(this) || this;
        return e.rewardRows = [],
        e
    }
    return __extends(UTSBCGroupRewardListView, t),
    UTSBCGroupRewardListView.prototype.dealloc = function() {
        this.rewardRows.forEach(function(e) {
            e.dealloc()
        }),
        this.rewardRows = [],
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCGroupRewardListView.prototype.setSelectedRow = function(e) {
        this.rewardRows[e].toggleActive(!0)
    }
    ,
    UTSBCGroupRewardListView.prototype.untoggleAllRows = function() {
        this.rewardRows.forEach(function(e) {
            return e.toggleActive(!1)
        })
    }
    ,
    UTSBCGroupRewardListView.prototype.setRewards = function(e, o) {
        var n = this;
        void 0 === o && (o = !1),
        this.rewardRows.forEach(function(e) {
            return e.dealloc()
        }),
        this.rewardRows = [],
        e.forEach(function(e, t) {
            var i = n.generateAwardRow(e, o, t);
            n.rewardRows.push(i),
            n.addSubview(i)
        }),
        this.layoutSubviews()
    }
    ,
    UTSBCGroupRewardListView.prototype.generateAwardRow = function(e, t, i) {
        var o, n = this, r = new UTSBCRewardTableCellView;
        return r.init(),
        r.setReward(e),
        t && (null === (o = e.item) || void 0 === o ? void 0 : o.isPlayer()) && (r.enableTapCallback(),
        r.addTarget(this, function() {
            return n._eItemSelected(e.item, i)
        }, EventType.TAP)),
        r
    }
    ,
    UTSBCGroupRewardListView.prototype._eItemSelected = function(e, t) {
        e && (isPhone() || this.setSelectedRow(t),
        this._triggerActions(enums.UIListEvent.ROW_SELECT, {
            item: e,
            index: t
        }))
    }
    ,
    UTSBCGroupRewardListView
}(EATargetActionView);
UTSBCGroupRewardListView.prototype._generate = function _generate() {
    this._generated || (this.__rewardList = document.createElement("ul"),
    this.__rewardList.classList.add("ut-sbc-group-reward-list-view"),
    this.__root = this.__rewardList,
    this._generated = !0)
}
,
UTSBCGroupRewardListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__rewardList = null
}
,
UTSBCGroupRewardListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengeRequirementsView = function(e) {
    function UTSBCChallengeRequirementsView() {
        return e.call(this) || this
    }
    return __extends(UTSBCChallengeRequirementsView, e),
    UTSBCChallengeRequirementsView.prototype.generateRequirementListRow = function(e, t, i) {
        var o = document.createElement("li");
        return o.textContent = e,
        t && o.classList.add("complete"),
        JSUtils.isNumber(i) && -1 < i && o.setAttribute("data-after", "(" + i + ")"),
        o
    }
    ,
    UTSBCChallengeRequirementsView.prototype.renderChallengeRequirements = function(n, r) {
        var a = this;
        requestAnimationFrame(function() {
            if (a.getRootElement()) {
                a.__requirementsTitle.textContent = services.Localization.localize("sbc.requirements.challenge"),
                DOMKit.empty(a.__requirements);
                var e = n.squad
                  , t = n.eligibilityRequirements.map(function(e) {
                    return a.generateRequirementListRow(e.buildString(), n.isRequirementMet(e), n.getRequirementCounter(e))
                });
                if (e && r) {
                    var i = services.Localization.localize("sbc.requirements.numplayers") + " " + e.getNumOfRequiredPlayers()
                      , o = a.generateRequirementListRow(i, e.isSquadFull());
                    t.push(o)
                }
                t.forEach(function(e) {
                    return a.__requirements.appendChild(e)
                })
            }
        })
    }
    ,
    UTSBCChallengeRequirementsView
}(EAView);
UTSBCChallengeRequirementsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-challenge-requirements-view"),
        this.__requirementsTitle = document.createElement("h3"),
        this.__requirementsTitle.classList.add("title"),
        e.appendChild(this.__requirementsTitle),
        this.__requirements = document.createElement("ul"),
        this.__requirements.classList.add("sbc-requirements-checklist"),
        e.appendChild(this.__requirements),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeRequirementsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__requirementsTitle = null,
    this.__requirements = null
}
,
UTSBCChallengeRequirementsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengeDetailsView = function(e) {
    function UTSBCChallengeDetailsView() {
        return e.call(this) || this
    }
    return __extends(UTSBCChallengeDetailsView, e),
    UTSBCChallengeDetailsView.prototype.init = function() {
        e.prototype.init.call(this),
        this._groupRewardList.init(),
        this._groupRewardList.addTarget(this, this.bubbleEvent, enums.UIListEvent.ROW_SELECT)
    }
    ,
    UTSBCChallengeDetailsView.prototype.renderWithTableRows = function(e, t, i, o, n) {
        void 0 === i && (i = !1);
        var r = o ? t : e.awards;
        DOMKit.remove(this._rewardsCarousel.getRootElement()),
        this.render(e, i, o),
        this._groupRewardList.setRewards(r, n)
    }
    ,
    UTSBCChallengeDetailsView.prototype.renderWithCarousel = function(e, t, i, o) {
        void 0 === i && (i = !1),
        DOMKit.remove(this._groupRewardList.getRootElement()),
        this.render(e, i, o);
        var n = o ? t : e.awards;
        this._rewardsCarousel.isOn() || this._rewardsCarousel.setupRewards(n)
    }
    ,
    UTSBCChallengeDetailsView.prototype.render = function(e, t, i) {
        void 0 === t && (t = !1),
        this.__description.textContent = e.description;
        var o = i ? "sbc.rewards.title" : "sbc.rewards.challenge";
        this.__rewardsTitle.textContent = services.Localization.localize(o),
        this._requirements.renderChallengeRequirements(e, t)
    }
    ,
    UTSBCChallengeDetailsView.prototype.setChallengeRequirements = function(e, t) {
        this._requirements.renderChallengeRequirements(e, t)
    }
    ,
    UTSBCChallengeDetailsView.prototype.bubbleEvent = function(e, t, i) {
        this._triggerActions(t, i)
    }
    ,
    UTSBCChallengeDetailsView
}(EATargetActionView);
UTSBCChallengeDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-challenge-details-view"),
        this.__description = document.createElement("div"),
        this.__description.classList.add("ut-sbc-challenge-details-view--description"),
        e.appendChild(this.__description),
        this._requirements = new UTSBCChallengeRequirementsView,
        e.appendChild(this._requirements.getRootElement());
        var t = document.createElement("div");
        t.classList.add("rewards-container"),
        this.__rewardsTitle = document.createElement("span"),
        this.__rewardsTitle.classList.add("title"),
        t.appendChild(this.__rewardsTitle),
        this._groupRewardList = new UTSBCGroupRewardListView,
        t.appendChild(this._groupRewardList.getRootElement()),
        this._rewardsCarousel = new UTRewardsCarouselView,
        t.appendChild(this._rewardsCarousel.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null,
    this._requirements.destroy(),
    this.__rewardsTitle = null,
    this._groupRewardList.destroy(),
    this._rewardsCarousel.destroy()
}
,
UTSBCChallengeDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsPopupView = function(e) {
    function UTSBCRequirementsPopupView() {
        return e.call(this) || this
    }
    return __extends(UTSBCRequirementsPopupView, e),
    UTSBCRequirementsPopupView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnConfirm.init(),
        this._btnConfirm.addTarget(this, this.bubbleEvent, EventType.TAP),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.bubbleEvent, EventType.TAP)
    }
    ,
    UTSBCRequirementsPopupView.prototype.render = function(e, t, i, o) {
        this.__title.textContent = e.name,
        this._challengeDetails.init(),
        this._challengeDetails.renderWithCarousel(e, t, i, o);
        var n = "sbc.overlay.btn.startChallenge";
        e.isInProgress() && (n = "sbc.overlay.btn.submitChallenge",
        e.hasExpired() ? (n = "sbc.sets.expired",
        this._btnConfirm.setInteractionState(!1)) : e.meetsRequirements() || this._btnConfirm.setInteractionState(!1)),
        this._btnConfirm.setText(services.Localization.localize(n))
    }
    ,
    UTSBCRequirementsPopupView.prototype.bubbleEvent = function(e, t, i) {
        e === this._btnConfirm ? this._triggerActions(UTSBCRequirementsPopupView.Event.CONFIRM) : e === this._exitBtn && this._triggerActions(UTSBCRequirementsPopupView.Event.EXIT)
    }
    ,
    UTSBCRequirementsPopupView.Event = Object.freeze({
        CONFIRM: "UTSBCRequirementsPopupView.Event.CONFIRM",
        EXIT: "UTSBCRequirementsPopupView.Event.EXIT"
    }),
    UTSBCRequirementsPopupView
}(EATargetActionView);
UTSBCRequirementsPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-requirements-popup");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this._challengeDetails = new UTSBCChallengeDetailsView,
        e.appendChild(this._challengeDetails.getRootElement());
        var i = document.createElement("footer");
        this._btnConfirm = new UTStandardButtonControl,
        this._btnConfirm.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnConfirm.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRequirementsPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this._challengeDetails.destroy(),
    this._btnConfirm.destroy()
}
,
UTSBCRequirementsPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsPopupViewController = function(n) {
    function UTSBCRequirementsPopupViewController(e, t, i) {
        var o = n.call(this) || this;
        return o.challengeId = t,
        o.onConfirm = new EAObservable,
        o.set = e,
        o.showCustomRequirements = i,
        o
    }
    return __extends(UTSBCRequirementsPopupViewController, n),
    UTSBCRequirementsPopupViewController.prototype.dealloc = function() {
        this.onConfirm.dealloc(),
        n.prototype.dealloc.call(this)
    }
    ,
    UTSBCRequirementsPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRequirementsPopupView
    }
    ,
    UTSBCRequirementsPopupViewController.prototype.viewDidAppear = function() {
        n.prototype.viewDidAppear.call(this);
        var e = this.getView()
          , t = this.set.getChallenge(this.challengeId);
        t && (e.render(t, this.set.awards, this.showCustomRequirements, this.set.isSingleChallenge),
        e.addTarget(this, this.closePopup, UTSBCRequirementsPopupView.Event.EXIT),
        e.addTarget(this, this.onConfirmChallenge, UTSBCRequirementsPopupView.Event.CONFIRM))
    }
    ,
    UTSBCRequirementsPopupViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        n.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.closePopup, UTSBCRequirementsPopupView.Event.EXIT),
        e.removeTarget(this, this.onConfirmChallenge, UTSBCRequirementsPopupView.Event.CONFIRM)
    }
    ,
    UTSBCRequirementsPopupViewController.prototype.onConfirmChallenge = function() {
        this.onConfirm.notify(),
        this.onExit.notify()
    }
    ,
    UTSBCRequirementsPopupViewController
}(BasePopupViewController)
  , UTSBCChallengeTileView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCChallengeTileView() {
        var e = t.call(this) || this;
        return e._data = null,
        e
    }
    return __extends(UTSBCChallengeTileView, t),
    UTSBCChallengeTileView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._data = null
    }
    ,
    UTSBCChallengeTileView.prototype.setData = function(e) {
        this._data = e,
        this.setInteractionState(!e.isCompleted())
    }
    ,
    UTSBCChallengeTileView.prototype.getData = function() {
        return this._data
    }
    ,
    UTSBCChallengeTileView.prototype.render = function() {
        var t = this
          , e = this._data;
        if (e) {
            var i = e.isInProgress()
              , o = e.isCompleted();
            this.toggleClass("complete", o),
            this.toggleClass("in-progress", i),
            this._challengeImage.onerror = function(e) {
                t._challengeImage.src = "images/sbc/sbcDefaultChallengeTile.png"
            }
            ,
            this._challengeImage.src = AssetLocationUtils.getSquadBuildingChallengeImageUri(e.assetId),
            e.hasNotStarted() ? this.__subTitle.textContent = services.Localization.localize("sbc.challenge.status.notStarted") : i ? this.__subTitle.textContent = services.Localization.localize("sbc.challenge.status.inProgress") : o && (this.__subTitle.textContent = services.Localization.localize("sbc.challenge.status.complete"))
        }
    }
    ,
    UTSBCChallengeTileView
}(UTTileView));
UTSBCChallengeTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("col-1-2"),
        e.classList.add("ut-sbc-challenge-tile-view");
        var t = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileTitle"),
        t.appendChild(this.__tileTitle),
        this.__subTitle = document.createElement("h2"),
        this.__subTitle.classList.add("subTitle"),
        t.appendChild(this.__subTitle),
        e.appendChild(t),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        this._challengeImage = new EAImageView,
        this._challengeImage.getRootElement().classList.add("challengeImage"),
        this.__tileContent.appendChild(this._challengeImage.getRootElement()),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__subTitle = null,
    this.__tileContent = null,
    this._challengeImage.destroy()
}
,
UTSBCChallengeTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCFavoriteButtonControl = function(n) {
    function UTSBCFavoriteButtonControl() {
        var e = n.call(this) || this;
        return e.isToggling = !1,
        e.sbcSet = null,
        e
    }
    return __extends(UTSBCFavoriteButtonControl, n),
    UTSBCFavoriteButtonControl.prototype.setData = function(e) {
        this.sbcSet = e,
        this.setChecked(this.sbcSet.isFavourite)
    }
    ,
    UTSBCFavoriteButtonControl.prototype.watchSBCSet = function() {
        var r = this
          , a = services.Localization;
        this.sbcSet && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.toggleFavouriteTag(this.sbcSet).observe(this, function(e, t) {
            var i;
            e.unobserve(r);
            var o = (null === (i = r.sbcSet) || void 0 === i ? void 0 : i.isFavourite) ? "2" : "0";
            if (t.success)
                services.Notification.queue([a.localize("notification.sbcSets.successfulTag" + o), UINotificationType.NEUTRAL]);
            else {
                var n = void 0;
                n = t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcSets.failedToTag" + o,
                services.Notification.queue([a.localize(n), UINotificationType.NEGATIVE])
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTSBCFavoriteButtonControl.prototype._tapDetected = function(e) {
        var t, i, o = this;
        n.prototype._tapDetected.call(this, e),
        e.stopPropagation(),
        null !== (t = this.sbcSet) && void 0 !== t && t.isComplete() || this.isToggling || (this.isToggling = !0,
        this.setChecked(!(null === (i = this.sbcSet) || void 0 === i ? void 0 : i.isFavourite)),
        this.watchSBCSet(),
        setTimeout(function() {
            JSUtils.isBoolean(o.isToggling) && (o.isToggling = !1)
        }, 500))
    }
    ,
    UTSBCFavoriteButtonControl
}(UTToggleButtonControl);
UTSBCFavoriteButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("btn-favorite"),
        this.__text = document.createElement("span"),
        this.__text.classList.add("btn-text"),
        e.appendChild(this.__text),
        this.__subtext = document.createElement("span"),
        this.__subtext.classList.add("btn-subtext"),
        e.appendChild(this.__subtext),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCFavoriteButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__text = null,
    this.__subtext = null
}
,
UTSBCFavoriteButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBuildingSetStatusLabelView = function(e) {
    function UTSquadBuildingSetStatusLabelView() {
        return e.call(this) || this
    }
    return __extends(UTSquadBuildingSetStatusLabelView, e),
    UTSquadBuildingSetStatusLabelView.prototype.setType = function(e) {
        var t = JSUtils.getObjectValues(UTSquadBuildingSetStatusLabelView.Type).join(" ");
        this.removeClass(t),
        this.addClass(e)
    }
    ,
    UTSquadBuildingSetStatusLabelView.prototype.setText = function(e) {
        this.__text.textContent = e
    }
    ,
    UTSquadBuildingSetStatusLabelView.prototype.setExpiryText = function(e, t) {
        var i = services.Localization;
        e ? 0 < t ? this.setText(i.localize("sbc.sets.expiresIn") + ": " + i.localizeTimeRemaining(t)) : this.setText(i.localize("sbc.sets.expired")) : this.setText(i.localize("sbc.status.noexpire"))
    }
    ,
    UTSquadBuildingSetStatusLabelView.Type = Object.freeze({
        EXPIRY: "expiry",
        NON_EXPIRY: "no-expiry",
        NON_REPEATABLE: "no-repeat",
        REFRESH: "refresh",
        REPEATABLE: "repeat"
    }),
    UTSquadBuildingSetStatusLabelView
}(EAView);
UTSquadBuildingSetStatusLabelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-building-set-status-label-view"),
        this.__text = document.createElement("span"),
        this.__text.classList.add("text"),
        e.appendChild(this.__text),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadBuildingSetStatusLabelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__text = null
}
,
UTSquadBuildingSetStatusLabelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSetInfoView = function(t) {
    function UTSBCSetInfoView() {
        return t.call(this) || this
    }
    return __extends(UTSBCSetInfoView, t),
    UTSBCSetInfoView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._watchBtn.init(),
        this._rewards.addTarget(this, this.bubbleEvent, enums.UIListEvent.ROW_SELECT),
        this.__status.textContent = e.localize("sbc.status.title"),
        this.__rewardsHeader.textContent = e.localize("sbc.rewards.title")
    }
    ,
    UTSBCSetInfoView.prototype.dealloc = function() {
        this._rewards.removeTarget(this, this.bubbleEvent, enums.UIListEvent.ROW_SELECT)
    }
    ,
    UTSBCSetInfoView.prototype.setProgress = function(e, t) {
        var i = services.Localization.localize("sbc.sets.challengesComplete", [e.toString(), t.toString()]);
        this._progressBar.setProgress(e / t * 100),
        this._progressBar.setProgressLabel(i)
    }
    ,
    UTSBCSetInfoView.prototype.setRewards = function(e) {
        this._rewards.setRewards(e, !0)
    }
    ,
    UTSBCSetInfoView.prototype.setRepeatableState = function(e, t, i) {
        var o, n, r = services.Localization, a = e === SBCRepeatabilityMode.REFRESH, s = "";
        if (e === SBCRepeatabilityMode.NON_REPEATABLE)
            s = r.localize("tile.sbcSets.nonrepeatable"),
            n = UTSquadBuildingSetStatusLabelView.Type.NON_REPEATABLE;
        else if (e === SBCRepeatabilityMode.LIMITED || a) {
            if (s = r.localize("tile.sbcSets.repeatable") + " " + (null !== (o = null == t ? void 0 : t.toString()) && void 0 !== o ? o : "0"),
            n = UTSquadBuildingSetStatusLabelView.Type.REPEATABLE,
            a) {
                var l = r.localizeTimeRemaining(null != i ? i : 0);
                this._refreshStatus.setType(UTSquadBuildingSetStatusLabelView.Type.REFRESH),
                this._refreshStatus.setText(l)
            }
        } else
            s = r.localize("tile.sbcSets.repeatable"),
            n = UTSquadBuildingSetStatusLabelView.Type.REPEATABLE;
        this._refreshStatus.setDisplay(a),
        this._repeatableStatus.setType(n),
        this._repeatableStatus.setText(s)
    }
    ,
    UTSBCSetInfoView.prototype.setExpiryState = function(e, t) {
        var i = e ? UTSquadBuildingSetStatusLabelView.Type.EXPIRY : UTSquadBuildingSetStatusLabelView.Type.NON_EXPIRY;
        this._expireStatus.setType(i),
        this._expireStatus.setExpiryText(e, t)
    }
    ,
    UTSBCSetInfoView.prototype.setFavoriteState = function(e) {
        this._watchBtn.setData(e)
    }
    ,
    UTSBCSetInfoView.prototype.untoggleAllRows = function() {
        this._rewards.untoggleAllRows()
    }
    ,
    UTSBCSetInfoView.prototype.bubbleEvent = function(e, t, i) {
        this._triggerActions(t, i)
    }
    ,
    UTSBCSetInfoView
}(EATargetActionView);
UTSBCSetInfoView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-set-info-view"),
        this._watchBtn = new UTSBCFavoriteButtonControl,
        e.appendChild(this._watchBtn.getRootElement()),
        this.__status = document.createElement("h1"),
        this.__status.classList.add("status-header"),
        e.appendChild(this.__status),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        this._progressBar.getRootElement().classList.add("large"),
        e.appendChild(this._progressBar.getRootElement()),
        this.__rewardsHeader = document.createElement("h1"),
        this.__rewardsHeader.classList.add("rewards-header"),
        e.appendChild(this.__rewardsHeader),
        this._rewards = new UTSBCGroupRewardListView,
        e.appendChild(this._rewards.getRootElement());
        var t = document.createElement("div");
        t.classList.add("sbc-status-container"),
        this._repeatableStatus = new UTSquadBuildingSetStatusLabelView,
        t.appendChild(this._repeatableStatus.getRootElement()),
        this._refreshStatus = new UTSquadBuildingSetStatusLabelView,
        t.appendChild(this._refreshStatus.getRootElement()),
        this._expireStatus = new UTSquadBuildingSetStatusLabelView,
        t.appendChild(this._expireStatus.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSetInfoView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._watchBtn.destroy(),
    this.__status = null,
    this._progressBar.destroy(),
    this.__rewardsHeader = null,
    this._rewards.destroy(),
    this._repeatableStatus.destroy(),
    this._refreshStatus.destroy(),
    this._expireStatus.destroy()
}
,
UTSBCSetInfoView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengeTableRowView = function(t) {
    function UTSBCChallengeTableRowView() {
        return t.call(this) || this
    }
    return __extends(UTSBCChallengeTableRowView, t),
    UTSBCChallengeTableRowView.prototype.init = function() {
        t.prototype.init.call(this),
        this._progressBar.init()
    }
    ,
    UTSBCChallengeTableRowView.prototype.setTitle = function(e) {
        this.__rowTitle.textContent = e
    }
    ,
    UTSBCChallengeTableRowView.prototype.toggleSelected = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTSBCChallengeTableRowView.prototype.render = function(e) {
        var t = this
          , i = e.isInProgress()
          , o = e.isCompleted();
        this.setInteractionState(!o),
        this.toggleClass("complete", o),
        DOMKit.toggleClass(this.__rowContent, "has-tap-callback", !o),
        this.toggleClass("in-progress", i),
        this._challengeImage.onerror = function(e) {
            t._challengeImage.src = "images/sbc/sbcDefaultChallengeTile.png"
        }
        ,
        this._challengeImage.src = AssetLocationUtils.getSquadBuildingChallengeImageUri(e.assetId);
        var n = services.Localization;
        e.hasNotStarted() ? this._progressBar.setProgressLabel(n.localize("sbc.challenge.status.notStarted")) : i ? (this._progressBar.setProgressLabel(n.localize("sbc.challenge.status.inProgress")),
        this._progressBar.setProgress(100)) : o && (this._progressBar.setProgressLabel(n.localize("sbc.challenge.status.complete")),
        this._progressBar.setProgress(100),
        this._progressBar.setFeedbackState(enums.UIFeedbackState.HIGH))
    }
    ,
    UTSBCChallengeTableRowView.prototype._mouseEnter = function(e) {
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTSBCChallengeTableRowView.prototype._mouseLeave = function(e) {
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTSBCChallengeTableRowView.prototype._touchStarted = function(e) {
        t.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTSBCChallengeTableRowView.prototype._touchMoved = function(e) {
        t.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTSBCChallengeTableRowView.prototype._touchEnded = function(e) {
        t.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTSBCChallengeTableRowView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTSBCChallengeTableRowView
}(EATargetActionView);
UTSBCChallengeTableRowView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-challenge-table-row-view"),
        this._challengeImage = new EAImageView,
        this._challengeImage.getRootElement().classList.add("ut-sbc-challenge-table-row-view--image"),
        e.appendChild(this._challengeImage.getRootElement()),
        this.__rowContent = document.createElement("div"),
        this.__rowContent.classList.add("has-tap-callback"),
        this.__rowContent.classList.add("rowContent"),
        this.__rowTitle = document.createElement("h1"),
        this.__rowTitle.classList.add("ut-sbc-challenge-table-row-view--title"),
        this.__rowContent.appendChild(this.__rowTitle),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        this.__rowContent.appendChild(this._progressBar.getRootElement()),
        this.__subTitle = document.createElement("h2"),
        this.__subTitle.classList.add("ut-sbc-challenge-table-row-view--subTitle"),
        this.__rowContent.appendChild(this.__subTitle),
        e.appendChild(this.__rowContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeTableRowView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._challengeImage.destroy(),
    this.__rowContent = null,
    this.__rowTitle = null,
    this._progressBar.destroy(),
    this.__subTitle = null
}
,
UTSBCChallengeTableRowView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengeHeaderView = function(e) {
    function UTSBCChallengeHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTSBCChallengeHeaderView, e),
    UTSBCChallengeHeaderView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTSBCChallengeHeaderView
}(EAView);
UTSBCChallengeHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-list-header"),
        this.__title = document.createElement("span"),
        this.__title.classList.add("ut-list-header-title"),
        e.appendChild(this.__title),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null
}
,
UTSBCChallengeHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengesView = function(t) {
    function UTSBCChallengesView() {
        var e = t.call(this) || this;
        return e._challengeRows = [],
        e._setInfo.addTarget(e, e.bubbleEvent, enums.UIListEvent.ROW_SELECT),
        e
    }
    return __extends(UTSBCChallengesView, t),
    UTSBCChallengesView.prototype.init = function() {
        t.prototype.init.call(this),
        this._setInfo.init(),
        this._header.init()
    }
    ,
    UTSBCChallengesView.prototype.dealloc = function() {
        this.clearChallenges(),
        this._setInfo.removeTarget(this, this.bubbleEvent, enums.UIListEvent.ROW_SELECT),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCChallengesView.prototype.clearChallenges = function() {
        this._challengeRows.forEach(function(e) {
            return e.dealloc()
        }),
        this._challengeRows = []
    }
    ,
    UTSBCChallengesView.prototype.unselectAllRows = function() {
        this._challengeRows.forEach(function(e) {
            e.toggleSelected(!1)
        })
    }
    ,
    UTSBCChallengesView.prototype.setSBCSet = function(e) {
        var t = this;
        this._setInfo.setProgress(e.challengesCompletedCount, e.challengesCount),
        this._setInfo.setRewards(e.awards),
        this._setInfo.setRepeatableState(e.repeatabilityMode, e.getRepeatsRemaining(), e.getRefreshTimeRemaining()),
        this._setInfo.setExpiryState(!e.notExpirable, e.getTimeRemaining()),
        this._setInfo.setFavoriteState(e),
        this.clearChallenges(),
        e.getChallenges().sort(function(e, t) {
            return e.priority - t.priority
        }).forEach(function(e) {
            return t.generateChallengeTableRow(e)
        }),
        this.layoutSubviews()
    }
    ,
    UTSBCChallengesView.prototype.generateChallengeTableRow = function(e) {
        var t = this
          , i = new UTSBCChallengeTableRowView;
        i.init(),
        i.setTitle(e.name),
        i.render(e),
        i.addTarget(this, function() {
            return t.eChallengeRowSelected(e)
        }, EventType.TAP),
        this.addSubview(i, this.__challenges),
        this._challengeRows.push(i)
    }
    ,
    UTSBCChallengesView.prototype.setSelectedChallengeRow = function(i) {
        var o = this;
        this._challengeRows.forEach(function(e, t) {
            i === t ? o._challengeRows[t].toggleSelected(!0) : o._challengeRows[t].toggleSelected(!1)
        })
    }
    ,
    UTSBCChallengesView.prototype.setHeaderText = function(e) {
        this._header.setTitle(e)
    }
    ,
    UTSBCChallengesView.prototype.onUpdate = function(e) {
        e.notExpirable || this._setInfo.setExpiryState(!e.notExpirable, e.getTimeRemaining()),
        e.repeatabilityMode === SBCRepeatabilityMode.REFRESH && this._setInfo.setRepeatableState(e.repeatabilityMode, e.getRepeatsRemaining(), e.getRefreshTimeRemaining())
    }
    ,
    UTSBCChallengesView.prototype.eChallengeRowSelected = function(e) {
        this._setInfo.untoggleAllRows(),
        this._triggerActions(UTSBCChallengesView.Event.CHALLENGE_SELECTED, {
            challengeId: e.id
        })
    }
    ,
    UTSBCChallengesView.prototype.bubbleEvent = function(e, t, i) {
        this._triggerActions(t, i)
    }
    ,
    UTSBCChallengesView.Event = Object.freeze({
        CHALLENGE_SELECTED: "UTSBCChallengesView.Event.CHALLENGE_SELECTED"
    }),
    UTSBCChallengesView
}(EATargetActionView);
UTSBCChallengesView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-challenges-view"),
        this._setInfo = new UTSBCSetInfoView,
        e.appendChild(this._setInfo.getRootElement()),
        this._header = new UTSBCChallengeHeaderView,
        e.appendChild(this._header.getRootElement()),
        this.__challenges = document.createElement("div"),
        this.__challenges.classList.add("ut-sbc-challenges-view--challenges"),
        e.appendChild(this.__challenges),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengesView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._setInfo.destroy(),
    this._header.destroy(),
    this.__challenges = null
}
,
UTSBCChallengesView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengesViewModel = function(t) {
    function UTSBCChallengesViewModel() {
        var e = t.call(this) || this;
        return e.challenges = new EAIterator([]),
        e.sbcSet = null,
        e
    }
    return __extends(UTSBCChallengesViewModel, t),
    UTSBCChallengesViewModel.prototype.getSbcSet = function() {
        return this.sbcSet
    }
    ,
    UTSBCChallengesViewModel.prototype.setSbcSet = function(e) {
        this.sbcSet = e,
        this.challenges.resetCollection(e.getChallenges())
    }
    ,
    UTSBCChallengesViewModel.prototype.getChallenges = function() {
        return this.challenges.values()
    }
    ,
    UTSBCChallengesViewModel.prototype.getSelectedChallenge = function() {
        return this.challenges.current()
    }
    ,
    UTSBCChallengesViewModel.prototype.getChallengeById = function(t) {
        return this.challenges.values().find(function(e) {
            return e.id === t
        })
    }
    ,
    UTSBCChallengesViewModel.prototype.getSelectedChallengeId = function() {
        var e, t;
        return null !== (t = null === (e = this.challenges.current()) || void 0 === e ? void 0 : e.id) && void 0 !== t ? t : -1
    }
    ,
    UTSBCChallengesViewModel.prototype.setSelectedChallenge = function(t) {
        this.setIndex(this.challenges.indexOf(function(e) {
            return e.id === t
        }))
    }
    ,
    UTSBCChallengesViewModel.prototype.getFirstIncompleteChallengeIndex = function() {
        return this.challenges.indexOf(function(e) {
            return !e.isCompleted()
        })
    }
    ,
    UTSBCChallengesViewModel.prototype.getIndex = function() {
        return this.challenges.getIndex()
    }
    ,
    UTSBCChallengesViewModel.prototype.setIndex = function(e) {
        e < 0 ? this.challenges.setIndex(0) : e >= this.challenges.length ? this.challenges.setIndex(this.challenges.length - 1) : this.challenges.setIndex(e)
    }
    ,
    UTSBCChallengesViewModel
}(UTViewModel)
  , UTSBCChallengesViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(n) {
    function UTSBCChallengesViewController(e) {
        var t = n.call(this) || this;
        return t.intervalController = new EAIntervalController(MS_PER_SECOND,t.handleViewUpdates.bind(t)),
        t.sbcViewModel = null != e ? e : null,
        t.refreshEndTime = 0,
        t.requirementsModal = null,
        t.sbset = null,
        t
    }
    return __extends(UTSBCChallengesViewController, n),
    UTSBCChallengesViewController.prototype.initWithSBCSet = function(e) {
        this.initialized || (this.sbset = e,
        this.sbcViewModel || (this.sbcViewModel = new UTSBCChallengesViewModel),
        this.sbcViewModel.setSbcSet(e),
        this.sbcViewModel.setIndex(this.sbcViewModel.getFirstIncompleteChallengeIndex()),
        this.init())
    }
    ,
    UTSBCChallengesViewController.prototype.dealloc = function() {
        this.sbset = null,
        this.requirementsModal && (this.requirementsModal.dealloc(),
        this.requirementsModal = null),
        n.prototype.dealloc.call(this)
    }
    ,
    UTSBCChallengesViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCChallengesView
    }
    ,
    UTSBCChallengesViewController.prototype._getTelemetryId = function() {
        return "SBC - Challenges"
    }
    ,
    UTSBCChallengesViewController.prototype.onPause = function() {
        n.prototype.onPause.call(this),
        this.intervalController.stop()
    }
    ,
    UTSBCChallengesViewController.prototype.onResume = function() {
        n.prototype.onResume.call(this),
        this.intervalController.start()
    }
    ,
    UTSBCChallengesViewController.prototype.viewWillAppear = function() {
        n.prototype.viewWillAppear.call(this),
        this.sbcViewModel && this.sbcViewModel.setIndex(this.sbcViewModel.getFirstIncompleteChallengeIndex())
    }
    ,
    UTSBCChallengesViewController.prototype.viewDidAppear = function() {
        var e, t, i;
        if (n.prototype.viewDidAppear.call(this),
        this.sbset) {
            var o = this.getView();
            o.setSBCSet(this.sbset),
            o.setHeaderText(services.Localization.localize("sbc.sets.challenges.title")),
            o.addTarget(this, this.onChallengeSelected, UTSBCChallengesView.Event.CHALLENGE_SELECTED),
            o.addTarget(this, this._eTableCellSelected, enums.UIListEvent.ROW_SELECT),
            this.sbcViewModel && (isPhone() || o.setSelectedChallengeRow(this.sbcViewModel.getIndex())),
            this.intervalController.start()
        }
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationTitle(null !== (i = null === (t = this.sbset) || void 0 === t ? void 0 : t.name) && void 0 !== i ? i : BLANK_STR)
    }
    ,
    UTSBCChallengesViewController.prototype.viewWillDisappear = function() {
        this.getView().removeTarget(this, this._eTableCellSelected, enums.UIListEvent.ROW_SELECT),
        this.intervalController.stop(),
        n.prototype.viewWillDisappear.call(this)
    }
    ,
    UTSBCChallengesViewController.prototype.handleViewUpdates = function() {
        if (this.sbset) {
            var e = Date.now() / MS_PER_SECOND;
            this.sbset.repeatabilityMode === SBCRepeatabilityMode.REFRESH && this.refreshEndTime < e && (0 < this.refreshEndTime && (this.sbset.timesCompleted = 0),
            this.refreshEndTime = e + this.sbset.getRefreshTimeRemaining()),
            this.getView().onUpdate(this.sbset)
        }
    }
    ,
    UTSBCChallengesViewController.prototype.goToChallengeScreen = function(e, t) {
        var i = this.getNavigationController();
        if (i) {
            var o = isPhone() ? new UTSBCSquadOverviewViewController : new UTSBCSquadSplitViewController;
            o.initWithSBCSet(e, t),
            i.pushViewController(o)
        }
    }
    ,
    UTSBCChallengesViewController.prototype.loadChallenge = function(n, r) {
        var a = this
          , s = n.getChallenge(r);
        s && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.loadChallenge(s).observe(this, function(e, t) {
            var i;
            if (e.unobserve(a),
            t.success)
                a.goToChallengeScreen(n, r);
            else {
                var o = void 0;
                o = s.hasExpired() ? "notification.sbcChallenges.expired" : (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcChallenges.failedToStart",
                services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTSBCChallengesViewController.prototype.showRequirementsModal = function(t, i) {
        var o = this
          , n = new UTSBCRequirementsPopupViewController(t,i,!1);
        (this.requirementsModal = n).onExit.observe(this, function(e) {
            e.unobserve(o),
            o.requirementsModal = null
        }),
        n.onConfirm.observe(this, function(e) {
            e.unobserve(o),
            n.closePopup(),
            o.requirementsModal = null,
            o.loadChallenge(t, i),
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Start Challenge")
        }),
        isPhone() ? n.modalDisplayDimensions.width = "400px" : n.modalDisplayDimensions.minWidth = "400px",
        gPopupClickShield.setActivePopup(n)
    }
    ,
    UTSBCChallengesViewController.prototype.onChallengeSelected = function(e, t, i) {
        var o;
        if (DebugUtils.Assert(JSUtils.isValid(this.sbset), "Cannot find a reference to a squad building set."),
        this.sbset) {
            var n = null !== (o = this.sbset.getChallenge(i.challengeId)) && void 0 !== o ? o : null;
            if (DebugUtils.Assert(JSUtils.isValid(n), "Cannot find a challenge entity with ID: " + i.challengeId),
            n && this.sbcViewModel) {
                var r = this.sbcViewModel.getChallenges().findIndex(function(e) {
                    return e.id === i.challengeId
                });
                if (this.sbcViewModel.setSelectedChallenge(i.challengeId),
                isPhone())
                    n.hasNotStarted() ? this.showRequirementsModal(this.sbset, i.challengeId) : this.loadChallenge(this.sbset, i.challengeId);
                else
                    this.getView().setSelectedChallengeRow(r)
            } else
                services.Notification.queue([services.Localization.localize("popup.body.genericError"), UINotificationType.NEGATIVE])
        } else
            services.Notification.queue([services.Localization.localize("popup.body.genericError"), UINotificationType.NEGATIVE])
    }
    ,
    UTSBCChallengesViewController.prototype._eTableCellSelected = function(e, t, i) {
        if (i.item && i.item.isValid() && i.item.isPlayer() && JSUtils.isValid(i.item.getMetaData())) {
            var o = new UTPlayerBioViewController
              , n = this.getNavigationController();
            o.initWithItem(i.item),
            n && n.pushViewController(o)
        } else
            services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
    }
    ,
    UTSBCChallengesViewController
}(EAViewController))
  , UTSBCRequirementsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSBCRequirementsView() {
        return e.call(this) || this
    }
    return __extends(UTSBCRequirementsView, e),
    UTSBCRequirementsView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnConfirm.init(),
        this._btnConfirm.addTarget(this, this.bubbleEvent, EventType.TAP)
    }
    ,
    UTSBCRequirementsView.prototype.render = function(e, t, i, o) {
        this.__title.textContent = e.name,
        this._challengeDetails.init(),
        this._challengeDetails.renderWithTableRows(e, t, i, o, !1);
        var n = "sbc.overlay.btn.startChallenge";
        this._btnConfirm.setInteractionState(!0),
        e.isInProgress() && (n = "sbc.overlay.btn.goToChallenge",
        e.hasExpired() && (n = "sbc.sets.expired",
        this._btnConfirm.setInteractionState(!1))),
        this._btnConfirm.setText(services.Localization.localize(n))
    }
    ,
    UTSBCRequirementsView.prototype.bubbleEvent = function(e, t, i) {
        this._triggerActions(UTSBCRequirementsView.Event.CONFIRM)
    }
    ,
    UTSBCRequirementsView.Event = Object.freeze({
        CONFIRM: "UTSBCRequirementsPopupView.Event.CONFIRM"
    }),
    UTSBCRequirementsView
}(EATargetActionView));
UTSBCRequirementsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-requirements-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this._challengeDetails = new UTSBCChallengeDetailsView,
        e.appendChild(this._challengeDetails.getRootElement());
        var i = document.createElement("footer");
        this._btnConfirm = new UTStandardButtonControl,
        this._btnConfirm.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnConfirm.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRequirementsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._challengeDetails.destroy(),
    this._btnConfirm.destroy()
}
,
UTSBCRequirementsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsViewController = function(o) {
    function UTSBCRequirementsViewController(e, t) {
        var i = o.call(this) || this;
        return i.showCustomRequirements = e,
        i.sbcViewModel = t,
        i
    }
    return __extends(UTSBCRequirementsViewController, o),
    UTSBCRequirementsViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRequirementsView
    }
    ,
    UTSBCRequirementsViewController.prototype.renderChallenge = function(e) {
        var t = this.getView()
          , i = this.sbcViewModel.getChallengeById(e)
          , o = this.sbcViewModel.getSbcSet();
        i && o && t.render(i, o.awards, this.showCustomRequirements, o.isSingleChallenge)
    }
    ,
    UTSBCRequirementsViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = this.getView()
          , t = this.sbcViewModel.getSelectedChallenge()
          , i = this.sbcViewModel.getSbcSet();
        t && i && (e.render(t, i.awards, this.showCustomRequirements, i.isSingleChallenge),
        e.addTarget(this, this.onConfirmChallenge, UTSBCRequirementsView.Event.CONFIRM))
    }
    ,
    UTSBCRequirementsViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        o.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.onConfirmChallenge, UTSBCRequirementsView.Event.CONFIRM)
    }
    ,
    UTSBCRequirementsViewController.prototype.onConfirmChallenge = function(e, t, i) {
        var r = this
          , a = this.sbcViewModel.getSelectedChallenge()
          , s = this.sbcViewModel.getSelectedChallengeId()
          , l = this.sbcViewModel.getSbcSet();
        a ? (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.loadChallenge(a).observe(this, function(e, t) {
            var i;
            if (e.unobserve(r),
            t.success) {
                (null === (i = t.data) || void 0 === i ? void 0 : i.squad) && (a.squad = t.data.squad),
                r.renderChallenge(s);
                var o = r.getNavigationController();
                if (o && l) {
                    var n = new UTSBCSquadSplitViewController;
                    n.initWithSBCSet(l, s),
                    o.pushViewController(n)
                }
            } else
                services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToLoad"), UINotificationType.NEGATIVE]);
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToLoad"), UINotificationType.NEGATIVE])
    }
    ,
    UTSBCRequirementsViewController
}(EAViewController)
  , UTSBCGroupChallengeSplitViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCGroupChallengeSplitViewController() {
        var e = t.call(this) || this;
        return e.sbcViewModel = new UTSBCChallengesViewModel,
        e.challengeController = new UTSBCChallengesViewController(e.sbcViewModel),
        e.challengeRequirementsController = null,
        e
    }
    return __extends(UTSBCGroupChallengeSplitViewController, t),
    UTSBCGroupChallengeSplitViewController.prototype.initWithSBCSet = function(e) {
        if (!this.initialized) {
            this.challengeController.initWithSBCSet(e),
            this.challengeRequirementsController = new UTSBCRequirementsViewController(!0,this.sbcViewModel),
            this.challengeRequirementsController.init(),
            this.addChildViewController(this.challengeRequirementsController);
            var t = this.challengeController.getView();
            t.addTarget(this, this.showChallengeRequirementDetails, UTSBCChallengesView.Event.CHALLENGE_SELECTED),
            t.addTarget(this, this.showPlayerBio, enums.UIListEvent.ROW_SELECT),
            this.init()
        }
    }
    ,
    UTSBCGroupChallengeSplitViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.challengeController.dealloc(),
        this.challengeRequirementsController && this.challengeRequirementsController.dealloc()
    }
    ,
    UTSBCGroupChallengeSplitViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.setLeftController(this.challengeController),
        this.challengeRequirementsController && this.setRightController(this.challengeRequirementsController)
    }
    ,
    UTSBCGroupChallengeSplitViewController.prototype.showChallengeRequirementDetails = function(e, t, i) {
        this.challengeRequirementsController && (this.rightController instanceof UTSBCRequirementsViewController || this.setRightController(this.challengeRequirementsController),
        this.challengeRequirementsController.renderChallenge(i.challengeId))
    }
    ,
    UTSBCGroupChallengeSplitViewController.prototype.showPlayerBio = function(e, t, i) {
        if (i.item && i.item.isValid() && i.item.isPlayer() && JSUtils.isValid(i.item.getMetaData())) {
            var o = new UTPlayerBioViewController
              , n = this.getNavigationController();
            if (o.initWithItem(i.item),
            n)
                this.challengeController.getView().unselectAllRows(),
                this.setRightController(o)
        } else
            services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
    }
    ,
    UTSBCGroupChallengeSplitViewController
}(UTSplitViewController))
  , UTSBCRewardPreviewView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSBCRewardPreviewView() {
        return e.call(this) || this
    }
    return __extends(UTSBCRewardPreviewView, e),
    UTSBCRewardPreviewView.prototype.init = function() {
        e.prototype.init.call(this),
        this._exitBtn.init()
    }
    ,
    UTSBCRewardPreviewView.prototype.getExitBtn = function() {
        return this._exitBtn
    }
    ,
    UTSBCRewardPreviewView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTSBCRewardPreviewView.prototype.setErrorMessage = function(e) {
        this.__errorMessage.textContent = e
    }
    ,
    UTSBCRewardPreviewView.prototype.setImage = function(e) {
        var t = this;
        this._previewImage.onload = function(e) {
            DOMKit.toggleDisplayStyle(t.__errorMessage, !1),
            t._previewImage.setDisplay(!0)
        }
        ,
        this._previewImage.onerror = function(e) {
            DOMKit.toggleDisplayStyle(t.__errorMessage, !0),
            t._previewImage.setDisplay(!1)
        }
        ,
        this._previewImage.src = AssetLocationUtils.getSquadBuildingRewardImageUri(e)
    }
    ,
    UTSBCRewardPreviewView
}(EAView));
UTSBCRewardPreviewView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-reward-preview-modal");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("content-container"),
        this._previewImage = new EAImageView,
        this._previewImage.getRootElement().classList.add("preview-image"),
        i.appendChild(this._previewImage.getRootElement()),
        this.__errorMessage = document.createElement("div"),
        this.__errorMessage.classList.add("error-message"),
        i.appendChild(this.__errorMessage),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRewardPreviewView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this._previewImage.destroy(),
    this.__errorMessage = null
}
,
UTSBCRewardPreviewView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRewardPreviewViewController = function(i) {
    function UTSBCRewardPreviewViewController() {
        var e = i.call(this) || this;
        return e.previewImageId = "",
        e
    }
    return __extends(UTSBCRewardPreviewViewController, i),
    UTSBCRewardPreviewViewController.prototype.init = function() {
        this.initialized || (i.prototype.init.call(this),
        DebugUtils.Assert(0 < this.previewImageId.length, "UTSBCRewardPreviewViewController expects an image URL."),
        this.getView().getExitBtn().addTarget(this, this.eOnExitBtn, EventType.TAP))
    }
    ,
    UTSBCRewardPreviewViewController.prototype.initWithImage = function(e) {
        this.initialized || (this.previewImageId = e,
        this.init())
    }
    ,
    UTSBCRewardPreviewViewController.prototype.dealloc = function() {
        this.previewImageId = "",
        i.prototype.dealloc.call(this)
    }
    ,
    UTSBCRewardPreviewViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRewardPreviewView
    }
    ,
    UTSBCRewardPreviewViewController.prototype.viewDidAppear = function() {
        var e = services.Localization
          , t = this.getView();
        t.setTitle(e.localize("sbc.sets.preview.title")),
        t.setErrorMessage(e.localize("sbc.sets.preview.errormessage")),
        t.setImage(this.previewImageId),
        i.prototype.viewDidAppear.call(this)
    }
    ,
    UTSBCRewardPreviewViewController.prototype.eOnExitBtn = function(e, t, i) {
        var o;
        null === (o = this.getParentViewController()) || void 0 === o || o.dismissViewController()
    }
    ,
    UTSBCRewardPreviewViewController
}(EAViewController)
  , UTSBCConfirmSubmissionPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTSBCConfirmSubmissionPopupView(e) {
        var t = i.call(this) || this;
        return t._players = e,
        t
    }
    return __extends(UTSBCConfirmSubmissionPopupView, i),
    UTSBCConfirmSubmissionPopupView.prototype.init = function() {
        i.prototype.init.call(this),
        this._btnSubmit.init(),
        this._btnSubmitIgnore.init(),
        this._btnCancel.init(),
        this.render()
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.dealloc = function() {
        this._players = [],
        i.prototype.dealloc.call(this)
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.setPlayers = function(e) {
        this._players = e
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.render = function() {
        var t = this
          , e = services.Localization;
        this.__titleText.textContent = e.localize("sbc.popup.submitchallenge.title"),
        this.__warningText.textContent = e.localize("sbc.popup.submitChallenge.message"),
        this._btnSubmit.setText(e.localize("sbc.popup.submitchallenge.submit")),
        this._btnSubmitIgnore.setText(e.localize("sbc.popup.submitchallenge.submitignore")),
        this._btnCancel.setText(e.localize("common.dialog.cancel")),
        this._players.forEach(function(e) {
            return t.addPlayer(e)
        })
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.getSubmitBtn = function() {
        return this._btnSubmit
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.getSubmitIgnoreBtn = function() {
        return this._btnSubmitIgnore
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.getCancelBtn = function() {
        return this._btnCancel
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.addPlayer = function(e) {
        var t = document.createElement("li");
        t.textContent = e,
        this.__playerList.appendChild(t)
    }
    ,
    UTSBCConfirmSubmissionPopupView
}(EAView));
UTSBCConfirmSubmissionPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-submit");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__warningText = document.createElement("p"),
        i.appendChild(this.__warningText),
        this.__playerList = document.createElement("ul"),
        i.appendChild(this.__playerList),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnSubmit = new UTGroupButtonControl,
        o.appendChild(this._btnSubmit.getRootElement()),
        this._btnSubmitIgnore = new UTGroupButtonControl,
        o.appendChild(this._btnSubmitIgnore.getRootElement()),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        o.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCConfirmSubmissionPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this.__warningText = null,
    this.__playerList = null,
    this._btnSubmit.destroy(),
    this._btnSubmitIgnore.destroy(),
    this._btnCancel.destroy()
}
,
UTSBCConfirmSubmissionPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCConfirmSubmissionPopupViewController = function(i) {
    function UTSBCConfirmSubmissionPopupViewController(e) {
        var t = i.call(this) || this;
        return t.playerNames = e || [],
        t
    }
    return __extends(UTSBCConfirmSubmissionPopupViewController, i),
    UTSBCConfirmSubmissionPopupViewController.prototype.init = function() {
        i.prototype.init.call(this);
        var e = this.getView();
        e.getSubmitBtn().addTarget(this, this.eSubmitBtnTapped, EventType.TAP),
        e.getSubmitIgnoreBtn().addTarget(this, this.eSubmitIgnoreBtnTapped, EventType.TAP),
        e.getCancelBtn().addTarget(this, this.eCancelBtnTapped, EventType.TAP)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.reset = function() {
        this.playerNames = []
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCConfirmSubmissionPopupView(this.playerNames)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.eSubmitBtnTapped = function(e, t, i) {
        this.onExit.notify(UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.eSubmitIgnoreBtnTapped = function(e, t, i) {
        this.onExit.notify(UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.eCancelBtnTapped = function(e, t, i) {
        this.closePopup()
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS = Object.freeze({
        SUBMIT: "submit",
        SUBMIT_IGNORE: "submit-ignore"
    }),
    UTSBCConfirmSubmissionPopupViewController
}(BasePopupViewController)
  , UTSBCItemWarningViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCItemWarningViewModel() {
        var e = t.call(this) || this;
        return e.requests = [],
        e
    }
    return __extends(UTSBCItemWarningViewModel, t),
    UTSBCItemWarningViewModel.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.cancelRequests()
    }
    ,
    UTSBCItemWarningViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            return e.clearObservers()
        }),
        this.requests = [])
    }
    ,
    UTSBCItemWarningViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTSBCItemWarningViewModel.prototype.generateViolationStrings = function(e, n) {
        return e.reduce(function(e, o) {
            var t = o.itemIds.reduce(function(e, t) {
                var i = n.find(function(e) {
                    return e.id === t
                });
                return i ? e.concat(i.getStaticData().name + " - [" + o.name + "]") : e
            }, []);
            return e.concat(t)
        }, [])
    }
    ,
    UTSBCItemWarningViewModel.prototype.requestViolationPlayers = function(e) {
        var t = e.reduce(function(e, t) {
            return e.concat(t.itemIds)
        }, [])
          , i = services.Item.requestItemsById(t);
        return this.requests.push(i.observe(this, this.completeRequest)),
        i
    }
    ,
    UTSBCItemWarningViewModel
}(EAObject))
  , UTSBCSummaryProgressView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCSummaryProgressView() {
        return t.call(this) || this
    }
    return __extends(UTSBCSummaryProgressView, t),
    UTSBCSummaryProgressView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setAllText(e.localize("sbc.requirements.challenge.condensed")),
        this.__progressCount.textContent = e.localize("sbc.requirements.fraction", ["0", "0"]),
        this.setInteractionState(!0)
    }
    ,
    UTSBCSummaryProgressView.prototype.setProgress = function(e, t) {
        this.__progressCount.textContent = services.Localization.localize("sbc.requirements.fraction", [e.toString(), t.toString()]),
        this._progressBar.setProgress(e / t * 100)
    }
    ,
    UTSBCSummaryProgressView.prototype.setText = function(e) {
        this.__requirementsLabel.textContent = e
    }
    ,
    UTSBCSummaryProgressView
}(UTToggleButtonControl));
UTSBCSummaryProgressView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("interactive"),
        e.classList.add("ut-squad-summary-info"),
        this.__requirementsLabel = document.createElement("span"),
        this.__requirementsLabel.classList.add("ut-squad-summary-label"),
        e.appendChild(this.__requirementsLabel);
        var t = document.createElement("div");
        t.classList.add("progress-bar-container"),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        t.appendChild(this._progressBar.getRootElement()),
        this.__progressCount = document.createElement("span"),
        this.__progressCount.classList.add("ut-squad-summary-value--action"),
        this.__progressCount.classList.add("ut-squad-summary-value"),
        t.appendChild(this.__progressCount),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSummaryProgressView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__requirementsLabel = null,
    this._progressBar.destroy(),
    this.__progressCount = null
}
,
UTSBCSummaryProgressView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadSummaryBannerView = function(t) {
    function UTSBCSquadSummaryBannerView() {
        var e = t.call(this) || this;
        return e.onRequirementsSelect = new EAObservable,
        e
    }
    return __extends(UTSBCSquadSummaryBannerView, t),
    UTSBCSquadSummaryBannerView.prototype.init = function() {
        var e = this;
        this._squadStats.init(),
        this._reqProgress.init(),
        this._reqProgress.addTarget(this, function() {
            return e.onRequirementsSelect.notify()
        }, EventType.TAP)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.setRating = function(e, t) {
        this._squadStats.setRating(e, t)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.dealloc = function() {
        this.onRequirementsSelect.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.setChallengeProgress = function(e, t) {
        this._reqProgress.setProgress(e, t)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.getRequirementsButton = function() {
        return this._reqProgress
    }
    ,
    UTSBCSquadSummaryBannerView
}(UTSquadSummaryBannerView);
UTSBCSquadSummaryBannerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("sbc-summary"),
        e.classList.add("ut-squad-summary"),
        this._reqProgress = new UTSBCSummaryProgressView,
        e.appendChild(this._reqProgress.getRootElement()),
        this._squadStats = new UTSBCSquadStatsView,
        e.appendChild(this._squadStats.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSquadSummaryBannerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._reqProgress.destroy(),
    this._squadStats.destroy()
}
,
UTSBCSquadSummaryBannerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadOverviewView = function(e) {
    function UTSBCSquadOverviewView() {
        return e.call(this) || this
    }
    return __extends(UTSBCSquadOverviewView, e),
    UTSBCSquadOverviewView.prototype.init = function() {
        e.prototype.init.call(this),
        this.renderManager = !1
    }
    ,
    UTSBCSquadOverviewView.prototype.getSummaryPanel = function() {
        return this._summaryPanel || (this._summaryPanel = new UTSBCSquadSummaryBannerView,
        this._summaryPanel.onRequirementsSelect.observe(this, this._eRequirementsSelected)),
        this._summaryPanel
    }
    ,
    UTSBCSquadOverviewView.prototype.setSquad = function(e) {
        var t = this;
        this._summaryPanel && this._summaryPanel.setChemistryAndRating(e.getChemistry(), e.getRating());
        var i = this.getSelectedSlot()
          , o = i ? i.getIndex() : -1
          , n = this.renderManager ? e.getFieldPlayers().concat(e.getManager()) : e.getFieldPlayers();
        this._pitch.setSlots(n, {
            renderConcept: this.renderConcepts,
            renderChemistry: this.renderChemistry
        }),
        this._pitch.setLockedSlots(e.getAllBrickIndices()),
        this.leftDock && this.leftDock.setSlots(e.getSubPlayers().concat(e.getReservePlayers()), this.renderConcepts),
        this.slotViews = this.getDropSlotViews(),
        this.slotViews.forEach(function(e) {
            e.addTarget(t, t.onSlotTapped, EventType.TAP),
            e.addTarget(t, t.onSlotMouseEnter, EventType.MOUSEENTER),
            e.addTarget(t, t.onSlotMouseLeave, EventType.MOUSELEAVE)
        }),
        0 <= o && this.selectSlot(o);
        var r = e.getFormation();
        r instanceof UTSquadFormationDTO && this.setFormation(r)
    }
    ,
    UTSBCSquadOverviewView.prototype.setChemistryEntries = function(e) {}
    ,
    UTSBCSquadOverviewView.prototype.setDockLocalization = function() {
        var e;
        null === (e = this.leftDock) || void 0 === e || e.setInstructions(services.Localization.localize("dock.label.workAreaInstructions"))
    }
    ,
    UTSBCSquadOverviewView.prototype._initTabViews = function() {
        this.rightTab = new UTSquadTabButtonControl,
        this.leftDock = new UTSquadSlotDockView,
        this.leftTab = new UTSquadTabButtonControl,
        this.leftTab.init(),
        this.rightTab.init(),
        this.leftDock.init(),
        this.leftTab.addTarget(this, this.onDockBtnPressed.bind(this, this.leftDock, this.leftTab, UTSquadOverviewView.DropAreas.LEFT_DOCK, this.rightDock), EventType.TAP),
        this.leftTab.setText(services.Localization.localize("dock.label.workArea")),
        this.leftTab.assignLeft(),
        this.rightTab.setText(services.Localization.localize("sbc.squad.button.submit")),
        this.rightTab.setType(enums.UISquadTabTypes.ACTION_TAB),
        this.rightTab.assignRight(),
        this.rightTab.addClass("call-to-action"),
        this.leftTab.setType(enums.UISquadTabTypes.WORK_AREA),
        this.leftDock.setIsSBC(!0),
        this.setDockLocalization(),
        this.addSubview(this.leftTab, this.__draggableArea),
        this.addSubview(this.rightTab, this.__draggableArea),
        this.addSubview(this.leftDock, this.__draggableArea),
        this.layoutSubviews()
    }
    ,
    UTSBCSquadOverviewView.prototype.updateChallenge = function(e) {
        this.getSummaryPanel().setChallengeProgress(e.getNumberOfRequirementsMet(), e.eligibilityRequirements.length + 1),
        this.rightTab && (this.rightTab.setText(services.Localization.localize(e.hasExpired() ? "sbc.sets.expired" : "sbc.squad.button.submit")),
        this.rightTab.setInteractionState(e.canSubmit()))
    }
    ,
    UTSBCSquadOverviewView.prototype._eRequirementsSelected = function(e) {
        this._triggerActions("sbcRequirementSelect")
    }
    ,
    UTSBCSquadOverviewView.prototype.getRequirementsButton = function() {
        return this._summaryPanel.getRequirementsButton()
    }
    ,
    UTSBCSquadOverviewView
}(UTSquadOverviewView);
function UTSBCSquadOverviewViewController() {
    UTSquadOverviewViewController.call(this),
    this._set = null,
    this._challenge = null,
    this._viewmodel = new UTSBCItemWarningViewModel
}
NamespaceManager.Register("controllers.squads"),
JSUtils.inherits(UTSBCSquadOverviewViewController, UTSquadOverviewViewController),
UTSBCSquadOverviewViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        isPhone() && e.addTarget(this, this._eRequirementsSelected, "sbcRequirementSelect"),
        e.getRightTab().addTarget(this, this._eSubmitSelected, EventType.TAP)
    }
}
,
UTSBCSquadOverviewViewController.prototype.initWithSBCSet = function initWithSBCSet(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC Set entity."),
    DebugUtils.Assert(JSUtils.isNumber(t) && 0 <= t, "Initialization expected a valid SBC Challenge ID."),
    this._set = e,
    this._challenge = e.getChallenge(t),
    DebugUtils.Assert(this._challenge instanceof UTSBCChallengeEntity, "Initialization expected a valid SBC Challenge."),
    this.initWithSquad(this._challenge.squad))
}
,
UTSBCSquadOverviewViewController.prototype.dealloc = function dealloc() {
    this._challenge.onSave.unobserve(this),
    this._viewmodel.dealloc(),
    this.superclass(),
    this._set = null,
    this._challenge = null,
    this._viewmodel = null
}
,
UTSBCSquadOverviewViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSBCSquadOverviewView
}
,
UTSBCSquadOverviewViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "SBC - Squad"
}
,
UTSBCSquadOverviewViewController.prototype._trackPageView = function _trackPageView() {
    TelemetryManager.trackPage(TelemetryManager.Sections.SBC, this._getTelemetryId())
}
,
UTSBCSquadOverviewViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._challenge ? this._challenge.name : ""
}
,
UTSBCSquadOverviewViewController.prototype._pushSquadToView = function _pushSquadToView(e) {
    this.superclass(e);
    var t = this.getView();
    t.setMode("sbc");
    var i = this._set ? this._set.getChallenge(this._challenge.id) : null;
    i && t.updateChallenge(i)
}
,
UTSBCSquadOverviewViewController.prototype._submitChallenge = function _submitChallenge(e) {
    if (this._challenge.canSubmit())
        if (!services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE) && this._challenge.hasUntradeableItems())
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED);
        else if (JSUtils.isValid(this._set)) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Submit Challenge");
            var t = JSUtils.isBoolean(e) ? e : services.UserSettings.getSBCValidationSkip();
            services.SBC.submitChallenge(this._challenge, this._set, t, services.Chemistry.isFeatureEnabled()).observe(this, this._onChallengeSubmitted)
        } else
            services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE]);
    else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD)
}
,
UTSBCSquadOverviewViewController.prototype._onPopupClosed = function _onPopupClosed(e, t) {
    e.unobserve(this),
    t && t !== enums.UIDialogOptions.CANCEL && (t === UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE && services.UserSettings.setSBCValidationSkip(!0),
    this._submitChallenge(!0))
}
,
UTSBCSquadOverviewViewController.prototype._onChallengeSubmitted = function _onChallengeSubmitted(e, t) {
    var i = this;
    e.unobserve(this);
    function Fta(e) {
        if (e && 0 < o.awards.length) {
            var t = new UTGameRewardsViewController(o.awards);
            t.init(),
            t.modalDisplayDimensions.width = "24em",
            t.getView().setSbcSet(o),
            gPopupClickShield.setActivePopup(t),
            repositories.Item.setDirty(ItemPile.PURCHASED)
        }
    }
    var o = this._set;
    if (t.success) {
        if (0 < this._challenge.awards.length) {
            var n = new UTGameRewardsViewController(this._challenge.awards);
            n.init(),
            n.modalDisplayDimensions.width = "24em",
            n.getView().setSbcChallenge(this._challenge),
            gPopupClickShield.setActivePopup(n),
            n.onExit.observe(this, function(e) {
                e.unobserve(i),
                Fta(t.data.setCompleted)
            })
        } else
            t.data.setCompleted && Fta(t.data.setCompleted);
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: "SBC - Rewards Overlay"
        }),
        this.getNavigationController().popViewController()
    } else if (t.error && t.error.code === UtasErrorCode.CHEMISTRY_VERSION_MISMATCH) {
        var r = services.Localization
          , a = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: r.localize("sbcChallenge.failedToSubmit.chemistry-version-sync.description"),
            title: r.localize("sbcChallenge.failedToSubmit.chemistry-version-sync.title")
        });
        a.init(),
        a.modalDisplayDimensions.width = "380px",
        a.onExit.observe(this, function(e, t) {
            e.unobserve(this),
            services.Chemistry.resetCustomProfiles(),
            services.Chemistry.requestChemistryProfiles().observe(this, function(e, t) {
                services.SBC.getCachedSBCSquads().map(function(e) {
                    e.updateChemistry(),
                    e.update(e),
                    this._challenge.squad === e && this._pushSquadToView(e)
                }
                .bind(this))
            })
        }),
        gPopupClickShield.setActivePopup(a)
    } else if (t.data && 0 < t.data.itemViolations.length) {
        var s = t.data.itemViolations;
        this._viewmodel.requestViolationPlayers(s).observe(this, function(e, t) {
            e.unobserve(this);
            var i = JSUtils.isObject(t.response) ? this._viewmodel.generateViolationStrings(s, t.response.items) : []
              , o = new UTSBCConfirmSubmissionPopupViewController(i);
            o.onExit.observe(this, this._onPopupClosed),
            o.modalDisplayDimensions.width = "400px",
            gPopupClickShield.setActivePopup(o)
        })
    } else
        t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE ? NetworkErrorManager.handleStatus(t.error.code) : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().showGameView()) : this._challenge.hasExpired() ? (services.Notification.queue([services.Localization.localize("notification.sbcChallenges.expired"), UINotificationType.NEGATIVE]),
        this.getNavigationController().popToRootViewController()) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE])
}
,
UTSBCSquadOverviewViewController.prototype._gotoDetailsView = function _gotoDetailsView(e) {
    var t = this.getNavigationController();
    if (t) {
        var i = new UTSquadItemDetailsNavigationController;
        this._challenge ? i.initWithSBCChallenge(this._challenge, e) : i.init(),
        i.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        t.pushViewController(i)
    }
}
,
UTSBCSquadOverviewViewController.prototype._eItemSwap = function _eItemSwap(e, t, i) {
    var o = JSUtils.isNumber(i.swapFrom) ? i.swapFrom : -1
      , n = JSUtils.isNumber(i.swapTo) ? i.swapTo : -1
      , r = this._squad.getSlot(o)
      , a = this._squad.getSlot(n)
      , s = r.generalPosition == PlayerPosition.GK
      , l = a.generalPosition == PlayerPosition.GK
      , c = r.item.isCarson()
      , d = a.item.isCarson();
    if (s && d || l && c)
        return utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.PLAYER_NOT_ELIGIBLE, {
            params: []
        }),
        this.updateSlot(r),
        this.updateSlot(a),
        void this._updateDragDrop();
    this._squad.swapPlayersByIndex(o, n),
    this._set && services.SBC.saveChallenge(this._challenge).observe(this, this._onSBCSaveComplete),
    this.onItemSwap.notify(o, n),
    this.getView().updatePitchChemistry(this._squad.getFieldPlayers())
}
,
UTSBCSquadOverviewViewController.prototype._onSBCSaveComplete = function _onSBCSaveComplete(e, t) {
    if (e.unobserve(this),
    t.success)
        this.getView().updateChallenge(this._challenge);
    else {
        if (t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE)
            return void NetworkErrorManager.handleStatus(t.error.code);
        var i = "notification.sbcChallenges.failedToSave";
        this._challenge.hasExpired() ? i = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (i = "sbc.notification.disabled"),
        services.Notification.queue([services.Localization.localize(i), UINotificationType.NEGATIVE])
    }
}
,
UTSBCSquadOverviewViewController.prototype._eRequirementsSelected = function _eRequirementsSelected() {
    var e = new UTSBCRequirementsPopupViewController(this._set,this._challenge.id,!0);
    e.onExit.observe(this, this._ePopupClosed),
    e.onConfirm.observe(this, this._ePopupSubmitSelected),
    isPhone() ? e.modalDisplayDimensions.width = "400px" : e.modalDisplayDimensions.minWidth = "400px",
    gPopupClickShield.setActivePopup(e)
}
,
UTSBCSquadOverviewViewController.prototype._ePopupSubmitSelected = function _ePopupSubmitSelected() {
    this._submitChallenge()
}
,
UTSBCSquadOverviewViewController.prototype._ePopupClosed = function _ePopupClosed() {
    this.getView().getRequirementsButton().setChecked(!1)
}
,
UTSBCSquadOverviewViewController.prototype._eSubmitSelected = function _eSubmitSelected() {
    this._submitChallenge()
}
,
UTSBCSquadOverviewViewController.prototype._eSquadDataChange = function _eSquadDataChange() {
    this._squad && this._pushSquadToView(this._squad)
}
,
UTSBCSquadOverviewViewController.prototype._eDetailsButtonSelected = function _eDetailsButtonSelected() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTSBCSquadDetailPanelViewController;
        t.initWithSBCSet(this._set, this._challenge.id),
        e.pushViewController(t, !0)
    }
}
,
UTSBCSquadOverviewViewController.prototype._nInfoStateChanged = function _nInfoStateChanged() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - SBC Squad")
}
,
NamespaceManager.Register("interfaces"),
interfaces.SquadBuildingChallengeActionDelegate = function() {}
,
interfaces.SquadBuildingChallengeActionDelegate.prototype.conforms = function conforms() {}
,
interfaces.SquadBuildingChallengeActionDelegate.prototype.submitChallenge = function submitChallenge() {}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadDetailPanelView = function(t) {
    function UTSBCSquadDetailPanelView() {
        return t.call(this) || this
    }
    return __extends(UTSBCSquadDetailPanelView, t),
    UTSBCSquadDetailPanelView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._btnSquadBuilder.init(),
        this._btnClearSquad.init(),
        this._btnExchange.init(),
        this._btnSquadBuilder.setText(e.localize("infopanel.button.squadbuilder")),
        this._btnClearSquad.setText(e.localize("infopanel.button.clear")),
        this._btnExchange.setText(e.localize("sbc.overlay.btn.submitChallenge")),
        this._challengeDetails.init(),
        this._challengeDetails.addTarget(this, this.bubbleEvent, enums.UIListEvent.ROW_SELECT),
        isPhone() && this._btnExchange.hide()
    }
    ,
    UTSBCSquadDetailPanelView.prototype.setRequirements = function(e, t) {
        this._challengeDetails.setChallengeRequirements(e, t)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.render = function(e, t, i, o) {
        this._challengeDetails.renderWithTableRows(e, t, i, o, !0),
        this._expiresLabel.setEndTime(e.endTime || 0),
        this._expiresLabel.setExpiryState(!e.notExpirable),
        this._expiresLabel.start();
        var n = services.Localization;
        e.repeatable ? this.__repeatableLabel.textContent = n.localize("tile.sbcSets.repeatable") : (DOMKit.addClass(this.__repeatableStatus, "no-repeat"),
        this.__repeatableLabel.textContent = n.localize("sbc.status.notrepeatable")),
        DOMKit.toggleClass(this.__expireStatus, "no-expire", e.notExpirable)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.toggleExchangeState = function(e) {
        this._btnExchange.setInteractionState(e)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.toggleClearState = function(e) {
        this._btnClearSquad.setInteractionState(e)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.getSquadBuilderButton = function() {
        return this._btnSquadBuilder
    }
    ,
    UTSBCSquadDetailPanelView.prototype.getClearSquadButton = function() {
        return this._btnClearSquad
    }
    ,
    UTSBCSquadDetailPanelView.prototype.getExchangeButton = function() {
        return this._btnExchange
    }
    ,
    UTSBCSquadDetailPanelView.prototype.bubbleEvent = function(e, t, i) {
        this._triggerActions(t, i)
    }
    ,
    UTSBCSquadDetailPanelView
}(EATargetActionView);
function UTSBCSquadDetailPanelViewController() {
    EAViewController.call(this),
    this._set = null,
    this._challenge = null,
    this._challengeActionDelegate = null,
    this._viewmodel = new UTSBCItemWarningViewModel
}
UTSBCSquadDetailPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("SquadPanel"),
        e.classList.add("SBCSquadPanel"),
        this.__content = document.createElement("div"),
        this.__content.classList.add("challenge-content"),
        this._challengeDetails = new UTSBCChallengeDetailsView,
        this.__content.appendChild(this._challengeDetails.getRootElement());
        var t = document.createElement("div");
        t.classList.add("sbc-button-container"),
        this._btnExchange = new UTStandardButtonControl,
        this._btnExchange.getRootElement().classList.add("call-to-action"),
        t.appendChild(this._btnExchange.getRootElement()),
        this._btnSquadBuilder = new UTStandardButtonControl,
        t.appendChild(this._btnSquadBuilder.getRootElement()),
        this._btnClearSquad = new UTStandardButtonControl,
        t.appendChild(this._btnClearSquad.getRootElement()),
        this.__content.appendChild(t),
        e.appendChild(this.__content),
        this.__statusContainer = document.createElement("footer"),
        this.__statusContainer.classList.add("sbc-status-container"),
        this.__repeatableStatus = document.createElement("div"),
        this.__repeatableStatus.classList.add("repeat"),
        this.__repeatableStatus.classList.add("status"),
        this.__repeatableLabel = document.createElement("span"),
        this.__repeatableLabel.classList.add("label"),
        this.__repeatableLabel.appendChild(document.createTextNode("Repeatable")),
        this.__repeatableStatus.appendChild(this.__repeatableLabel),
        this.__statusContainer.appendChild(this.__repeatableStatus),
        this.__expireStatus = document.createElement("div"),
        this.__expireStatus.classList.add("expires"),
        this.__expireStatus.classList.add("status"),
        this._expiresLabel = new UTSBCTimerLabelView,
        this.__expireStatus.appendChild(this._expiresLabel.getRootElement()),
        this.__statusContainer.appendChild(this.__expireStatus),
        e.appendChild(this.__statusContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSquadDetailPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__content = null,
    this._challengeDetails.destroy(),
    this._btnExchange.destroy(),
    this._btnSquadBuilder.destroy(),
    this._btnClearSquad.destroy(),
    this.__statusContainer = null,
    this.__repeatableStatus = null,
    this.__repeatableLabel = null,
    this.__expireStatus = null,
    this._expiresLabel.destroy()
}
,
UTSBCSquadDetailPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.squads"),
JSUtils.inherits(UTSBCSquadDetailPanelViewController, EAViewController),
UTSBCSquadDetailPanelViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.getSquadBuilderButton().addTarget(this, this._eSquadBuilderSelected, EventType.TAP),
        e.getClearSquadButton().addTarget(this, this._eSquadClearSelected, EventType.TAP),
        e.getExchangeButton().addTarget(this, this._eSquadExchange, EventType.TAP),
        e.addTarget(this, this._eTableCellSelected, enums.UIListEvent.ROW_SELECT)
    }
}
,
UTSBCSquadDetailPanelViewController.prototype.initWithSBCSet = function initWithChallenge(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC set entity."),
    DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected Challenge ID to be a number."),
    this._set = e,
    this._challenge = e.challenges.get(t),
    DebugUtils.Assert(this._challenge instanceof UTSBCChallengeEntity, "Initialization expected a valid SBC challenge."),
    this._challenge.onDataChange.observe(this, this._eChallengeUpdated),
    this._challenge.onSave.observe(this, this._eChallengeUpdated),
    this.getView().toggleExchangeState(this._challenge.canSubmit()),
    this.getView().toggleClearState(!this._challenge.squad.isSquadEmpty()),
    this.init())
}
,
UTSBCSquadDetailPanelViewController.prototype.dealloc = function dealloc() {
    this._challenge.onDataChange.unobserve(this),
    this._challenge.onSave.unobserve(this),
    this._viewmodel.dealloc(),
    this.superclass(),
    this._set = null,
    this._challenge = null,
    this._viewmodel = null
}
,
UTSBCSquadDetailPanelViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSBCSquadDetailPanelView
}
,
UTSBCSquadDetailPanelViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "SBC Squad Details"
}
,
UTSBCSquadDetailPanelViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._challenge ? this._challenge.name : ""
}
,
UTSBCSquadDetailPanelViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getView().render(this._challenge, this._set.hidden ? this._set.awards : [], !0, this._set.isSingleChallenge, !0)
}
,
UTSBCSquadDetailPanelViewController.prototype.setSquadBuildingChallengeActionDelegate = function setSquadBuildingChallengeActionDelegate(e) {
    e.conforms(interfaces.SquadBuildingChallengeActionDelegate) && (this._challengeActionDelegate = e)
}
,
UTSBCSquadDetailPanelViewController.prototype._eChallengeUpdated = function _eChallengeUpdated() {
    var e = this.getView();
    e.setRequirements(this._challenge, !0),
    e.toggleExchangeState(this._challenge.canSubmit()),
    e.toggleClearState(this._challenge.squad && !this._challenge.squad.isSquadEmpty())
}
,
UTSBCSquadDetailPanelViewController.prototype._eSquadBuilderSelected = function _eSquadBuilderSelected() {
    var e = new UTSquadBuilderViewController;
    this._challenge ? e.initWithChallenge(this._challenge) : e.init(),
    this.getNavigationController().pushViewController(e, !0)
}
,
UTSBCSquadDetailPanelViewController.prototype._eSquadClearSelected = function _eSquadClearSelected() {
    utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CLEAR_SQUAD, {
        params: []
    }, function _onClearConfirm() {
        this._challenge.squad.removeAllItems() && services.SBC.saveChallenge(this._challenge).observe(this, this._onSBCSaveComplete)
    }
    .bind(this))
}
,
UTSBCSquadDetailPanelViewController.prototype._onSBCSaveComplete = function _onSBCSaveComplete(e, t) {
    if (e.unobserve(this),
    t.success)
        services.Notification.queue([services.Localization.localize("notification.squad.cleared"), UINotificationType.NEUTRAL]);
    else {
        var i = "notification.sbcChallenges.failedToSave";
        this._challenge.hasExpired() ? i = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (i = "sbc.notification.disabled"),
        services.Notification.queue([services.Localization.localize(i), UINotificationType.NEGATIVE])
    }
}
,
UTSBCSquadDetailPanelViewController.prototype._onPopupClosed = function _onPopupClosed(e, t) {
    e.unobserve(this),
    t && t !== enums.UIDialogOptions.CANCEL && (t === UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE && services.UserSettings.setSBCValidationSkip(!0),
    this._submitChallenge(!0))
}
,
UTSBCSquadDetailPanelViewController.prototype._submitChallenge = function _submitChallenge(e) {
    if (this._challenge.canSubmit())
        if (!services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE) && this._challenge.hasUntradeableItems())
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED);
        else if (JSUtils.isValid(this._set)) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Submit Challenge");
            var t = JSUtils.isBoolean(e) ? e : services.UserSettings.getSBCValidationSkip();
            services.SBC.submitChallenge(this._challenge, this._set, t, services.Chemistry.isFeatureEnabled()).observe(this, this._onChallengeSubmitted)
        } else
            services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE]);
    else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD)
}
,
UTSBCSquadDetailPanelViewController.prototype._onChallengeSubmitted = function _onChallengeSubmitted(e, t) {
    var i = this;
    e.unobserve(this);
    function Hva(e) {
        if (e && 0 < o.awards.length) {
            var t = new UTGameRewardsViewController(o.awards);
            t.init(),
            t.modalDisplayDimensions.width = "24em",
            t.getView().setSbcSet(o),
            gPopupClickShield.setActivePopup(t)
        }
    }
    var o = this._set;
    if (t.success) {
        if (0 < this._challenge.awards.length) {
            var n = new UTGameRewardsViewController(this._challenge.awards);
            n.init(),
            n.modalDisplayDimensions.width = "24em",
            n.getView().setSbcChallenge(this._challenge),
            gPopupClickShield.setActivePopup(n),
            n.onExit.observe(this, function(e) {
                e.unobserve(i),
                Hva(t.data.setCompleted)
            })
        } else
            t.data.setCompleted && Hva(t.setCompleted);
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: "SBC - Rewards Overlay"
        }),
        this.getNavigationController().popViewController()
    } else if (t.error && t.error.code === UtasErrorCode.CHEMISTRY_VERSION_MISMATCH) {
        var r = services.Localization
          , a = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: r.localize("sbcChallenge.failedToSubmit.chemistry-version-sync.description"),
            title: r.localize("sbcChallenge.failedToSubmit.chemistry-version-sync.title")
        });
        a.init(),
        a.modalDisplayDimensions.width = "380px",
        a.onExit.observe(this, function(e, t) {
            e.unobserve(this),
            services.Chemistry.resetCustomProfiles(),
            services.Chemistry.requestChemistryProfiles().observe(this, function(e, t) {
                services.SBC.getCachedSBCSquads().map(function(e) {
                    e.updateChemistry(),
                    e.update(e),
                    this._challenge.squad === e && this._pushSquadToView(e)
                }
                .bind(this))
            })
        }),
        gPopupClickShield.setActivePopup(a)
    } else if (t.data && 0 < t.data.itemViolations.length) {
        var s = t.data.itemViolations;
        this._viewmodel.requestViolationPlayers(s).observe(this, function(e, t) {
            e.unobserve(this);
            var i = JSUtils.isObject(t.response) ? this._viewmodel.generateViolationStrings(s, t.response.items) : []
              , o = new UTSBCConfirmSubmissionPopupViewController(i);
            o.onExit.observe(this, this._onPopupClosed),
            o.modalDisplayDimensions.width = "400px",
            gPopupClickShield.setActivePopup(o)
        })
    } else
        t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE ? NetworkErrorManager.handleStatus(t.error.code) : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().showGameView()) : this._challenge.hasExpired() ? (services.Notification.queue([services.Localization.localize("notification.sbcChallenges.expired"), UINotificationType.NEGATIVE]),
        this.getNavigationController().popToRootViewController()) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE])
}
,
UTSBCSquadDetailPanelViewController.prototype._eSquadExchange = function _eSquadExchange() {
    this._challengeActionDelegate ? this._challengeActionDelegate.submitChallenge(this, this._challenge, this._set) : this._submitChallenge()
}
,
UTSBCSquadDetailPanelViewController.prototype._eTableCellSelected = function _eTableCellSelected(e, t, i) {
    if (i.item && i.item.isValid() && i.item.isPlayer() && JSUtils.isValid(i.item.getMetaData())) {
        var o = new UTPlayerBioViewController;
        o.initWithItem(i.item),
        this.getNavigationController().pushViewController(o)
    } else
        services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
}
,
NamespaceManager.Register("controllers.navigation"),
controllers.navigation.SBCSquadDetails = function SBCSquadDetailNavigationController(e, t) {
    UTNavigationController.call(this, e, t),
    this.onSearchStarted = new EAObservable,
    Object.defineProperty(this, "onSearchStarted", {
        writable: !1
    }),
    this.onSearchEnded = new EAObservable,
    Object.defineProperty(this, "onSearchEnded", {
        writable: !1
    })
}
,
JSUtils.inherits(controllers.navigation.SBCSquadDetails, UTNavigationController),
controllers.navigation.SBCSquadDetails.prototype.initWithSBCSet = function initWithSBCSet(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC set entity."),
    DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected Challenge ID to be a number."),
    this.getRootController().initWithSBCSet(e, t),
    this.init())
}
,
controllers.navigation.SBCSquadDetails.prototype.dealloc = function dealloc() {
    this.onSearchStarted.dealloc(),
    this.onSearchEnded.dealloc(),
    this.superclass(),
    this.onSearchStarted = null,
    this.onSearchEnded = null
}
,
controllers.navigation.SBCSquadDetails.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return new UTSBCSquadDetailPanelViewController
}
,
controllers.navigation.SBCSquadDetails.prototype.didPush = function didPush(e) {
    e === this.getRootController() && this.setNavigationVisibility(!1, !0)
}
,
controllers.navigation.SBCSquadDetails.prototype.setSquadBuildingChallengeActionDelegate = function setSquadBuildingChallengeActionDelegate(e) {
    this.getRootController().setSquadBuildingChallengeActionDelegate(e)
}
,
controllers.navigation.SBCSquadDetails.prototype.show = function show(e, t) {
    this.superclass(e, t),
    e instanceof UTSquadBuilderViewController ? this.onSearchStarted.notify() : e instanceof UTSBCSquadDetailPanelViewController && this.onSearchEnded.notify()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTManagerBioView = function(e) {
    function UTManagerBioView() {
        return e.call(this) || this
    }
    return __extends(UTManagerBioView, e),
    UTManagerBioView.prototype.setupNavigation = function(e) {
        var t = services.Localization;
        this._navigation.clearTabs(),
        this._navigation.addTab(ManagerBioDisplayGroup.INFO, t.localize("extendedPlayerInfo.tab.general")),
        this._navigation.addTab(ManagerBioDisplayGroup.TACTICAL_PRESET, t.localize("extendedManagerInfo.tab.preset")),
        this._navigation.setActiveTab(PlayerBioDisplayGroup.INFO),
        this._navigation.addTarget(this, e, EventType.TAP),
        this._navigation.layoutSubviews()
    }
    ,
    UTManagerBioView.prototype.render = function(e, t, i) {
        switch (DOMKit.empty(this.__dataDisplay),
        this.clearComponentList(),
        e) {
        case ManagerBioDisplayGroup.INFO:
            this.renderInfo(t);
            break;
        case ManagerBioDisplayGroup.TACTICAL_PRESET:
            this.renderTacticalInfo(t, i)
        }
    }
    ,
    UTManagerBioView.prototype.renderInfo = function(e) {
        var t = e.getStaticData()
          , i = services.Localization;
        this.createHeader(this.__dataDisplay, i.localize("extendedManagerInfo.header", [], {
            gender: e.gender
        }));
        var o = this.createItemBioListView(this.__dataDisplay);
        this.createItemBioRowView(o, i.localize("extendedPlayerInfo.general.firstName"), t.firstName + " " + t.lastName),
        this.createItemBioRowView(o, i.localize("extendedPlayerInfo.general.knownAs", [], {
            gender: e.gender
        }), t.knownAs),
        this.createItemBioRowView(o, i.localize("extendedPlayerInfo.general.nation"), UTLocalizationUtil.nationIdToName(e.nationId, i)),
        this.createItemBioRowView(o, i.localize("extendedManagerInfo.general.currentLeague"), UTLocalizationUtil.leagueIdToName(e.leagueId, i)),
        this.createHeader(this.__dataDisplay, i.localize("extendedPlayerInfo.general.itemDetails")),
        o.render();
        var n = this.createItemBioListView(this.__dataDisplay);
        this.createItemBioRowView(n, i.localize("extendedManagerInfo.general.boughtFor"), e.lastSalePrice.toString()),
        this.createItemBioRowView(n, i.localize("extendedPlayerInfo.general.numberOfOwners"), e.owners.toString()),
        this.createItemBioRowView(n, i.localize("extendedPlayerInfo.general.tradeStatus"), e.untradeable ? i.localize("extendedManagerInfo.general.untradeable") : i.localize("extendedManagerInfo.general.tradeable"));
        var r = i.localize("extendedPlayerInfo.details.cards", [e.getTotalGamesPlayed().toString(), Math.max(0, e.getTotalGamesPlayed() - e.getGamesPlayed()).toString(), e.getGamesPlayed().toString()])
          , a = i.localize("extendedPlayerInfo.details.cards", [e.getTotalWins().toString(), Math.max(0, e.getTotalWins() - e.getWinAtCurrentClub()).toString(), e.getTotalWins().toString()])
          , s = i.localize("extendedPlayerInfo.details.cards", [e.getTotalLosses().toString(), Math.max(0, e.getTotalLosses() - e.getLossesAtCurrentClub()).toString(), e.getTotalLosses().toString()])
          , l = i.localize("extendedPlayerInfo.details.cards", [e.getTotalDraws().toString(), Math.max(0, e.getTotalDraws() - e.getDrawsAtCurrentClub()).toString(), e.getTotalDraws().toString()])
          , c = i.localize("extendedPlayerInfo.details.cards", [e.getTotalCleanSheets().toString(), Math.max(0, e.getTotalCleanSheets() - e.getCleanSheetsAtCurrentClub()).toString(), e.getTotalCleanSheets().toString()]);
        this.createItemBioRowView(n, i.localize("extendedPlayerInfo.general.gamesPlayed"), r),
        this.createItemBioRowView(n, i.localize("extendedManagerInfo.general.wins"), a),
        this.createItemBioRowView(n, i.localize("extendedManagerInfo.general.losses"), s),
        this.createItemBioRowView(n, i.localize("extendedManagerInfo.general.draws"), l),
        this.createItemBioRowView(n, i.localize("extendedManagerInfo.general.cleansheets"), c),
        n.render(),
        this.layoutSubviews()
    }
    ,
    UTManagerBioView.prototype.renderTacticalInfo = function(e, t) {
        var i = services.Localization;
        this.createHeader(this.__dataDisplay, i.localize("extendedManagerInfo.general.preset"));
        var o = this.createItemBioListView(this.__dataDisplay);
        this.createItemBioRowView(o, i.localize("extendedManagerInfo.general.tacticalPreset"), t.name);
        var n = repositories.Squad.getFormationById(t.formation.id);
        n && this.createItemBioRowView(o, i.localize("extendedManagerInfo.general.formation"), UTLocalizationUtil.formationDbNameToName(n.name, i)),
        this.createItemBioRowView(o, i.localize("extendedManagerInfo.general.buildUpStyle"), i.localize("tactics.style.offensive." + t.offensiveStyleId)),
        this.createItemBioRowView(o, i.localize("extendedManagerInfo.general.defensiveStyle"), i.localize("tactics.style.defensive." + t.defensiveStyleId)),
        o.render(),
        this.layoutSubviews()
    }
    ,
    UTManagerBioView
}(UTItemBioView);
UTManagerBioView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("article");
        e.classList.add("ut-pinned-list-container"),
        e.classList.add("ut-manager-bio-view"),
        this.__pinnedDiv = document.createElement("div"),
        e.appendChild(this.__pinnedDiv),
        this._navigation = new EAFilterBarView,
        e.appendChild(this._navigation.getRootElement()),
        this.__scrollerDiv = document.createElement("div"),
        this.__scrollerDiv.classList.add("ut-pinned-list"),
        this.__dataDisplay = document.createElement("div"),
        this.__scrollerDiv.appendChild(this.__dataDisplay),
        e.appendChild(this.__scrollerDiv),
        this.__root = e,
        this._generated = !0
    }
}
,
UTManagerBioView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__pinnedDiv = null,
    this._navigation.destroy(),
    this.__scrollerDiv = null,
    this.__dataDisplay = null
}
,
UTManagerBioView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTManagerBioViewController = function(o) {
    function UTManagerBioViewController() {
        var e = o.call(this) || this;
        return e.pinnedItem = null,
        e.pinnedItemController = new UTPinnedItemViewController,
        e.viewModel = new UTItemListViewModel([]),
        e
    }
    return __extends(UTManagerBioViewController, o),
    UTManagerBioViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        TelemetryManager.trackPage(TelemetryManager.Sections.MISC, "ManagerBio"))
    }
    ,
    UTManagerBioViewController.prototype.initWithItem = function(e) {
        var t, i;
        this.initialized || (DebugUtils.Assert(e instanceof UTItemEntity, "Initialization expected an item entity."),
        this.pinnedItem = e,
        null === (t = this.viewModel) || void 0 === t || t.add(e),
        null === (i = this.pinnedItemController) || void 0 === i || i.initWithItem(e),
        this.init())
    }
    ,
    UTManagerBioViewController.prototype.dealloc = function() {
        var e, t, i;
        null === (e = this.pinnedItemController) || void 0 === e || e.dealloc(),
        null === (t = this.viewModel) || void 0 === t || t.resetCollection([]),
        null === (i = this.viewModel) || void 0 === i || i.stopAuctionUpdates(),
        this.pinnedItemController = null,
        this.pinnedItem = null,
        this.viewModel = null,
        o.prototype.dealloc.call(this)
    }
    ,
    UTManagerBioViewController.prototype.viewDidAppear = function() {
        var i = this;
        o.prototype.viewDidAppear.call(this),
        this.pinnedItem && this.pinnedItem.isManager() && this.pinnedItem.isSpecial() ? (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.PlayerMetaData.updateItemPlayerMeta([this.pinnedItem]).observe(this, function(e, t) {
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            i.render()
        })) : this.render()
    }
    ,
    UTManagerBioViewController.prototype.viewWillDisappear = function() {
        var e;
        o.prototype.viewWillDisappear.call(this),
        null === (e = this.viewModel) || void 0 === e || e.stopAuctionUpdates()
    }
    ,
    UTManagerBioViewController.prototype._getViewInstanceFromData = function() {
        return new UTManagerBioView
    }
    ,
    UTManagerBioViewController.prototype.getNavigationTitle = function() {
        var e, t, i = null !== (t = null === (e = this.pinnedItem) || void 0 === e ? void 0 : e.gender) && void 0 !== t ? t : GrammaticalGender.NEUTER;
        return services.Localization.localize("navbar.label.managerBio", [], {
            gender: i
        })
    }
    ,
    UTManagerBioViewController.prototype.render = function() {
        var e, t, i = this.getView();
        i.setupNavigation(this.eNavSelected.bind(this)),
        this.pinnedItemController && (i.appendPinnedItemView(this.pinnedItemController.getView()),
        this.renderManagerBioTab(ManagerBioDisplayGroup.INFO)),
        isPhone() && (null === (e = this.viewModel) || void 0 === e || e.startAuctionUpdates()),
        i.layoutSubviews(),
        i.calculateHeights(),
        null === (t = this.getNavigationController()) || void 0 === t || t.setNavigationVisibility(!0)
    }
    ,
    UTManagerBioViewController.prototype.renderManagerBioTab = function(e) {
        var t = this.getView();
        if (this.pinnedItem && this.pinnedItem.isManager()) {
            var i = services.Squad.getManagerPresetById(this.pinnedItem.id);
            i ? t.render(e, this.pinnedItem, i) : (DebugUtils.Assert(!1, "UTManagerBioViewController::renderManagerBio. Requires a manager preset."),
            services.Notification.queue([services.Localization.localize("managerbio.unavailable"), UINotificationType.NEGATIVE]))
        } else {
            DebugUtils.Assert(!1, "UTManagerBioViewController::renderManagerBio. Requires a manager item to be pinned."),
            services.Notification.queue([services.Localization.localize("managerbio.unavailable"), UINotificationType.NEGATIVE]);
            var o = this.getNavigationController();
            o && (null == o || o.popViewController())
        }
    }
    ,
    UTManagerBioViewController.prototype.eNavSelected = function(e, t, i) {
        this.renderManagerBioTab(i.id)
    }
    ,
    UTManagerBioViewController
}(EAViewController)
  , UTSlotActionPanelView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSlotActionPanelView() {
        return t.call(this) || this
    }
    return __extends(UTSlotActionPanelView, t),
    UTSlotActionPanelView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._btnBio.init(),
        this._btnManagerPreset.init(),
        this._btnApplyConsumable.init(),
        this._btnAddSwap.init(),
        this._btnTransfer.init(),
        this._btnSearchMarket.init(),
        this._btnSearchSlot.init(),
        this._btnRemove.init(),
        this._btnDiscard.init(),
        this._btnBio.setText(e.localize("extendedPlayerInfo.general.playerBio")),
        this._btnManagerPreset.setText(e.localize("infopanel.label.applyPreset")),
        this._btnApplyConsumable.setText(e.localize("panel.applyitem.button")),
        this._btnTransfer.setText(e.localize("infopanel.label.sendTradePile")),
        this._btnSearchMarket.setText(e.localize("infopanel.label.findallitems")),
        this._btnSearchSlot.setText(e.localize("infopanel.button.searchslot")),
        this._btnRemove.setText(e.localize("infopanel.button.removefromsquad")),
        this._btnDiscard.setText(e.localize("infopanel.label.quickSell")),
        this._btnBio.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnManagerPreset.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnApplyConsumable.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnAddSwap.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnTransfer.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnSearchMarket.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnSearchSlot.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnRemove.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnDiscard.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnDiscard.displayCurrencyIcon(!0),
        this.__positionLabel.textContent = e.localize("card.desc.training.gkattribabbr.Position") + " ",
        this.setInteractionState(!0)
    }
    ,
    UTSlotActionPanelView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this._btnBio.setInteractionState(e),
        this._btnManagerPreset.setInteractionState(e),
        this._btnApplyConsumable.setInteractionState(e),
        this._btnAddSwap.setInteractionState(e),
        this._btnTransfer.setInteractionState(e),
        this._btnSearchMarket.setInteractionState(e),
        this._btnSearchSlot.setInteractionState(e),
        this._btnRemove.setInteractionState(e),
        this._btnDiscard.setInteractionState(e)
    }
    ,
    UTSlotActionPanelView.prototype.setItem = function(e, t) {
        var i = services.Localization;
        this._btnBio.setText(i.localize("extendedPlayerInfo.general.playerBio", [], {
            gender: e.gender
        }));
        var o, n, r, a = i.localize("card.desc.training.gkattribabbr.Position", [], {
            gender: e.gender
        }), s = e.isPlayer() ? "extendedPlayerInfo.general.playerBio" : "extendedPlayerInfo.general.managerBio", l = i.localize(s, [], {
            gender: e.gender
        });
        this.__positionLabel.textContent = a + " ",
        this._btnBio.setText(l),
        this._btnAddSwap.setText((n = (o = e).isValid() ? "swap" : "add",
        r = o.isManager() ? "manager" : "player",
        i.localize("infopanel.label." + n + r, [], {
            gender: o.gender
        }))),
        this._btnDiscard.setSubtext(i.localizeNumber(e.discardValue));
        var c = e.isValid()
          , d = e.concept
          , u = 0 < e.lastSalePrice
          , p = services.User.getUser();
        if (p) {
            var h = !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && p.hasTradeAccess() && services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED);
            this._btnApplyConsumable.setDisplay(c && !d),
            this._btnDiscard.setDisplay(c && !d),
            this._btnRemove.setDisplay(c),
            this._btnBio.setDisplay(c && (e.isPlayer() || e.isManager())),
            this._btnTransfer.setDisplay(c),
            this._btnSearchMarket.setDisplay(c && h),
            this._btnSearchSlot.setDisplay(h),
            this._btnManagerPreset.setDisplay(c && e.isManager()),
            this._btnTransfer.setText(i.localize("infopanel.label.sendTradePile")),
            this._btnRemove.setText(i.localize(d ? "infopanel.button.removefromsquad" : "infopanel.label.storeInClub"))
        }
        e.untradeable || e.isLimitedUse() ? (this._btnTransfer.setText(i.localize("infopanel.label.untradeable")),
        this._btnTransfer.setInteractionState(!1)) : t && (this._btnTransfer.setText(i.localize("popup.error.tradetoken.SellItemTradePileFullTitle")),
        this._btnTransfer.setInteractionState(!1)),
        this.__textInfo.textContent = u ? i.localize("infopanel.label.prevBoughtPrice") : "",
        this.__valueInfo.textContent = u ? i.localizeNumber(e.lastSalePrice) : "",
        DOMKit.toggleDisplayStyle(this.__auctionInfo, u)
    }
    ,
    UTSlotActionPanelView.prototype.setTOTWItem = function(e, t) {
        this.setPreviewableOnlyItem(e, t)
    }
    ,
    UTSlotActionPanelView.prototype.setRoleText = function(e) {
        this.__roleLabel.textContent = e
    }
    ,
    UTSlotActionPanelView.prototype.renderPlusRoleBonus = function() {
        this.__roleBonus.textContent = "+"
    }
    ,
    UTSlotActionPanelView.prototype.renderPlusPlusRoleBonus = function() {
        this.__roleBonus.textContent = "++"
    }
    ,
    UTSlotActionPanelView.prototype.setPreviewableOnlyItem = function(e, t) {
        this._btnBio.setDisplay(e.isValid() && e.isPlayer()),
        this._btnManagerPreset.setDisplay(e.isValid() && e.isManager()),
        this._btnAddSwap.setDisplay(!1),
        this._btnApplyConsumable.setDisplay(!1),
        this._btnDiscard.setDisplay(!1),
        this._btnSearchMarket.setDisplay(e.isValid() && t),
        this._btnSearchSlot.setDisplay(!1),
        this._btnRemove.setDisplay(!1),
        this._btnTransfer.setDisplay(!1),
        DOMKit.toggleDisplayStyle(this.__auctionInfo, !1)
    }
    ,
    UTSlotActionPanelView.prototype.setSlotName = function(e) {
        var t = !JSUtils.isEmpty(e);
        DOMKit.toggleDisplayStyle(this.__positionContainer, t),
        this.__position.textContent = t ? e : ""
    }
    ,
    UTSlotActionPanelView.prototype.appendQuickList = function(e) {
        DOMKit.insertBefore(e.getRootElement(), this.__itemActions)
    }
    ,
    UTSlotActionPanelView.prototype.eButtonSelected = function(e, t, i) {
        var o = enums.UIItemActionEvent.BIO;
        e === this._btnBio ? o = enums.UIItemActionEvent.BIO : e === this._btnApplyConsumable ? o = enums.UIItemActionEvent.APPLY_CONSUMABLE : e === this._btnAddSwap ? o = enums.UIItemActionEvent.ADD_SWAP : e === this._btnTransfer ? o = enums.UIItemActionEvent.SEND_TO_TRANSFERS : e === this._btnSearchMarket ? o = enums.UIItemActionEvent.SEARCH_ON_MARKET : e === this._btnSearchSlot ? o = enums.UIItemActionEvent.SEARCH_SLOT_ON_MARKET : e === this._btnRemove ? o = enums.UIItemActionEvent.REMOVE_FROM_SQUAD : e === this._btnDiscard ? o = enums.UIItemActionEvent.DISCARD : e === this._btnManagerPreset && (o = enums.UIItemActionEvent.APPLY_MANAGER_PRESET),
        this._triggerActions(o)
    }
    ,
    UTSlotActionPanelView
}(EATargetActionView));
UTSlotActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel");
        var t = document.createElement("div");
        t.classList.add("ut-item-details--metadata"),
        this.__positionContainer = document.createElement("div"),
        this.__positionContainer.classList.add("position-container"),
        this.__positionLabel = document.createElement("span"),
        this.__positionContainer.appendChild(this.__positionLabel),
        this.__position = document.createElement("strong"),
        this.__positionContainer.appendChild(this.__position),
        t.appendChild(this.__positionContainer),
        this.__role = document.createElement("div"),
        this.__role.classList.add("role-container"),
        this.__roleLabel = document.createElement("span"),
        this.__role.appendChild(this.__roleLabel),
        this.__roleBonus = document.createElement("span"),
        this.__roleBonus.classList.add("role-container--role-bonus"),
        this.__role.appendChild(this.__roleBonus),
        t.appendChild(this.__role),
        this.__auctionInfo = document.createElement("div"),
        this.__auctionInfo.classList.add("auctionInfo");
        var i = document.createElement("div");
        i.classList.add("column"),
        this.__textInfo = document.createElement("span"),
        this.__textInfo.classList.add("subHeading"),
        i.appendChild(this.__textInfo),
        this.__valueInfo = document.createElement("span"),
        this.__valueInfo.classList.add("currency-coins"),
        this.__valueInfo.classList.add("subContent"),
        i.appendChild(this.__valueInfo),
        this.__auctionInfo.appendChild(i),
        t.appendChild(this.__auctionInfo),
        e.appendChild(t),
        this.__itemActions = document.createElement("div"),
        this.__itemActions.classList.add("ut-button-group"),
        this._btnBio = new UTGroupButtonControl,
        this._btnBio.getRootElement().classList.add("more"),
        this.__itemActions.appendChild(this._btnBio.getRootElement()),
        this._btnManagerPreset = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnManagerPreset.getRootElement()),
        this._btnApplyConsumable = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnApplyConsumable.getRootElement()),
        this._btnAddSwap = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnAddSwap.getRootElement()),
        this._btnTransfer = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnTransfer.getRootElement()),
        this._btnSearchSlot = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnSearchSlot.getRootElement()),
        this._btnSearchMarket = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnSearchMarket.getRootElement()),
        this._btnRemove = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnRemove.getRootElement()),
        this._btnDiscard = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnDiscard.getRootElement()),
        e.appendChild(this.__itemActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSlotActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__positionContainer = null,
    this.__positionLabel = null,
    this.__position = null,
    this.__role = null,
    this.__roleLabel = null,
    this.__roleBonus = null,
    this.__auctionInfo = null,
    this.__textInfo = null,
    this.__valueInfo = null,
    this.__itemActions = null,
    this._btnBio.destroy(),
    this._btnManagerPreset.destroy(),
    this._btnApplyConsumable.destroy(),
    this._btnAddSwap.destroy(),
    this._btnTransfer.destroy(),
    this._btnSearchSlot.destroy(),
    this._btnSearchMarket.destroy(),
    this._btnRemove.destroy(),
    this._btnDiscard.destroy()
}
,
UTSlotActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSlotActionPanelViewController = function(t) {
    function UTSlotActionPanelViewController() {
        var e = t.call(this) || this;
        return e.challenge = null,
        e.item = null,
        e.itemActionController = new UTItemActionController,
        e.iterator = null,
        e.onDiscard = new EAObservable,
        e.onItemChange = new EAObservable,
        e.onMove = new EAObservable,
        e.onBio = new EAObservable,
        e.onRemove = new EAObservable,
        e.quickListPanel = new UTQuickListPanelViewController,
        e.slot = 0,
        e.squad = null,
        e
    }
    return __extends(UTSlotActionPanelViewController, t),
    UTSlotActionPanelViewController.prototype.init = function() {
        if (!this.initialized) {
            t.prototype.init.call(this),
            this.itemActionController.init(),
            this.quickListPanel.init(),
            this.quickListPanel.getView().addTarget(this, this.onRemoveEvent, enums.UIItemActionEvent.LIST_ON_MARKET);
            var e = this.getView();
            e.addTarget(this, this._onDiscard, enums.UIItemActionEvent.DISCARD),
            e.addTarget(this, this._onMove, enums.UIItemActionEvent.SEND_TO_TRANSFERS),
            e.addTarget(this, this.onApply, enums.UIItemActionEvent.APPLY_CONSUMABLE),
            e.addTarget(this, this.onAddSwap, enums.UIItemActionEvent.ADD_SWAP),
            e.addTarget(this, this.onApplyPreset, enums.UIItemActionEvent.APPLY_MANAGER_PRESET),
            e.addTarget(this, this.ePrefillSearch, enums.UIItemActionEvent.SEARCH_SLOT_ON_MARKET),
            e.addTarget(this, this.eSearchMarket, enums.UIItemActionEvent.SEARCH_ON_MARKET),
            e.addTarget(this, this.onRemoveEvent, enums.UIItemActionEvent.REMOVE_FROM_SQUAD),
            e.addTarget(this, this.eBioSelected, enums.UIItemActionEvent.BIO)
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.initWithItem = function(e) {
        this.initialized || (this.setItem(e),
        this.init())
    }
    ,
    UTSlotActionPanelViewController.prototype.initWithSquad = function(e, t) {
        if (!this.initialized) {
            var i = (this.squad = e).getSlot(t);
            0 <= i.index ? (this.slot = t,
            this.initWithItem(i.getItem())) : this.init()
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.initWithSBCChallenge = function(e, t) {
        this.initialized || (this.challenge = e,
        this.challenge.squad && this.initWithSquad(this.challenge.squad, t))
    }
    ,
    UTSlotActionPanelViewController.prototype.dealloc = function() {
        this.onDiscard.dealloc(),
        this.onMove.dealloc(),
        this.onRemove.dealloc(),
        this.onBio.dealloc(),
        this.onItemChange.dealloc(),
        t.prototype.dealloc.call(this),
        this.itemActionController.dealloc(),
        this.quickListPanel.dealloc(),
        this.item = null,
        this.squad = null,
        this.challenge = null,
        this.slot = 0
    }
    ,
    UTSlotActionPanelViewController.prototype._getViewInstanceFromData = function() {
        return new UTSlotActionPanelView
    }
    ,
    UTSlotActionPanelViewController.prototype.setSlotIndex = function(e) {
        this.slot !== e && (this.slot = e,
        this.squad && this.setItem(this.squad.getSlot(e).item))
    }
    ,
    UTSlotActionPanelViewController.prototype.setItem = function(e) {
        if (this.item !== e) {
            var t = services.User.getUser();
            if (t) {
                this.item = e;
                var i = this.getView()
                  , o = repositories.Item.isPileFull(ItemPile.TRANSFER)
                  , n = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && t.hasTradeAccess();
                this.squad && this.squad.isTOTW() ? i.setTOTWItem(this.item, n) : i.setItem(this.item, o);
                var r = n && !o && this.item.isValid() && !this.item.untradeable;
                this.quickListPanel.setItem(this.item);
                var a = this.quickListPanel.getView();
                r && (a.setTitle(services.Localization.localize("infopanel.label.quickList")),
                i.appendQuickList(a)),
                a.toggleDisplay(r)
            }
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.setIterator = function(e) {
        this.iterator = e
    }
    ,
    UTSlotActionPanelViewController.prototype.removeItemFromSquad = function() {
        var e = this.challenge ? this.challenge.squad : this.squad;
        this.squad && this.item && (null == e || e.removeItemFromSlot(this.squad.getSlot(this.item).index)),
        this.challenge ? services.SBC.saveChallenge(this.challenge).observe(this, this.onSBCSaveComplete) : e && e.save()
    }
    ,
    UTSlotActionPanelViewController.prototype.onSBCSaveComplete = function(e, t) {
        var i;
        if (e.unobserve(this),
        !t.success) {
            var o = "notification.sbcChallenges.failedToSave";
            (null === (i = this.challenge) || void 0 === i ? void 0 : i.hasExpired()) ? o = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (o = "sbc.notification.disabled"),
            services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTSlotActionPanelViewController.prototype._onDiscard = function(e, t, i) {
        var o = this
          , n = this.getView();
        if (n.setInteractionState(!1),
        this.item) {
            var r = services.Localization.localizeNumber(this.item.discardValue);
            utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_DISCARD, {
                params: [r]
            }, function() {
                o.item && o.itemActionController.discard(o.item).observe(o, function(e, t) {
                    e.unobserve(o),
                    t.success && (o.removeItemFromSquad(),
                    o.onDiscard.notify(o.item)),
                    n.setInteractionState(!0)
                })
            }
            .bind(this), function() {
                return n.setInteractionState(!0)
            })
        }
    }
    ,
    UTSlotActionPanelViewController.prototype._onMove = function(e, t, i) {
        var o = this
          , n = t === enums.UIItemActionEvent.SEND_TO_TRANSFERS ? ItemPile.TRANSFER : ItemPile.CLUB;
        this.item && this.itemActionController.move(this.item, n).observe(this, function(e, t) {
            e.unobserve(o),
            t.success && (o.removeItemFromSquad(),
            o.onMove.notify(o.item))
        })
    }
    ,
    UTSlotActionPanelViewController.prototype.onRemoveEvent = function(e, t, i) {
        this._onRemove()
    }
    ,
    UTSlotActionPanelViewController.prototype._onRemove = function() {
        this.removeItemFromSquad(),
        this.onRemove.notify(this.item)
    }
    ,
    UTSlotActionPanelViewController.prototype.onApply = function(e, t, i) {
        var o, n = new UTConsumableCategoriesViewController;
        this.challenge ? n.initWithSBCChallenge(this.challenge, this.slot) : this.squad ? n.initWithSquad(this.squad, this.slot) : this.item ? n.initWithItem(this.item) : n.init(),
        null === (o = this.getNavigationController()) || void 0 === o || o.pushViewController(n)
    }
    ,
    UTSlotActionPanelViewController.prototype.onAddSwap = function(e, t, i) {
        var o, n = new UTClubSearchFiltersViewController, r = this.getNavigationController();
        if (r) {
            if (this.challenge ? n.initWithSBCChallenge(this.challenge, this.iterator) : this.squad ? n.initWithSquad(this.squad, this.iterator) : this.item ? n.initWithItem(this.item) : n.init(),
            this.squad) {
                var a = null === (o = services.User.getUser()) || void 0 === o ? void 0 : o.squadSearchCriteria
                  , s = this.squad.getSlot(this.slot);
                if (a && 0 <= s.index)
                    s.item.isManager() ? (a.type = SearchType.STAFF,
                    a.category = SearchCategory.MANAGER,
                    a.sortBy = SearchSortType.VALUE) : (a.type = SearchType.PLAYER,
                    a.sortBy = SearchSortType.RATING),
                    a.position = s.generalPositionName || SearchType.ANY,
                    n.setSearchCriteria(a)
            }
            n.onItemChange.observe(this, this.eOnItemChange),
            r.pushViewController(n)
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.eSearchMarket = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = new UTMarketSearchResultsViewController
              , r = new UTSearchCriteriaDTO;
            services.Item.clearTransferMarketCache(),
            this.item ? (r.defId = [this.item.definitionId],
            r.type = this.item.getSearchType(),
            n.initWithSearchCriteria(r),
            n.setPinnedItem(this.item)) : n.initWithSearchCriteria(r),
            o.pushViewController(n)
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.ePrefillSearch = function(e, t, i) {
        var o = isPhone() ? this.getRootNavigationController() : this.getNavigationController();
        if (o && this.squad) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Squad Slot Detail View - Search On Transfer Market");
            var n = new UTMarketSearchFiltersViewController
              , r = new UTSquadMarketSearchViewModel;
            r.setSquad(this.squad),
            r.setCurrentSlotIndex(this.slot),
            n.initWithSquadContext(r),
            o.pushViewController(n)
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.onApplyPreset = function(e, t, i) {
        if (this.item) {
            var o = services.Localization
              , n = new UTTacticsPopupViewModel
              , r = new UTTacticsPresetPopupViewController(this.item,n)
              , a = new UTSquadTacticsViewModel(services.Squad);
            this.squad && a.setSquad(this.squad),
            r.initWithTacticsViewModel(a),
            r.modalDisplayDimensions.width = "24em";
            var s = services.Squad.getManagerPresetById(this.item.id);
            if (s) {
                var l = r.getView()
                  , c = repositories.Squad.getFormationById(s.formation.id);
                c && (l.setStepText(1),
                l.setActionButtonText(o.localize("popup.applyPreset.apply")),
                l.setDescription(o.localize("popup.applyPreset.description1")),
                l.renderPresetInfo(s, c.name),
                gPopupClickShield.setActivePopup(r))
            }
        }
    }
    ,
    UTSlotActionPanelViewController.prototype.eBioSelected = function(e, t, i) {
        this.onBio.notify()
    }
    ,
    UTSlotActionPanelViewController.prototype.eOnItemChange = function(e, t) {
        this.onItemChange.notify(t)
    }
    ,
    UTSlotActionPanelViewController
}(EAViewController)
  , UTSBCBrickActionPanelView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSBCBrickActionPanelView() {
        return e.call(this) || this
    }
    return __extends(UTSBCBrickActionPanelView, e),
    UTSBCBrickActionPanelView.prototype.render = function(e) {
        this.__help.textContent = services.Localization.localize("sbc.custombrick.help");
        var t = e.getItem();
        this.generateRow(SBCEligibilityKey.LEAGUE_ID, t.leagueId, this.__list),
        this.generateRow(SBCEligibilityKey.CLUB_ID, t.teamId, this.__list),
        this.generateRow(SBCEligibilityKey.NATION_ID, t.nationId, this.__list)
    }
    ,
    UTSBCBrickActionPanelView.prototype.generateRow = function(e, t, i) {
        var o = " "
          , n = " ";
        switch (e) {
        case SBCEligibilityKey.NATION_ID:
            o = "controlbar.cardview.Nationality",
            n = 0 === t ? services.Localization.localize("roles.defaultRole") : UTLocalizationUtil.nationIdToName(t, services.Localization);
            break;
        case SBCEligibilityKey.LEAGUE_ID:
            o = "controlbar.cardview.League",
            n = 0 === t ? services.Localization.localize("roles.defaultRole") : UTLocalizationUtil.leagueIdToName(t, services.Localization);
            break;
        case SBCEligibilityKey.CLUB_ID:
            o = "controlbar.cardview.Club",
            n = 0 === t ? services.Localization.localize("roles.defaultRole") : UTLocalizationUtil.teamIdToAbbr15(t, services.Localization);
            break;
        default:
            DebugUtils.Assert(!1, "Reached default case: " + e)
        }
        var r = document.createElement("li")
          , a = document.createElement("h1")
          , s = document.createElement("h2");
        a.textContent = services.Localization.localize(o),
        s.textContent = n,
        r.appendChild(a),
        r.appendChild(s),
        i.appendChild(r)
    }
    ,
    UTSBCBrickActionPanelView
}(EAView));
UTSBCBrickActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("SBCBrickActionPanel"),
        this.__list = document.createElement("ul"),
        this.__list.classList.add("ut-item-bio-list-view"),
        e.appendChild(this.__list),
        this.__help = document.createElement("p"),
        e.appendChild(this.__help),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCBrickActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__list = null,
    this.__help = null
}
,
UTSBCBrickActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSlotDetailsViewController = function(t) {
    function UTSlotDetailsViewController() {
        var e = t.call(this) || this;
        return e.panel = null,
        e.panelView = null,
        e.viewmodel = null,
        e.squad = null,
        e.challenge = null,
        e.onSlotChange = new EAObservable,
        e
    }
    return __extends(UTSlotDetailsViewController, t),
    UTSlotDetailsViewController.prototype.init = function() {
        this.initialized || t.prototype.init.call(this)
    }
    ,
    UTSlotDetailsViewController.prototype.initWithItemIterator = function(e) {
        this.initialized || (this.viewmodel = e,
        this.init())
    }
    ,
    UTSlotDetailsViewController.prototype.initWithSquad = function(e, t) {
        if (!this.initialized) {
            this.squad = e;
            var i = this.createIterator(t);
            this.initWithItemIterator(i)
        }
    }
    ,
    UTSlotDetailsViewController.prototype.initWithSBCChallenge = function(e, t) {
        if (!this.initialized) {
            this.challenge = e,
            this.squad = this.challenge.squad;
            var i = this.createIterator(t);
            this.initWithItemIterator(i),
            this.getView().addClass("sbc")
        }
    }
    ,
    UTSlotDetailsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("extendedPlayerInfo.header")
    }
    ,
    UTSlotDetailsViewController.prototype.createIterator = function(t) {
        var e = this.getSlots()
          , i = new EAIterator(e);
        return JSUtils.isNumber(t) && i.setIndex(i.indexOf(function(e) {
            return e.getIndex() === t
        })),
        i
    }
    ,
    UTSlotDetailsViewController.prototype.getSlots = function() {
        function UAa(t, e, i, o) {
            var n = t.getFieldPlayers().reverse().concat(t.getSubPlayers(), t.getReservePlayers());
            return e && n.unshift(t.getManager()),
            i && (n = n.filter(function(e) {
                return e.isValid()
            })),
            o && (n = n.filter(function(e) {
                return -1 === t.simpleBrickIndices.indexOf(e.getIndex())
            })),
            n
        }
        return this.squad ? this.squad.isTOTW() ? UAa(this.squad, !1, !0, !1) : this.squad.isSBC() ? UAa(this.squad, !1, !1, !0) : UAa(this.squad, !0, !1, !1) : []
    }
    ,
    UTSlotDetailsViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.panel ? (this.panel.dealloc(),
        this.panel = null,
        this.panelView = null) : this.panelView && (this.panelView.dealloc(),
        this.panelView = null),
        this.onSlotChange.dealloc(),
        this.viewmodel = null,
        this.squad = null,
        this.challenge = null
    }
    ,
    UTSlotDetailsViewController.prototype.viewDidAppear = function() {
        var e;
        t.prototype.viewDidAppear.call(this),
        this.renderView(),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!isPhone()),
        this.getView().addTarget(this, this.eIndexChange, UTItemDetailsView.Event.INDEX_CHANGE)
    }
    ,
    UTSlotDetailsViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.toggleCarouselDisplay(!1),
        e.resetItems(),
        e.removeTarget(this, this.eIndexChange, UTItemDetailsView.Event.INDEX_CHANGE)
    }
    ,
    UTSlotDetailsViewController.prototype._getViewInstanceFromData = function() {
        return new UTItemDetailsView
    }
    ,
    UTSlotDetailsViewController.prototype.renderView = function(e) {
        var t, i, o, n;
        if (void 0 === e && (e = !1),
        this.isViewDisplayed() && this.viewmodel) {
            var r = services.Localization
              , a = this.getView()
              , s = this.viewmodel.values()
              , l = this.viewmodel.current()
              , c = this.viewmodel.getIndex()
              , d = null == l ? void 0 : l.item
              , u = isPhone() ? this.getRootNavigationController() : this.getNavigationController();
            if (u && d) {
                var p = d.isManager() ? r.localize("extendedPlayerInfo.header.manager") : r.localize("extendedPlayerInfo.header", [], {
                    gender: d.gender
                });
                u.setNavigationTitle(p)
            }
            var h = !(null === (t = this.squad) || void 0 === t ? void 0 : t.isTOTW());
            if (this.renderPanel(),
            e && d) {
                var _ = s.slice(c, c + 1);
                a.updateSlide(c, d, h),
                (null === (i = this.squad) || void 0 === i ? void 0 : i.isTOTW()) || a.setSlotChemistry(_)
            } else
                a instanceof UTItemDetailsView && (a.render(s.map(function(e) {
                    return e.item
                }), c, h, s),
                (null === (o = this.squad) || void 0 === o ? void 0 : o.isTOTW()) || a.setSlotChemistry(s));
            if (this.panelView instanceof UTSlotActionPanelView && l && (this.panelView.setSlotName(this.getSlotName(l)),
            null == d ? void 0 : d.isPlayer())) {
                var m = null === (n = this.squad) || void 0 === n ? void 0 : n.getRoleBySlotIndex(l.index, l.generalPosition);
                if (m) {
                    var T = UTLocalizationUtil.mapTacticRoleToLocString(m, d.gender);
                    this.panelView.setRoleText(T);
                    var g = d.hasPlusRolesForPositionRole(m, l.generalPosition)
                      , y = d.hasPlusPlusRolesForPositionRole(m, l.generalPosition);
                    g ? this.panelView.renderPlusRoleBonus() : y && this.panelView.renderPlusPlusRoleBonus()
                }
            }
        }
    }
    ,
    UTSlotDetailsViewController.prototype.renderPanel = function() {
        var e;
        if (this.viewmodel) {
            this.panel ? (this.removeChildViewController(this.panel),
            this.panel.dealloc(),
            this.panel = null,
            this.panelView = null) : this.panelView && (this.panelView.dealloc(),
            this.panelView = null);
            var t = null === (e = this.viewmodel) || void 0 === e ? void 0 : e.current();
            if (t && (null == t ? void 0 : t.isCustomBrick()))
                this.panelView = new UTSBCBrickActionPanelView,
                this.panelView.render(t);
            else {
                var i = t ? t.index : 0;
                if (this.panel = new UTSlotActionPanelViewController,
                this.panelView = this.panel.getView(),
                t) {
                    var o = repositories.Item.isPileFull(ItemPile.TRANSFER);
                    this.panelView.setItem(t.item, o)
                }
                this.addChildViewController(this.panel),
                this.challenge ? this.panel.initWithSBCChallenge(this.challenge, i) : this.squad ? this.panel.initWithSquad(this.squad, i) : this.panel.init(),
                this.panel.setIterator(this.viewmodel),
                this.panel.onDiscard.observe(this, this.eItemRemoved),
                this.panel.onMove.observe(this, this.eItemRemoved),
                this.panel.onRemove.observe(this, this.eItemRemoved),
                this.panel.onBio.observe(this, this.onBioTap),
                this.panel.onItemChange.observe(this, this.eSlotChange)
            }
            this.getView().appendPanel(this.panelView)
        }
    }
    ,
    UTSlotDetailsViewController.prototype.setSquad = function(e) {
        this.challenge || (this.squad = e,
        this.viewmodel = this.createIterator(0))
    }
    ,
    UTSlotDetailsViewController.prototype.setSlot = function(t) {
        var e, i = this.isViewDisplayed();
        this.viewmodel && ((null === (e = this.viewmodel.current()) || void 0 === e ? void 0 : e.index) !== t && (this.viewmodel.setIndex(this.viewmodel.indexOf(function(e) {
            return e.getIndex() === t
        })),
        i && this.renderPanel()),
        this.renderView())
    }
    ,
    UTSlotDetailsViewController.prototype.getSlotName = function(e) {
        var t = services.Localization
          , i = e.getIndex()
          , o = e.item.isValid() ? e.item.gender : 0;
        if (i < UTSquadEntity.FIELD_PLAYERS)
            return UTLocalizationUtil.positionIdToName(e.generalPosition, t, o);
        if (this.challenge)
            return i >= UTSquadEntity.FIELD_PLAYERS ? t.localize("dock.label.workArea") : "";
        if (this.squad) {
            if (i === UTSquadEntity.MANAGER_SLOT_INDEX)
                return t.localize("cards.cardfront.manager", [], {
                    gender: o
                });
            if (i >= UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS)
                return t.localize("dock.label.reserves");
            if (i >= UTSquadEntity.FIELD_PLAYERS)
                return t.localize("dock.label.substitutes")
        }
        return ""
    }
    ,
    UTSlotDetailsViewController.prototype.eItemRemoved = function(e) {
        var t;
        if (this.viewmodel) {
            var i = this.viewmodel.getIndex();
            this.squad ? (this.viewmodel.resetCollection(this.getSlots()),
            this.viewmodel.setIndex(i),
            this.renderView(!0)) : (this.viewmodel.remove(i),
            0 < this.viewmodel.length ? this.renderView(!0) : null === (t = this.getNavigationController()) || void 0 === t || t.popViewController(!0))
        }
    }
    ,
    UTSlotDetailsViewController.prototype.eSlotChange = function(e, t) {
        this.viewmodel && (this.viewmodel.setIndex(this.viewmodel.indexOf(function(e) {
            return e.index === t.index
        })),
        this.onSlotChange.notify({
            slot: this.viewmodel.current()
        }))
    }
    ,
    UTSlotDetailsViewController.prototype.eIndexChange = function(e, t, i) {
        var o, n, r;
        if (this.viewmodel && i.index !== (null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getIndex())) {
            this.viewmodel.setIndex(i.index);
            var a = this.viewmodel.current();
            if (this.renderPanel(),
            this.onSlotChange.notify({
                slot: a
            }),
            this.panelView instanceof UTSlotActionPanelView && a && (this.panelView.setSlotName(this.getSlotName(a)),
            null === (n = a.item) || void 0 === n ? void 0 : n.isPlayer())) {
                var s = null === (r = this.squad) || void 0 === r ? void 0 : r.getRoleBySlotIndex(a.index, a.generalPosition);
                if (s) {
                    var l = UTLocalizationUtil.mapTacticRoleToLocString(s, a.item.gender);
                    this.panelView.setRoleText(l)
                }
            }
            var c = null == a ? void 0 : a.item
              , d = isPhone() ? this.getRootNavigationController() : this.getNavigationController();
            if (d && c) {
                var u = services.Localization
                  , p = c.isManager() ? u.localize("extendedPlayerInfo.header.manager") : u.localize("extendedPlayerInfo.header", [], {
                    gender: c.gender
                });
                d.setNavigationTitle(p)
            }
        }
    }
    ,
    UTSlotDetailsViewController.prototype.onBioTap = function(e) {
        var t, i, o, n, r = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.current(), a = null == r ? void 0 : r.item;
        if (a && a.isValid())
            if (a.isPlayer() && JSUtils.isValid(a.getMetaData())) {
                var s = new UTPlayerBioViewController;
                r ? (s.initWithSlot(r),
                null === (i = this.getNavigationController()) || void 0 === i || i.pushViewController(s)) : (s.initWithItem(a),
                null === (o = this.getNavigationController()) || void 0 === o || o.pushViewController(s))
            } else if (a.isManager()) {
                (s = new UTManagerBioViewController).initWithItem(a),
                null === (n = this.getNavigationController()) || void 0 === n || n.pushViewController(s)
            } else
                services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
    }
    ,
    UTSlotDetailsViewController
}(EAViewController)
  , UTSquadItemDetailsNavigationController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTSquadItemDetailsNavigationController(e, t) {
        var i = o.call(this, e, t) || this;
        return i._squad = null,
        i._challenge = null,
        i._dismissButton = null,
        i.onSlotChange = new EAObservable,
        i.onSearchStarted = new EAObservable,
        i.onSearchEnded = new EAObservable,
        i
    }
    return __extends(UTSquadItemDetailsNavigationController, o),
    UTSquadItemDetailsNavigationController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this._dismissButton = new UTNavigationButtonControl,
        this._dismissButton.init())
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.initWithSquad = function(e, t) {
        var i = this;
        if (!this.initialized) {
            DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity."),
            this._squad = e;
            var o = this._getRootControllerInstance();
            o.initWithSquad(this._squad, t),
            o.onSlotChange.observe(this, function(e, t) {
                i.onSlotChange.notify(t)
            }),
            this.initWithRootController(o)
        }
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.initWithSBCChallenge = function(e, t) {
        var i = this;
        if (!this.initialized) {
            DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected a challenge entity."),
            DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a number for current squad slot."),
            this._challenge = e,
            this._squad = this._challenge.squad;
            var o = this._getRootControllerInstance();
            o.initWithSBCChallenge(this._challenge, t),
            o.onSlotChange.observe(this, function(e, t) {
                i.onSlotChange.notify(t)
            }),
            this.initWithRootController(o)
        }
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.dealloc = function() {
        o.prototype.dealloc.call(this),
        this._dismissButton && (this._dismissButton.dealloc(),
        this._dismissButton = null),
        this.onSlotChange && this.onSlotChange.dealloc(),
        this.onSearchStarted && this.onSearchStarted.dealloc(),
        this.onSearchEnded && this.onSearchEnded.dealloc(),
        this._squad = null,
        this._challenge = null
    }
    ,
    UTSquadItemDetailsNavigationController.prototype._getRootControllerInstance = function() {
        return new UTSlotDetailsViewController
    }
    ,
    UTSquadItemDetailsNavigationController.prototype._getRootController = function() {
        return this.getRootController()
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this._dismissButton
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.setSquad = function(e) {
        this._challenge || (this._squad = e,
        this._getRootController().setSquad(this._squad))
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.setSlot = function(e) {
        this.popToRootViewController(),
        this._getRootController().setSlot(e)
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.show = function(e, t) {
        void 0 === t && (t = !1),
        o.prototype.show.call(this, e, t),
        e instanceof UTClubSearchFiltersViewController ? this.onSearchStarted.notify() : e instanceof UTSlotDetailsViewController && this.onSearchEnded.notify()
    }
    ,
    UTSquadItemDetailsNavigationController
}(UTNavigationController))
  , UTSBCRequirementsNotificationView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCRequirementsNotificationView() {
        return t.call(this) || this
    }
    return __extends(UTSBCRequirementsNotificationView, t),
    UTSBCRequirementsNotificationView.prototype.renderChallengeRequirements = function(e, t) {
        void 0 === t && (t = !1),
        this._requirements.renderChallengeRequirements(e, t)
    }
    ,
    UTSBCRequirementsNotificationView.prototype.setNotificationDisplay = function(e) {
        this.setInteractionState(e),
        this.toggleClass("show", e)
    }
    ,
    UTSBCRequirementsNotificationView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTSBCRequirementsNotificationView
}(EATargetActionView));
UTSBCRequirementsNotificationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-popover--left"),
        e.classList.add("ut-popover--top"),
        e.classList.add("ut-popover"),
        this._requirements = new UTSBCChallengeRequirementsView,
        e.appendChild(this._requirements.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRequirementsNotificationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._requirements.destroy()
}
,
UTSBCRequirementsNotificationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsNotificationViewController = function(t) {
    function UTSBCRequirementsNotificationViewController() {
        var e = t.call(this) || this;
        return e._challenge = null,
        e
    }
    return __extends(UTSBCRequirementsNotificationViewController, t),
    UTSBCRequirementsNotificationViewController.prototype.initWithSBCChallenge = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected an Challenge entity."),
        this._challenge = e,
        this.init())
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._challenge = null
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRequirementsNotificationView
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this._challenge && (this.getView().renderChallengeRequirements(this._challenge, !0),
        this._challenge.onDataChange.observe(this, this._eChallengeUpdated),
        this._challenge.onSave.observe(this, this._eChallengeUpdated))
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this),
        this._challenge && (this._challenge.onDataChange.unobserve(this),
        this._challenge.onSave.unobserve(this))
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype._eChallengeUpdated = function(e, t) {
        this.isViewDisplayed() && this._challenge && this.getView().renderChallengeRequirements(this._challenge, !0)
    }
    ,
    UTSBCRequirementsNotificationViewController
}(EAViewController);
function UTSBCSquadSplitViewController() {
    UTBaseSquadSplitViewController.call(this),
    this._challengeDetailsController = null,
    this._set = null,
    this._challengeId = 0,
    this._requirementsNotification = new UTSBCRequirementsNotificationViewController,
    this._searchFlowActive = !1,
    this._viewmodel = new UTSBCItemWarningViewModel
}
JSUtils.inherits(UTSBCSquadSplitViewController, UTBaseSquadSplitViewController),
UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN = !0,
UTSBCSquadSplitViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._challengeDetailsController = new controllers.navigation.SBCSquadDetails,
    this._challengeDetailsController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    this._challengeDetailsController.setSquadBuildingChallengeActionDelegate(this),
    this._set ? this._challengeDetailsController.initWithSBCSet(this._set, this._challengeId) : this._challengeDetailsController.init(),
    this.addChildViewController(this._challengeDetailsController),
    this._challengeDetailsController.onSearchStarted.observe(this, this._eSearchStarted),
    this._challengeDetailsController.onSearchEnded.observe(this, this._eSearchEnded))
}
,
UTSBCSquadSplitViewController.prototype.initWithSBCSet = function initWithSBCSet(e, t) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC Set entity."),
        DebugUtils.Assert(JSUtils.isNumber(t) && 0 <= t, "Initialization expected a valid SBC Challenge ID."),
        this._set = e,
        this._challengeId = t;
        var i = this._set.challenges.get(this._challengeId);
        this._requirementsNotification.initWithSBCChallenge(i),
        this._requirementsNotification.getView().addTarget(this, this._eRequirementsNotificationTap, EventType.TAP),
        this.initWithSquad(i.squad)
    }
}
,
UTSBCSquadSplitViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._challengeDetailsController.dealloc(),
    this._requirementsNotification.dealloc(),
    this._viewmodel.dealloc(),
    this._challengeDetailsController = null,
    this._requirementsNotification = null,
    this._set = null,
    this._challengeId = 0,
    this._viewmodel = null
}
,
UTSBCSquadSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._requirementsNotification.viewDidAppear()
}
,
UTSBCSquadSplitViewController.prototype._generateSquadOverview = function _generateSquadOverview() {
    var e = null;
    if (this._set) {
        (e = new UTSBCSquadOverviewViewController).initWithSBCSet(this._set, this._challengeId);
        var t = e.getView();
        t.getRequirementsButton().addTarget(this, this._eRequirementsTap, EventType.TAP),
        t.addSubview(this._requirementsNotification.getView()),
        t.layoutSubviews(),
        this._requirementsNotification.viewDidAppear()
    } else
        e = this.superclass();
    return e
}
,
UTSBCSquadSplitViewController.prototype._generateItemDetails = function _generateItemDetails(e) {
    var t = this._set.challenges.get(this._challengeId)
      , i = new UTSquadItemDetailsNavigationController;
    return i.onSearchStarted.observe(this, this._eSearchStarted),
    i.onSearchEnded.observe(this, this._eSearchEnded),
    t ? i.initWithSBCChallenge(t, e) : i.init(),
    i
}
,
UTSBCSquadSplitViewController.prototype.getDefaultPanel = function getDefaultPanel() {
    return this._challengeDetailsController
}
,
UTSBCSquadSplitViewController.prototype._onPopupClosed = function _onPopupClosed(e, t) {
    e.unobserve(this),
    t && t !== enums.UIDialogOptions.CANCEL && (t === UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE && services.UserSettings.setSBCValidationSkip(!0),
    this._submitChallenge(!0))
}
,
UTSBCSquadSplitViewController.prototype._submitChallenge = function _submitChallenge(e) {
    var t = this._set.challenges.get(this._challengeId);
    if (t.canSubmit())
        if (!services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE) && t.hasUntradeableItems())
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED);
        else if (JSUtils.isValid(this._set)) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Submit Challenge");
            var i = JSUtils.isBoolean(e) ? e : services.UserSettings.getSBCValidationSkip();
            services.SBC.submitChallenge(t, this._set, i, services.Chemistry.isFeatureEnabled()).observe(this, this._onChallengeSubmitted)
        } else
            services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE]);
    else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD)
}
,
UTSBCSquadSplitViewController.prototype._onChallengeSubmitted = function _onChallengeSubmitted(e, t) {
    var i = this;
    e.unobserve(this);
    function IDa(e) {
        if (e && 0 < n.awards.length) {
            var t = new UTGameRewardsViewController(n.awards);
            t.init(),
            t.modalDisplayDimensions.width = "24em",
            t.getView().setSbcSet(n),
            gPopupClickShield.setActivePopup(t),
            repositories.Item.setDirty(ItemPile.PURCHASED)
        }
    }
    var o = this._set.getChallenge(this._challengeId)
      , n = this._set;
    if (t.success) {
        if (o && 0 < o.awards.length) {
            var r = new UTGameRewardsViewController(o.awards);
            r.init(),
            r.modalDisplayDimensions.width = "24em",
            r.getView().setSbcChallenge(o),
            gPopupClickShield.setActivePopup(r),
            r.onExit.observe(this, function(e) {
                e.unobserve(i),
                IDa(t.data.setCompleted)
            })
        } else
            t.data.setCompleted && IDa(t.data.setCompleted);
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: "SBC - Rewards Overlay"
        }),
        this.getNavigationController().popViewController()
    } else if (t.error && t.error.code === UtasErrorCode.CHEMISTRY_VERSION_MISMATCH) {
        var a = services.Localization
          , s = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: a.localize("sbcChallenge.failedToSubmit.chemistry-version-sync.description"),
            title: a.localize("sbcChallenge.failedToSubmit.chemistry-version-sync.title")
        });
        s.init(),
        s.modalDisplayDimensions.width = "380px",
        s.onExit.observe(this, function(e, t) {
            e.unobserve(this),
            services.Chemistry.resetCustomProfiles(),
            services.Chemistry.requestChemistryProfiles().observe(this, function(e, t) {
                services.SBC.getCachedSBCSquads().map(function(e) {
                    e.updateChemistry(),
                    e.update(e),
                    this._set.challenges.get(this._challengeId).squad === e && this._pushSquadToView(e)
                }
                .bind(this))
            })
        }),
        gPopupClickShield.setActivePopup(s)
    } else if (t.data && 0 < t.data.itemViolations.length) {
        var l = t.data.itemViolations;
        this._viewmodel.requestViolationPlayers(l).observe(this, function(e, t) {
            e.unobserve(this);
            var i = JSUtils.isObject(t.response) ? this._viewmodel.generateViolationStrings(l, t.response.items) : []
              , o = new UTSBCConfirmSubmissionPopupViewController(i);
            o.onExit.observe(this, this._onPopupClosed),
            o.modalDisplayDimensions.width = "400px",
            gPopupClickShield.setActivePopup(o)
        })
    } else
        t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE ? NetworkErrorManager.handleStatus(t.error.code) : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().showGameView()) : o.hasExpired() ? (services.Notification.queue([services.Localization.localize("notification.sbcChallenges.expired"), UINotificationType.NEGATIVE]),
        this.getNavigationController().popToRootViewController()) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE])
}
,
UTSBCSquadSplitViewController.prototype.submitChallenge = function submitChallenge() {
    this._submitChallenge()
}
,
UTSBCSquadSplitViewController.prototype._eSearchStarted = function _eSearchStarted() {
    this._searchFlowActive = !0,
    UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN && (this._requirementsNotification.getView().setNotificationDisplay(!0),
    this._overviewController.getView().getRequirementsButton().setChecked(!0))
}
,
UTSBCSquadSplitViewController.prototype._eSearchEnded = function _eSearchEnded() {
    this._searchFlowActive = !1,
    this._requirementsNotification.getView().setNotificationDisplay(!1),
    this._overviewController.getView().getRequirementsButton().setChecked(!1)
}
,
UTSBCSquadSplitViewController.prototype._eRequirementsNotificationTap = function _eRequirementsNotificationTap(e) {
    e.setNotificationDisplay(!1),
    this._searchFlowActive && (UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN = !1),
    this._overviewController.getView().getRequirementsButton().setChecked(!1)
}
,
UTSBCSquadSplitViewController.prototype._eRequirementsTap = function _eRequirementsTap(e) {
    var t = e.getChecked();
    this._searchFlowActive && (UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN = t),
    this._requirementsNotification.getView().setNotificationDisplay(t)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSetsViewModel = function(o) {
    function UTSBCSetsViewModel(e, t) {
        var i = o.call(this) || this;
        return i.requests = [],
        i.sets = new EAHashTable,
        e.forEach(function(e) {
            i.sets.set(e.id, e)
        }, i),
        i.categories = t,
        i.categoriesIterator = new EAIterator([]),
        i.areTutorialSetsComplete() && (i.categoriesIterator.resetCollection(i.categories),
        i.categories = []),
        i
    }
    return __extends(UTSBCSetsViewModel, o),
    UTSBCSetsViewModel.prototype.dealloc = function() {
        this.cancelRequests(),
        this.resetCollections([], []),
        o.prototype.dealloc.call(this)
    }
    ,
    UTSBCSetsViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            e.clearObservers(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }, this),
        this.requests = [])
    }
    ,
    UTSBCSetsViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTSBCSetsViewModel.prototype.getTutorialSets = function() {
        return this.sets.filter(function(e) {
            return e.tutorial
        })
    }
    ,
    UTSBCSetsViewModel.prototype.areTutorialSetsComplete = function() {
        var e = this.getTutorialSets();
        if (0 === e.length)
            return !0;
        var t = JSUtils.find(e, function(e) {
            return !e.isComplete()
        });
        return !JSUtils.isValid(t)
    }
    ,
    UTSBCSetsViewModel.prototype.resetCollections = function(e, t) {
        var i = this;
        this.sets.clear(),
        e.forEach(function(e) {
            i.sets.set(e.id, e)
        }, this),
        this.categories = t,
        this.areTutorialSetsComplete() ? (this.categoriesIterator.resetCollection(this.categories),
        this.categories = []) : this.categoriesIterator.resetCollection([])
    }
    ,
    UTSBCSetsViewModel.prototype.setCurrentCategoryIndex = function(e) {
        JSUtils.isValid(this.categoriesIterator.get(e)) && this.categoriesIterator.setIndex(e)
    }
    ,
    UTSBCSetsViewModel.prototype.getCurrentCategoryIndex = function() {
        return this.categoriesIterator.getIndex()
    }
    ,
    UTSBCSetsViewModel.prototype.getCurrentCategory = function() {
        return this.categoriesIterator.current()
    }
    ,
    UTSBCSetsViewModel.prototype.getSetsByCurrentCategory = function() {
        var e, i = this, o = [];
        function sortSets(e, t) {
            if (e.isComplete() !== t.isComplete()) {
                if (!e.isComplete() && t.isComplete())
                    return -1;
                if (!t.isComplete() && e.isComplete())
                    return 1
            }
            if (e.isFeatured !== t.isFeatured) {
                if (e.isFeatured && !t.isFeatured)
                    return -1;
                if (t.isFeatured && !e.isFeatured)
                    return 1
            }
            if (e.priority !== t.priority) {
                if (e.priority < t.priority)
                    return -1;
                if (t.priority < e.priority)
                    return 1
            }
            if (e.notExpirable !== t.notExpirable) {
                if (!e.notExpirable && t.notExpirable)
                    return -1;
                if (!t.notExpirable && e.notExpirable)
                    return 1
            }
            if (e.endTime !== t.endTime) {
                if (e.endTime < t.endTime)
                    return -1;
                if (t.endTime < e.endTime)
                    return 1
            }
            return 0
        }
        var t = this.getTutorialSets();
        return 0 < t.length && JSUtils.find(t, function(e) {
            return !e.isComplete()
        }) ? o = t.sort(sortSets) : (0 < this.categories.length && (this.categoriesIterator.resetCollection(this.categories),
        this.categories = []),
        null === (e = this.categoriesIterator.current()) || void 0 === e || e.setIds.forEach(function(e) {
            var t = i.sets.get(e);
            t && o.push(t)
        }, this),
        o.sort(sortSets)),
        o
    }
    ,
    UTSBCSetsViewModel.prototype.getCategoryByIndex = function(e) {
        return this.categoriesIterator.get(e)
    }
    ,
    UTSBCSetsViewModel.prototype.setCategoryById = function(e) {
        for (var t = this.getCategories(), i = 0; i < t.length; i++)
            if (t[i].id === e) {
                this.setCurrentCategoryIndex(i);
                break
            }
    }
    ,
    UTSBCSetsViewModel.prototype.getCategories = function() {
        return this.categoriesIterator.values()
    }
    ,
    UTSBCSetsViewModel.prototype.hasRefreshPeriodEnded = function(e, t) {
        var i = e.getRefreshPeriodEndTime();
        return 0 < i && i < t
    }
    ,
    UTSBCSetsViewModel.prototype.updateSetRepeatability = function() {
        var t = this
          , i = Math.floor(Date.now() / MS_PER_SECOND);
        this.sets.filter(function(e) {
            return t.hasRefreshPeriodEnded(e, i)
        }).forEach(function(e) {
            return e.timesCompleted = 0
        })
    }
    ,
    UTSBCSetsViewModel.prototype.requestSets = function() {
        var i = this
          , e = services.SBC.requestSets();
        return gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        e.observe(this, function(e, t) {
            i.completeRequest(e, t),
            t.success && t.data && i.resetCollections(t.data.sets, t.data.categories)
        }),
        this.requests.push(e),
        e
    }
    ,
    UTSBCSetsViewModel
}(EAObject)
  , UTSBCTimerLabelView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCTimerLabelView() {
        var e = t.call(this) || this;
        return e.endTime = 0,
        e.canExpire = !1,
        e.updateInterval = 0,
        e
    }
    return __extends(UTSBCTimerLabelView, t),
    UTSBCTimerLabelView.prototype.setEndTime = function(e) {
        this.endTime = e
    }
    ,
    UTSBCTimerLabelView.prototype.setExpiryState = function(e) {
        this.canExpire = e
    }
    ,
    UTSBCTimerLabelView.prototype.start = function(i) {
        void 0 === i && (i = 2e4);
        var o = this.getRootElement();
        function onUpdate() {
            if (DOMKit.isInDOM(o)) {
                var e = services.Localization
                  , t = this.endTime - Math.floor(Date.now() / 1e3);
                this.toggleClass("no-expire", t <= 0),
                0 < t ? (t < 120 && 1e3 < i && setTimeout(function() {
                    this.start(1e3)
                }
                .bind(this), 0),
                o.textContent = e.localize("sbc.sets.expiresIn") + ": " + e.localizeAuctionTimeRemaining(t)) : o.textContent = e.localize("sbc.sets.expired")
            } else
                clearInterval(this.updateInterval)
        }
        if (this.stop(),
        this.toggleClass("no-expire", !this.canExpire),
        this.canExpire) {
            var e = services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_GRACE_PERIOD_MINUTES) * SECONDS_PER_MINUTE;
            this.endTime + e > Math.round(Date.now() / 1e3) ? (onUpdate.call(this),
            this.updateInterval = window.setInterval(onUpdate.bind(this), i)) : o.textContent = services.Localization.localize("sbc.sets.expired")
        } else
            o.textContent = services.Localization.localize("sbc.status.noexpire")
    }
    ,
    UTSBCTimerLabelView.prototype.stop = function() {
        clearInterval(this.updateInterval)
    }
    ,
    UTSBCTimerLabelView
}(EAView));
UTSBCTimerLabelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("span");
        e.classList.add("label"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCTimerLabelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTSBCTimerLabelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSetTileView = function(t) {
    function UTSBCSetTileView() {
        var e = t.call(this) || this;
        return e.data = null,
        e
    }
    return __extends(UTSBCSetTileView, t),
    UTSBCSetTileView.prototype.init = function() {
        t.prototype.init.call(this),
        this._watchBtn.init(),
        this._infoBtn.init()
    }
    ,
    UTSBCSetTileView.prototype.dealloc = function() {
        var e;
        null === (e = this.itemView) || void 0 === e || e.dealloc(),
        this.itemView = null,
        this.data = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCSetTileView.prototype.setData = function(e) {
        var t = services.Localization;
        this.data = e,
        this.setInteractionState(!this.data.isComplete());
        var i = t.localize("sbc.sets.sbcsCompleteness", [e.challengesCompletedCount.toString(), e.challengesCount.toString()])
          , o = 0 === e.challengesCount ? 0 : e.challengesCompletedCount / e.challengesCount * 100;
        this._progressBar.setProgress(o),
        this.__progressLabel.textContent = i,
        this._watchBtn.setData(e),
        JSUtils.isEmpty(e.getPreviewImageId()) || this.data.isComplete() ? this._infoBtn.setDisplay(!1) : this._infoBtn.addTarget(this, this._eCheckMoreInfo, EventType.TAP),
        this.toggleClass("production-tagged", this.data.isFeatured)
    }
    ,
    UTSBCSetTileView.prototype.getData = function() {
        return this.data
    }
    ,
    UTSBCSetTileView.prototype.render = function() {
        var e, t, i = this, o = services.Localization;
        if (this.data) {
            if (0 < this.data.awards.length) {
                this._rewards.render(null === (e = this.data) || void 0 === e ? void 0 : e.awards);
                var n = this.data.awards[0];
                if (n.item) {
                    var r = n.item;
                    this.itemView && this.itemView.canRender(r) || (null === (t = this.itemView) || void 0 === t || t.dealloc(),
                    this.itemView = factories.ItemView.createLargeItem(n.item),
                    this.itemView.init()),
                    this.itemView.render(n.item),
                    this.addSubview(this.itemView, this.__mainReward),
                    this.layoutSubviews()
                } else if (n.isPack) {
                    var a = new UTPackGraphicView;
                    a.init(),
                    a.setPackBackground(n.assetId),
                    a.setPromo(PurchaseDealType.REGULAR),
                    this.__mainReward.appendChild(a.getRootElement())
                } else
                    n.isCoin ? DOMKit.addClass(this.__mainReward, GameRewardStyle.COIN) : n.isXP && DOMKit.addClass(this.__mainReward, GameRewardStyle.XP)
            }
            this.__tileContent.textContent = this.data.description,
            this.__rewardsHeader.textContent = o.localize("sbc.rewards.title");
            var s, l = "";
            s = this.data.repeatabilityMode === SBCRepeatabilityMode.NON_REPEATABLE ? (l = o.localize("tile.sbcSets.nonrepeatable"),
            UTSquadBuildingSetStatusLabelView.Type.NON_REPEATABLE) : (l = this.data.repeatabilityMode === SBCRepeatabilityMode.LIMITED || this.data.repeatabilityMode === SBCRepeatabilityMode.REFRESH ? o.localize("tile.sbcSets.repeatable") + " " + this.data.getRepeatsRemaining().toString() : o.localize("tile.sbcSets.repeatable"),
            UTSquadBuildingSetStatusLabelView.Type.REPEATABLE),
            this._repeatableStatus.setType(s),
            this._repeatableStatus.setText(l);
            var c = this.data.repeatabilityMode === SBCRepeatabilityMode.REFRESH;
            if (c) {
                var d = o.localizeTimeRemaining(this.data.getRefreshTimeRemaining());
                this._refreshStatus.setText(d)
            }
            this._refreshStatus.setType(UTSquadBuildingSetStatusLabelView.Type.REFRESH),
            this._refreshStatus.setDisplay(c),
            this.data.notExpirable ? this._expireStatus.setType(UTSquadBuildingSetStatusLabelView.Type.NON_EXPIRY) : this._expireStatus.setType(UTSquadBuildingSetStatusLabelView.Type.EXPIRY),
            this._expireStatus.setDisplay(!this.data.isComplete()),
            this._setImage.onerror = function(e) {
                i._setImage.src = "images/sbc/logo_SBC_home_tile.png"
            }
            ,
            this._setImage.src = AssetLocationUtils.getSquadBuildingSetImageUri(this.data.assetId),
            this.data.isComplete() ? this.addClass("complete") : this._expireStatus.setExpiryText(!this.data.notExpirable, this.data.getTimeRemaining())
        }
    }
    ,
    UTSBCSetTileView.prototype.onUpdate = function() {
        if (this.data && (this.data.notExpirable || this._expireStatus.setExpiryText(!this.data.notExpirable, this.data.getTimeRemaining()),
        this.data.repeatabilityMode === SBCRepeatabilityMode.REFRESH)) {
            var e = services.Localization.localizeTimeRemaining(this.data.getRefreshTimeRemaining());
            this._refreshStatus.setText(e)
        }
    }
    ,
    UTSBCSetTileView.prototype._eCheckMoreInfo = function(e, t, i) {
        var o;
        this._triggerActions(UTSBCSetTileView.Event.PREVIEW_SELECTED, {
            previewImageId: null === (o = this.data) || void 0 === o ? void 0 : o.getPreviewImageId()
        })
    }
    ,
    UTSBCSetTileView.Event = Object.freeze({
        PREVIEW_SELECTED: "UTSBCSetTileView.Event.PREVIEW_SELECTED"
    }),
    UTSBCSetTileView
}(UTTileView);
UTSBCSetTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("col-1-2-md"),
        e.classList.add("col-1-1"),
        e.classList.add("ut-sbc-set-tile-view");
        var t = document.createElement("div");
        t.classList.add("content-container");
        var i = document.createElement("div");
        i.classList.add("tileHeader"),
        this._setImage = new EAImageView,
        this._setImage.getRootElement().classList.add("set-image"),
        i.appendChild(this._setImage.getRootElement());
        var o = document.createElement("div");
        o.classList.add("ea-logo"),
        i.appendChild(o),
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileTitle"),
        i.appendChild(this.__tileTitle);
        var n = document.createElement("div");
        n.classList.add("sbc-set--buttons"),
        this._watchBtn = new UTSBCFavoriteButtonControl,
        n.appendChild(this._watchBtn.getRootElement()),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        n.appendChild(this._infoBtn.getRootElement()),
        i.appendChild(n),
        t.appendChild(i);
        var r = document.createElement("div");
        r.classList.add("reward-content");
        var a = document.createElement("div");
        a.classList.add("objective-column");
        var s = document.createElement("div");
        s.classList.add("challenge"),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        s.appendChild(this.__tileContent);
        var l = document.createElement("div");
        l.classList.add("ut-sbc-set-tile-view--progress-block"),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        this._progressBar.getRootElement().classList.add("sbc-set-progress"),
        this._progressBar.getRootElement().classList.add("mini"),
        l.appendChild(this._progressBar.getRootElement()),
        this.__progressLabel = document.createElement("p"),
        this.__progressLabel.classList.add("ut-sbc-set-tile-view--progress-label"),
        l.appendChild(this.__progressLabel),
        s.appendChild(l),
        a.appendChild(s);
        var c = document.createElement("div");
        c.classList.add("group-rewards"),
        this.__rewardsHeader = document.createElement("div"),
        this.__rewardsHeader.classList.add("rewards-header"),
        c.appendChild(this.__rewardsHeader),
        this._rewards = new TileRewardListView,
        c.appendChild(this._rewards.getRootElement()),
        a.appendChild(c),
        r.appendChild(a);
        var d = document.createElement("div");
        d.classList.add("reward-column"),
        this.__mainReward = document.createElement("div"),
        this.__mainReward.classList.add("main-reward"),
        d.appendChild(this.__mainReward),
        r.appendChild(d),
        t.appendChild(r),
        e.appendChild(t);
        var u = document.createElement("div");
        u.classList.add("sbc-status-container"),
        this._repeatableStatus = new UTSquadBuildingSetStatusLabelView,
        u.appendChild(this._repeatableStatus.getRootElement()),
        this._refreshStatus = new UTSquadBuildingSetStatusLabelView,
        u.appendChild(this._refreshStatus.getRootElement()),
        this._expireStatus = new UTSquadBuildingSetStatusLabelView,
        u.appendChild(this._expireStatus.getRootElement()),
        e.appendChild(u),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSetTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._setImage.destroy(),
    this.__tileTitle = null,
    this._watchBtn.destroy(),
    this._infoBtn.destroy(),
    this.__tileContent = null,
    this._progressBar.destroy(),
    this.__progressLabel = null,
    this.__rewardsHeader = null,
    this._rewards.destroy(),
    this.__mainReward = null,
    this._repeatableStatus.destroy(),
    this._refreshStatus.destroy(),
    this._expireStatus.destroy()
}
,
UTSBCSetTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCHubView = function(t) {
    function UTSBCHubView() {
        var e = t.call(this) || this;
        return e.sbcSetTiles = [],
        e
    }
    return __extends(UTSBCHubView, t),
    UTSBCHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._SBCCategoriesTM.setDisplay(!1),
        this._SBCCategoriesTM.addTarget(this, this.eTabSelected, EventType.TAP),
        DOMKit.toggleDisplayStyle(this.__favoritesTile, !1),
        this.__favoritesHeader.textContent = e.localize("sbc.favorites.title"),
        this.__favoritesInfo.textContent = e.localize("sbc.favorites.info"),
        this.setInteractionState(!0)
    }
    ,
    UTSBCHubView.prototype.dealloc = function() {
        this.clearTiles(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCHubView.prototype.clearTiles = function() {
        this.sbcSetTiles.forEach(function(e) {
            return e.dealloc()
        }),
        this.sbcSetTiles = []
    }
    ,
    UTSBCHubView.prototype.populateNavigation = function(e, t) {
        var i = this;
        this._SBCCategoriesTM.clearTabs(),
        0 < e.length ? (this._SBCCategoriesTM.setDisplay(!0),
        e.filter(function(e) {
            return e.displayable
        }).forEach(function(e, t) {
            return i._SBCCategoriesTM.addTab(t, e.name)
        }),
        this._SBCCategoriesTM.setActiveTab(t),
        this._SBCCategoriesTM.layoutSubviews()) : this._SBCCategoriesTM.setDisplay(!1)
    }
    ,
    UTSBCHubView.prototype.populateTiles = function(e, t) {
        var i = this;
        this.clearTiles(),
        e = e.filter(function(e) {
            return e.isDisplayable()
        }),
        JSUtils.isValid(t) && DOMKit.toggleDisplayStyle(this.__favoritesTile, 0 === e.length && t.type === SBCCategoryType.CUSTOM_FAVOURITE),
        e.forEach(function(e) {
            var t = new UTSBCSetTileView;
            t.init(),
            t.title = e.name,
            t.setData(e),
            t.addTarget(i, i.eTileSelected, EventType.TAP),
            t.addTarget(i, i.eTilePreviewSelected, UTSBCSetTileView.Event.PREVIEW_SELECTED),
            i.sbcSetTiles.push(t),
            i.addSubview(t, i.__sbcSetTiles),
            t.render()
        }),
        this.layoutSubviews(),
        DOMKit.toggleClass(this.getRootElement(), "single-set", e.length <= 1)
    }
    ,
    UTSBCHubView.prototype.onUpdate = function() {
        this.sbcSetTiles.forEach(function(e) {
            return e.onUpdate()
        })
    }
    ,
    UTSBCHubView.prototype.eTabSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSBCHubView.Event.CATEGORY_SELECTED, i)
    }
    ,
    UTSBCHubView.prototype.eTileSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSBCHubView.Event.TILE_SELECTED, {
            index: this.sbcSetTiles.indexOf(e),
            set: e.getData()
        })
    }
    ,
    UTSBCHubView.prototype.eTilePreviewSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSBCHubView.Event.PREVIEW_SELECTED, i)
    }
    ,
    UTSBCHubView.Event = Object.freeze({
        CATEGORY_SELECTED: "UTSBCHubView.Event.CATEGORY_SELECTED",
        TILE_SELECTED: "UTSBCHubView.Event.TILE_SELECTED",
        PREVIEW_SELECTED: "UTSBCHubView.Event.PREVIEW_SELECTED"
    }),
    UTSBCHubView
}(EATargetActionView);
UTSBCHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("SBCHub"),
        this._SBCCategoriesTM = new EAFilterBarView,
        e.appendChild(this._SBCCategoriesTM.getRootElement());
        var t = document.createElement("div");
        t.classList.add("container"),
        this.__favoritesTile = document.createElement("div"),
        this.__favoritesTile.classList.add("no-favorites-tile"),
        this.__favoritesHeader = document.createElement("h1"),
        this.__favoritesTile.appendChild(this.__favoritesHeader),
        this.__favoritesInfo = document.createElement("p"),
        this.__favoritesTile.appendChild(this.__favoritesInfo),
        t.appendChild(this.__favoritesTile),
        this.__sbcSetTiles = document.createElement("div"),
        this.__sbcSetTiles.classList.add("layout-hub"),
        this.__sbcSetTiles.classList.add("grid"),
        t.appendChild(this.__sbcSetTiles),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._SBCCategoriesTM.destroy(),
    this.__favoritesTile = null,
    this.__favoritesHeader = null,
    this.__favoritesInfo = null,
    this.__sbcSetTiles = null
}
,
UTSBCHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCHubViewController = function(i) {
    function UTSBCHubViewController() {
        var e = i.call(this) || this;
        return e._intervalController = new EAIntervalController(MS_PER_SECOND,e.handleViewUpdates.bind(e)),
        e._previouslySelectedCategoryId = 0,
        e._viewmodel = null,
        e
    }
    return __extends(UTSBCHubViewController, i),
    UTSBCHubViewController.prototype.init = function() {
        this.initialized || (i.prototype.init.call(this),
        this._intervalController.init(),
        TelemetryManager.trackPage(TelemetryManager.Sections.SBC, "SBC Hub"),
        this._viewmodel || (this._viewmodel = new UTSBCSetsViewModel([],[])))
    }
    ,
    UTSBCHubViewController.prototype.initWithSBCSetCategories = function(e, t) {
        this.initialized || (this._viewmodel = new UTSBCSetsViewModel(e,t),
        this.init())
    }
    ,
    UTSBCHubViewController.prototype.dealloc = function() {
        this._viewmodel && (this._viewmodel.dealloc(),
        this._viewmodel = null),
        this._intervalController.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTSBCHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCHubView
    }
    ,
    UTSBCHubViewController.prototype._getTelemetryId = function() {
        return "Hub - SBC"
    }
    ,
    UTSBCHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.sbcHub")
    }
    ,
    UTSBCHubViewController.prototype.onPause = function() {
        i.prototype.onPause.call(this),
        this.isViewDisplayed() && this._intervalController.stop()
    }
    ,
    UTSBCHubViewController.prototype.onResume = function() {
        i.prototype.onResume.call(this),
        this.isViewDisplayed() && this._intervalController.start()
    }
    ,
    UTSBCHubViewController.prototype.viewDidAppear = function() {
        var e, t = this.getView();
        i.prototype.viewDidAppear.call(this),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        this._requestSBCData(),
        this._intervalController.start(),
        t.addTarget(this, this._eCategorySelected, UTSBCHubView.Event.CATEGORY_SELECTED),
        t.addTarget(this, this._eTileSelected, UTSBCHubView.Event.TILE_SELECTED),
        t.addTarget(this, this._eCheckMoreInfo, UTSBCHubView.Event.PREVIEW_SELECTED)
    }
    ,
    UTSBCHubViewController.prototype.viewWillDisappear = function() {
        var e, t = this.getView();
        i.prototype.viewWillDisappear.call(this),
        null === (e = this._viewmodel) || void 0 === e || e.cancelRequests(),
        this._intervalController.stop(),
        t.removeTarget(this, this._eCategorySelected, UTSBCHubView.Event.CATEGORY_SELECTED),
        t.removeTarget(this, this._eTileSelected, UTSBCHubView.Event.TILE_SELECTED),
        t.removeTarget(this, this._eCheckMoreInfo, UTSBCHubView.Event.PREVIEW_SELECTED)
    }
    ,
    UTSBCHubViewController.prototype.willDismiss = function(e) {
        e && e instanceof UTSBCRewardPreviewViewController && e.dealloc()
    }
    ,
    UTSBCHubViewController.prototype._requestSBCData = function() {
        var e, a = this;
        null === (e = this._viewmodel) || void 0 === e || e.requestSets().observe(this, function(e, t) {
            var i, o;
            if (e.unobserve(a),
            DebugUtils.Assert(JSUtils.isValid(a._viewmodel), "Expected a valid SBC view model reference."),
            a._viewmodel)
                if (t.success) {
                    var n = a.getView();
                    JSUtils.isValid(a._previouslySelectedCategoryId) && a._viewmodel.setCategoryById(a._previouslySelectedCategoryId),
                    n.populateNavigation(a._viewmodel.getCategories(), a._viewmodel.getCurrentCategoryIndex()),
                    n.populateTiles(a._viewmodel.getSetsByCurrentCategory(), a._viewmodel.getCurrentCategory())
                } else if (NetworkErrorManager.checkCriticalStatus(t.status))
                    NetworkErrorManager.handleStatus(t.status);
                else {
                    var r = (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcSets.failedToLoad";
                    services.Notification.queue([services.Localization.localize(r), UINotificationType.NEGATIVE]),
                    null === (o = a.getNavigationController()) || void 0 === o || o.popViewController()
                }
        })
    }
    ,
    UTSBCHubViewController.prototype.handleViewUpdates = function() {
        var e;
        null === (e = this._viewmodel) || void 0 === e || e.updateSetRepeatability(),
        this.getView().onUpdate()
    }
    ,
    UTSBCHubViewController.prototype._eCategorySelected = function(e, t, i) {
        var o, n, r, a, s = null !== (o = i.index) && void 0 !== o ? o : 0, l = null === (n = this._viewmodel) || void 0 === n ? void 0 : n.getCurrentCategoryIndex();
        if (TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Select Filter"),
        this._viewmodel && s !== l) {
            var c = this._viewmodel.getCategoryByIndex(s);
            this._previouslySelectedCategoryId = null !== (r = null == c ? void 0 : c.id) && void 0 !== r ? r : 0,
            this._viewmodel.setCurrentCategoryIndex(s),
            this.getView().populateTiles(this._viewmodel.getSetsByCurrentCategory(), this._viewmodel.getCurrentCategory()),
            TelemetryManager.trackPage(TelemetryManager.Sections.SBC, "SBC Set List - " + (null !== (a = null == c ? void 0 : c.name) && void 0 !== a ? a : "unknown category"))
        }
    }
    ,
    UTSBCHubViewController.prototype._eTileSelected = function(e, t, i) {
        function _Ha(e, t) {
            var i;
            if (e.unobserve(s),
            t.success) {
                var o = s.getNavigationController();
                if (o) {
                    var n = isPhone() ? new UTSBCSquadOverviewViewController : new UTSBCSquadSplitViewController;
                    a ? n.initWithSBCSet(c, a.id) : n.init(),
                    o.pushViewController(n)
                }
            } else {
                var r = (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcChallenges.failedToLoad";
                services.Notification.queue([services.Localization.localize(r), UINotificationType.NEGATIVE])
            }
            l.setInteractionState(!0)
        }
        var a, s = this, l = this.getView(), c = i.set;
        l.setInteractionState(!1),
        services.SBC.requestChallengesForSet(c).observe(this, function(e, t) {
            var i;
            if (e.unobserve(s),
            t.success && JSUtils.isObject(t.data) && 0 < t.data.challenges.length)
                if (c.hidden)
                    a = t.data.challenges[0],
                    services.SBC.loadChallenge(a).observe(s, _Ha);
                else {
                    var o = s.getNavigationController();
                    if (o) {
                        var n = void 0;
                        isPhone() ? (n = new UTSBCChallengesViewController).initWithSBCSet(c) : (n = new UTSBCGroupChallengeSplitViewController).initWithSBCSet(c),
                        o.pushViewController(n, !0),
                        o.setNavigationTitle(c.name)
                    }
                    l.setInteractionState(!0)
                }
            else if (NetworkErrorManager.checkCriticalStatus(t.status))
                NetworkErrorManager.handleStatus(t.status);
            else {
                var r = (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcChallenges.failedToLoad";
                l.setInteractionState(!0),
                services.Notification.queue([services.Localization.localize(r), UINotificationType.NEGATIVE])
            }
        })
    }
    ,
    UTSBCHubViewController.prototype._eCheckMoreInfo = function(e, t, i) {
        var o = i.previewImageId;
        if (!JSUtils.isEmpty(o)) {
            var n = new UTSBCRewardPreviewViewController;
            n.initWithImage(o),
            n.modalDisplayStyle = "form",
            this.presentViewController(n, !0)
        }
    }
    ,
    UTSBCHubViewController
}(EAViewController);
services.URL.registerDeepLinkID(DeepLinkSection.SBC, function(a) {
    var s = this
      , e = getAppMain().getRootViewController()
      , t = e.getPresentedViewController()
      , n = t instanceof UTTabBarController ? t.getCurrentViewController() : null
      , i = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED)
      , o = isPhone() ? UTGameTabBarController.TabTag.HOME : UTGameTabBarController.TabTag.SBC
      , r = null
      , l = null;
    if (i && n instanceof UTNavigationController) {
        e.setGameViewTab(o);
        function DIa() {
            if (isPhone()) {
                var e = new UTSBCHubViewController;
                e.init(),
                n.pushViewController(e)
            }
        }
        function EIa(e, t) {
            if (e.unobserve(s),
            t.success) {
                var i = isPhone() ? new UTSBCSquadOverviewViewController : new UTSBCSquadSplitViewController;
                l && r ? i.initWithSBCSet(l, r.id) : i.init(),
                n.pushViewController(i)
            } else
                DIa();
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }
        function FIa(e, t) {
            var i;
            if (e.unobserve(s),
            t.success && JSUtils.isObject(t.data) && 0 < t.data.challenges.length && l)
                if (l.hidden)
                    r = t.data.challenges[0],
                    services.SBC.loadChallenge(r).observe(s, EIa);
                else {
                    var o = new UTSBCChallengesViewController;
                    o.initWithSBCSet(l),
                    n.pushViewController(o),
                    gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
                }
            else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (DIa(),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
                (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED && services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED, !1))
        }
        0 === a.length ? DIa() : (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.requestSets().observe(this, function(e, t) {
            if (e.unobserve(s),
            t.success && JSUtils.isObject(t.data)) {
                var i = t.data.sets.filter(function(e) {
                    return e.tutorial
                })
                  , o = JSUtils.find(i, function(e) {
                    return !e.isComplete()
                });
                if (!JSUtils.isValid(o)) {
                    var n = parseInt(a[0], 10);
                    if (l = JSUtils.find(t.data.sets, function(e) {
                        return e.id === n
                    }),
                    JSUtils.isValid(l) && !l.isComplete())
                        return void services.SBC.requestChallengesForSet(l).observe(s, FIa)
                }
            } else {
                var r = t.error ? t.error.code : t.status;
                NetworkErrorManager.checkCriticalStatus(r) ? NetworkErrorManager.handleStatus(r) : r === UtasErrorCode.SERVICE_IS_DISABLED && services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED, !1)
            }
            DIa(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }
        .bind(this)))
    } else
        e.setGameViewTab(UTGameTabBarController.TabTag.HOME)
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadListViewModel = function(t) {
    function UTSquadListViewModel(e) {
        return t.call(this, e) || this
    }
    return __extends(UTSquadListViewModel, t),
    UTSquadListViewModel.prototype.getSquads = function(t) {
        return t ? this._collection.filter(function(e) {
            return e.getType() === t
        }) : this._collection.slice()
    }
    ,
    UTSquadListViewModel.prototype.getSquadNames = function() {
        return this._collection.map(function(e) {
            return e.getName()
        })
    }
    ,
    UTSquadListViewModel.prototype.setIndexBySquadId = function(t) {
        this.setIndex(this.indexOf(function(e) {
            return e.getId() === t
        }))
    }
    ,
    UTSquadListViewModel
}(EAIterator)
  , UTSquadStatsListDataView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTSquadStatsListDataView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t
    }
    return __extends(UTSquadStatsListDataView, i),
    UTSquadStatsListDataView.prototype.init = function() {
        i.prototype.init.call(this),
        this.__labelChemistry.textContent = this.loc.localize("squad.chemistry.label"),
        this.__labelRating.textContent = this.loc.localize("squads.rating"),
        this._ratingStars.init()
    }
    ,
    UTSquadStatsListDataView.prototype.setChemistryDisplay = function(e) {
        DOMKit.toggleDisplayStyle(this.__chemistryContainer, e)
    }
    ,
    UTSquadStatsListDataView.prototype.setChemistry = function(e) {
        this.__valueChemistry.textContent = this.loc.localize("squad.chemistry.fraction", [e.toString(), UTSquadEntity.TOTAL_MAX_CHEM.toString()])
    }
    ,
    UTSquadStatsListDataView.prototype.setRating = function(e) {
        this._ratingStars.setRating(e)
    }
    ,
    UTSquadStatsListDataView
}(EAView));
UTSquadStatsListDataView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-summary-info");
        var t = document.createElement("div");
        t.classList.add("rating"),
        this.__labelRating = document.createElement("span"),
        this.__labelRating.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__labelRating),
        this._ratingStars = new UTSquadStarRatingView,
        t.appendChild(this._ratingStars.getRootElement()),
        e.appendChild(t),
        this.__chemistryContainer = document.createElement("div"),
        this.__chemistryContainer.classList.add("chemistry"),
        this.__labelChemistry = document.createElement("span"),
        this.__labelChemistry.classList.add("ut-squad-summary-label"),
        this.__chemistryContainer.appendChild(this.__labelChemistry),
        this.__valueChemistry = document.createElement("span"),
        this.__valueChemistry.classList.add("ut-squad-summary-value"),
        this.__chemistryContainer.appendChild(this.__valueChemistry),
        e.appendChild(this.__chemistryContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadStatsListDataView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__labelRating = null,
    this._ratingStars.destroy(),
    this.__chemistryContainer = null,
    this.__labelChemistry = null,
    this.__valueChemistry = null
}
,
UTSquadStatsListDataView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadTableCellView = function(i) {
    function UTSquadTableCellView() {
        var e = i.call(this) || this;
        return e.dataComponent = null,
        e.squad = null,
        e
    }
    return __extends(UTSquadTableCellView, i),
    UTSquadTableCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTSquadTableCellView.prototype.dealloc = function() {
        this.squad && (this.squad.onDataUpdated.unobserve(this),
        this.squad = null),
        this.dataComponent && (this.dataComponent.dealloc(),
        this.dataComponent = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTSquadTableCellView.prototype.setInteractionState = function(e) {
        this.removeClass(enums.UIState.HOVER);
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTSquadTableCellView.prototype.setSquad = function(e) {
        this.squad && this.squad.onDataUpdated.unobserve(this),
        this.squad = e,
        this.squad.onDataUpdated.observe(this, this.squadDataUpdateHandler)
    }
    ,
    UTSquadTableCellView.prototype.getSquad = function() {
        return this.squad
    }
    ,
    UTSquadTableCellView.prototype.setSelected = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTSquadTableCellView.prototype.render = function() {
        var e, t, i, o, n, r, a, s;
        if (this.getRootElement()) {
            var l = services.Localization;
            this.__name.textContent = null !== (t = null === (e = this.squad) || void 0 === e ? void 0 : e.getName()) && void 0 !== t ? t : "",
            this.__formation.textContent = null !== (n = null === (o = null === (i = this.squad) || void 0 === i ? void 0 : i.getFormation()) || void 0 === o ? void 0 : o.displayName) && void 0 !== n ? n : "",
            this.__activeLabel.textContent = l.localize("navbar.label.activesquad"),
            this.__formationLabel.textContent = l.localize("squads.formation"),
            JSUtils.isValid(this.dataComponent) || (this.dataComponent = new UTSquadStatsListDataView({
                localization: services.Localization
            }),
            this.dataComponent.init(),
            this.__dataContainer.appendChild(this.dataComponent.getRootElement())),
            this.squad && this.dataComponent && (this.toggleClass("show-tag", !this.squad.isTOTW() && this.squad.isActive()),
            (null === (r = this.squad) || void 0 === r ? void 0 : r.isTOTW()) ? this.dataComponent.setChemistryDisplay(!1) : this.dataComponent.setChemistry(null === (a = this.squad) || void 0 === a ? void 0 : a.getChemistry()),
            this.dataComponent.setRating(null === (s = this.squad) || void 0 === s ? void 0 : s.getRating()))
        }
    }
    ,
    UTSquadTableCellView.prototype._mouseEnter = function(e) {
        this.isInteractionEnabled() && (i.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER))
    }
    ,
    UTSquadTableCellView.prototype._mouseLeave = function(e) {
        this.isInteractionEnabled() && (i.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.HOVER))
    }
    ,
    UTSquadTableCellView.prototype._touchStarted = function(e) {
        this.isInteractionEnabled() && (i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE))
    }
    ,
    UTSquadTableCellView.prototype._touchMoved = function(e) {
        this.isInteractionEnabled() && (i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE))
    }
    ,
    UTSquadTableCellView.prototype._touchEnded = function(e) {
        this.isInteractionEnabled() && (i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE))
    }
    ,
    UTSquadTableCellView.prototype._tapDetected = function(e) {
        this.isInteractionEnabled() && (i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP, {
            squad: this.squad
        }))
    }
    ,
    UTSquadTableCellView.prototype.squadDataUpdateHandler = function(e, t) {
        this.render()
    }
    ,
    UTSquadTableCellView
}(EATargetActionView);
UTSquadTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-table-cell-view");
        var t = document.createElement("div");
        t.classList.add("ut-squad-table-cell-view--tag");
        var i = document.createElement("div");
        i.classList.add("label-container");
        var o = document.createElement("span");
        o.classList.add("icon_squad"),
        o.classList.add("fut_icon"),
        i.appendChild(o),
        this.__activeLabel = document.createElement("span"),
        this.__activeLabel.classList.add("label"),
        i.appendChild(this.__activeLabel),
        t.appendChild(i),
        e.appendChild(t),
        this.__name = document.createElement("h1"),
        this.__name.classList.add("ut-squad-table-cell-view--name"),
        e.appendChild(this.__name),
        this.__dataContainer = document.createElement("div"),
        this.__dataContainer.classList.add("ut-squad-table-cell-view--summary");
        var n = document.createElement("div");
        n.classList.add("summary-formation"),
        this.__formationLabel = document.createElement("span"),
        this.__formationLabel.classList.add("ut-squad-summary-label"),
        n.appendChild(this.__formationLabel),
        this.__formation = document.createElement("span"),
        this.__formation.classList.add("ut-squad-summary-value"),
        n.appendChild(this.__formation),
        this.__dataContainer.appendChild(n),
        e.appendChild(this.__dataContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__activeLabel = null,
    this.__name = null,
    this.__dataContainer = null,
    this.__formationLabel = null,
    this.__formation = null
}
,
UTSquadTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSectionedSquadTableView = function(i) {
    function UTSectionedSquadTableView() {
        var e = i.call(this) || this;
        return e.cellViews = [],
        e.emptyMessage = null,
        e
    }
    return __extends(UTSectionedSquadTableView, i),
    UTSectionedSquadTableView.prototype.init = function() {
        i.prototype.init.call(this),
        this._header.init(),
        this._header.hideActionButton()
    }
    ,
    UTSectionedSquadTableView.prototype.dealloc = function() {
        this.removeEmptyMessage(),
        this.clearTable(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTSectionedSquadTableView.prototype.setInteractionState = function(t) {
        i.prototype.setInteractionState.call(this, t),
        this.cellViews.forEach(function(e) {
            return e.setInteractionState(t)
        })
    }
    ,
    UTSectionedSquadTableView.prototype.clearTable = function() {
        this.cellViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.cellViews = []
    }
    ,
    UTSectionedSquadTableView.prototype.setHeaderTitle = function(e) {
        this._header.setText(e)
    }
    ,
    UTSectionedSquadTableView.prototype.setHeaderButtonLabel = function(e) {
        this._header.setActionButtonText(e)
    }
    ,
    UTSectionedSquadTableView.prototype.setHeaderButtonCallback = function(e) {
        var t = this;
        JSUtils.isFunction(e) && (this._header.getActions(this, EventType.TAP).forEach(function(e) {
            return t._header.removeTarget(t, e, EventType.TAP)
        }),
        this._header.addTarget(this, e, EventType.TAP))
    }
    ,
    UTSectionedSquadTableView.prototype.toggleHeaderButtonEnabled = function(e) {
        this._header.toggleButtonEnabled(e)
    }
    ,
    UTSectionedSquadTableView.prototype.toggleHeaderButton = function(e) {
        this._header.toggleOptionButton(e)
    }
    ,
    UTSectionedSquadTableView.prototype.removeEmptyMessage = function() {
        var e;
        null === (e = this.emptyMessage) || void 0 === e || e.dealloc(),
        this.emptyMessage = null
    }
    ,
    UTSectionedSquadTableView.prototype.displayEmptyMessage = function(e, t) {
        this.clearTable(),
        this.emptyMessage || (this.emptyMessage = new UTEmptySectionMessageView,
        this.getRootElement().appendChild(this.emptyMessage.getRootElement())),
        this.emptyMessage.setHeading(e),
        this.emptyMessage.setDescription(t)
    }
    ,
    UTSectionedSquadTableView.prototype.generateCellView = function(e) {
        var t = new UTSquadTableCellView;
        return t.init(),
        t.setSquad(e),
        t.render(),
        t.addClass("show-arrow scalable"),
        t.addTarget(this, this.eCellEventHandler, EventType.TAP),
        this.addSubview(t, this.__table),
        t
    }
    ,
    UTSectionedSquadTableView.prototype.setSquads = function(e) {
        return this.removeEmptyMessage(),
        this.clearTable(),
        this.cellViews = e.map(this.generateCellView, this),
        this.layoutSubviews(),
        this.cellViews
    }
    ,
    UTSectionedSquadTableView.prototype.selectCellByIndex = function(t) {
        var i = this;
        0 <= t && t < this.cellViews.length && this.cellViews.forEach(function(e) {
            return e.setSelected(e === i.cellViews[t])
        })
    }
    ,
    UTSectionedSquadTableView.prototype.selectCellBySquadId = function(i) {
        this.cellViews.forEach(function(e) {
            var t;
            return e.setSelected((null === (t = e.getSquad()) || void 0 === t ? void 0 : t.getId()) === i)
        })
    }
    ,
    UTSectionedSquadTableView.prototype.eCellEventHandler = function(e, t, i) {
        if (t === EventType.TAP) {
            var o = this.cellViews.indexOf(e);
            this._triggerActions(UTSectionedSquadTableView.Event.CELL_SELECTED, {
                squad: i.squad,
                cell: e,
                index: o
            })
        }
    }
    ,
    UTSectionedSquadTableView.Event = Object.freeze({
        CELL_SELECTED: "UTSectionedSquadTableView.Event.CELL_SELECTED"
    }),
    UTSectionedSquadTableView
}(EATargetActionView);
UTSectionedSquadTableView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("sectioned-item-list"),
        this._header = new UTSectionedTableHeaderView,
        e.appendChild(this._header.getRootElement()),
        this.__table = document.createElement("div"),
        e.appendChild(this.__table),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSectionedSquadTableView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._header.destroy(),
    this.__table = null
}
,
UTSectionedSquadTableView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadListView = function(e) {
    function UTSquadListView() {
        return e.call(this) || this
    }
    return __extends(UTSquadListView, e),
    UTSquadListView.prototype.init = function() {
        e.prototype.init.call(this),
        this._regularSquadSection.init(),
        this._regularSquadSection.addTarget(this, this.eCellSelected, UTSectionedSquadTableView.Event.CELL_SELECTED),
        this._conceptSquadSection.init(),
        this._conceptSquadSection.addTarget(this, this.eCellSelected, UTSectionedSquadTableView.Event.CELL_SELECTED)
    }
    ,
    UTSquadListView.prototype.render = function(e, t, i) {
        var o = services.Localization
          , n = e.length + t.length
          , r = i <= n;
        this.__totalLabel.textContent = o.localize("lineupList.squadSelector.total", [n.toString(), i.toString()]),
        this._regularSquadSection.setHeaderTitle(o.localize("squads.button.regularsquads", [e.length.toString()])),
        this._regularSquadSection.setHeaderButtonLabel(o.localize("infopanel.button.createnewsquad")),
        this._regularSquadSection.setHeaderButtonCallback(this.eHeaderButtonSelected.bind(this)),
        this._regularSquadSection.toggleHeaderButton(!0),
        this._regularSquadSection.toggleHeaderButtonEnabled(!r),
        this._conceptSquadSection.setHeaderTitle(o.localize("squads.button.conceptsquads", [t.length.toString()])),
        0 < e.length ? this._regularSquadSection.setSquads(e) : this._regularSquadSection.displayEmptyMessage(o.localize("squads.setEmptyMessage.regularHeader"), o.localize("squads.setEmptyMessage.regularMessage")),
        0 < t.length ? this._conceptSquadSection.setSquads(t) : this._conceptSquadSection.displayEmptyMessage(o.localize("squads.setEmptyMessage.conceptHeader"), o.localize("squads.setEmptyMessage.conceptMessage"))
    }
    ,
    UTSquadListView.prototype.selectListRow = function(e) {
        this._regularSquadSection.selectCellBySquadId(e),
        this._conceptSquadSection.selectCellBySquadId(e)
    }
    ,
    UTSquadListView.prototype.getRegularSquadSection = function() {
        return this._regularSquadSection
    }
    ,
    UTSquadListView.prototype.eHeaderButtonSelected = function(e) {
        this._triggerActions(UTSquadListView.Event.CREATE_SQUAD)
    }
    ,
    UTSquadListView.prototype.eCellSelected = function(e, t, i) {
        this._triggerActions(UTSquadListView.Event.SQUAD_SELECTED, {
            section: e,
            cell: i.cell,
            index: i.index,
            squad: i.squad
        })
    }
    ,
    UTSquadListView.Event = Object.freeze({
        CREATE_SQUAD: "UTSquadListView.Event.CREATE_SQUAD",
        SQUAD_SELECTED: "UTSquadListView.Event.SQUAD_SELECTED"
    }),
    UTSquadListView
}(EATargetActionView);
UTSquadListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("ut-squad-list-view"),
        this.__totalLabel = document.createElement("p"),
        this.__totalLabel.classList.add("total-label"),
        e.appendChild(this.__totalLabel),
        this._regularSquadSection = new UTSectionedSquadTableView,
        e.appendChild(this._regularSquadSection.getRootElement()),
        this._conceptSquadSection = new UTSectionedSquadTableView,
        e.appendChild(this._conceptSquadSection.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__totalLabel = null,
    this._regularSquadSection.destroy(),
    this._conceptSquadSection.destroy()
}
,
UTSquadListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadListViewController = function(t) {
    function UTSquadListViewController() {
        return null !== t && t.apply(this, arguments) || this
    }
    return __extends(UTSquadListViewController, t),
    UTSquadListViewController.prototype.initWithSquads = function(e) {
        this.initialized || (this.updateViewModel(e),
        this.init())
    }
    ,
    UTSquadListViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.squadListViewDelegate && (this.squadListViewDelegate = null),
        this.viewmodel = null
    }
    ,
    UTSquadListViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadListView
    }
    ,
    UTSquadListViewController.prototype._getTelemetryId = function() {
        return "Squad List"
    }
    ,
    UTSquadListViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.squadlist")
    }
    ,
    UTSquadListViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.onCreateSquad, UTSquadListView.Event.CREATE_SQUAD),
        e.addTarget(this, this.onSquadSelected, UTSquadListView.Event.SQUAD_SELECTED),
        this.generateSquadsList()
    }
    ,
    UTSquadListViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.onCreateSquad, UTSquadListView.Event.CREATE_SQUAD),
        e.removeTarget(this, this.onSquadSelected, UTSquadListView.Event.SQUAD_SELECTED)
    }
    ,
    UTSquadListViewController.prototype.setSquadListViewDelegate = function(e) {
        this.squadListViewDelegate = e
    }
    ,
    UTSquadListViewController.prototype.getViewModel = function() {
        return this.viewmodel
    }
    ,
    UTSquadListViewController.prototype.updateViewModel = function(e) {
        this.viewmodel ? this.viewmodel.resetCollection(e) : this.viewmodel = new UTSquadListViewModel(e)
    }
    ,
    UTSquadListViewController.prototype.refreshData = function(e) {
        var t;
        e ? (this.updateViewModel([]),
        this.generateSquadsList()) : this.generateSquadsList(null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getIndex())
    }
    ,
    UTSquadListViewController.prototype.generateSquadsList = function(T) {
        var g = this
          , y = this.getView();
        y.setInteractionState(!1),
        services.Squad.requestSquadList().observe(this, function(e, t) {
            var i, o, n, r, a, s, l, c, d, u, p;
            e.unobserve(g),
            g.updateViewModel(null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.squads) && void 0 !== o ? o : []);
            var h = null !== (r = null === (n = g.viewmodel) || void 0 === n ? void 0 : n.length) && void 0 !== r ? r : 0
              , _ = JSUtils.isNumber(T) && 0 <= T && T < h ? T : services.Squad.getActiveSquadId();
            if (null === (a = g.viewmodel) || void 0 === a || a.setIndex(_),
            y) {
                if (g.isViewDisplayed()) {
                    var m = null !== (l = null === (s = g.viewmodel) || void 0 === s ? void 0 : s.current()) && void 0 !== l ? l : null;
                    y.render(null !== (d = null === (c = g.viewmodel) || void 0 === c ? void 0 : c.getSquads(SquadType.REGULAR)) && void 0 !== d ? d : [], null !== (p = null === (u = g.viewmodel) || void 0 === u ? void 0 : u.getSquads(SquadType.CONCEPT)) && void 0 !== p ? p : [], services.Squad.getMaxSquads()),
                    g.squadListViewDelegate ? (DebugUtils.Assert(JSUtils.isValid(m), "Missing squad entity"),
                    m && g.squadListViewDelegate.selectListRow(g, _, m)) : y.selectListRow(_)
                }
                y.setInteractionState(!0)
            }
        })
    }
    ,
    UTSquadListViewController.prototype.onSquadSelected = function(e, t, i) {
        var o, n, r, a, s = i.squad, l = null !== (n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.indexOf(function(e) {
            return e.getId() === i.squad.getId()
        })) && void 0 !== n ? n : 0, c = l !== (null === (r = this.viewmodel) || void 0 === r ? void 0 : r.getIndex());
        if (c && (null === (a = this.viewmodel) || void 0 === a || a.setIndex(l)),
        this.squadListViewDelegate)
            c && this.squadListViewDelegate.selectListRow(this, l, s);
        else {
            var d = this.getNavigationController();
            if (d) {
                var u = new UTSquadActionsViewController;
                u.initWithSquad(s),
                d.pushViewController(u, !0)
            }
        }
    }
    ,
    UTSquadListViewController.prototype.onCreateSquad = function(e, t, i) {
        var o = this
          , n = new UTRenameSquadPopupViewController;
        n.init(),
        n.onConfirm.observe(this, function(e, t) {
            e.unobserve(o),
            services.Squad.create(t, DEFAULT_FORMATION).observe(o, o.handleSquadCreation)
        }),
        n.modalDisplayDimensions.width = "24em",
        gPopupClickShield.setActivePopup(n)
    }
    ,
    UTSquadListViewController.prototype.handleSquadCreation = function(e, t) {
        var i, o, n;
        if (e.unobserve(this),
        t.success) {
            var r = null === (i = t.data) || void 0 === i ? void 0 : i.squad;
            if (r) {
                var a = r.getId();
                null === (o = this.viewmodel) || void 0 === o || o.add(r),
                null === (n = this.viewmodel) || void 0 === n || n.setIndexBySquadId(a);
                var s = this.getNavigationController();
                if (s) {
                    var l = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
                    l.initWithSquad(r),
                    s.pushViewController(l)
                }
            }
            services.Notification.queue([services.Localization.localize("notification.squad.created"), UINotificationType.NEUTRAL])
        } else {
            var c = t.error ? t.error.code : t.status;
            if (NetworkErrorManager.checkCriticalStatus(c))
                NetworkErrorManager.handleStatus(c);
            else {
                var d = void 0;
                switch (c) {
                case UtasErrorCode.NAME_EXISTS:
                    d = "popup.error.duplicateSquadName";
                    break;
                case UtasErrorCode.PERMISSION_DENIED:
                    d = "popup.error.squadsFull";
                    break;
                case UtasErrorCode.PROFANITY:
                    d = "popup.error.profanity";
                    break;
                default:
                    d = "popup.body.genericError"
                }
                services.Notification.queue([services.Localization.localize(d), UINotificationType.NEGATIVE])
            }
        }
    }
    ,
    UTSquadListViewController
}(EAViewController)
  , UTSquadListSplitViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadListSplitViewController() {
        var e = t.call(this) || this;
        return e._listViewController = new UTSquadListViewController,
        e
    }
    return __extends(UTSquadListSplitViewController, t),
    UTSquadListSplitViewController.prototype.init = function() {
        t.prototype.init.call(this),
        this._listViewController.init(),
        this.addChildViewController(this._listViewController)
    }
    ,
    UTSquadListSplitViewController.prototype.initWithSquads = function(e) {
        if (!this.initialized) {
            if (this._listViewController.initWithSquads(e),
            this._listViewController.setSquadListViewDelegate(this),
            0 < e.length) {
                var t = services.Squad.getActiveSquadId()
                  , i = JSUtils.find(e, function(e) {
                    return e.getId() === t
                });
                this._squadDetailsController = new UTSquadActionsViewController,
                i ? this._squadDetailsController.initWithSquad(i) : this._squadDetailsController.init(),
                this.addChildViewController(this._squadDetailsController)
            }
            this.init()
        }
    }
    ,
    UTSquadListSplitViewController.prototype.dealloc = function() {
        this._listViewController.dealloc(),
        this._squadDetailsController && (this._squadDetailsController.dealloc(),
        this._squadDetailsController = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadListSplitViewController.prototype.getNavigationTitle = function() {
        return this._listViewController.getNavigationTitle()
    }
    ,
    UTSquadListSplitViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.setLeftController(this._listViewController),
        this._squadDetailsController && this.setRightController(this._squadDetailsController);
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.SQUAD_CREATE, this, this._nSquadCreated),
        e.addObserver(AppNotification.SQUAD_DELETE, this, this._nSquadDeleted),
        e.addObserver(AppNotification.SQUAD_SAVE, this, this._nSquadSaved)
    }
    ,
    UTSquadListSplitViewController.prototype.viewWillDisappear = function() {
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.SQUAD_CREATE, this),
        e.removeObserver(AppNotification.SQUAD_DELETE, this),
        e.removeObserver(AppNotification.SQUAD_SAVE, this),
        t.prototype.viewWillDisappear.call(this)
    }
    ,
    UTSquadListSplitViewController.prototype.selectListRow = function(e, t, i) {
        e === this._listViewController && (this._listViewController.getView().selectListRow(i.getId()),
        this._squadDetailsController && this._squadDetailsController.setSquad(i))
    }
    ,
    UTSquadListSplitViewController.prototype._nSquadCreated = function(e, t, i) {
        this._listViewController.refreshData(!1)
    }
    ,
    UTSquadListSplitViewController.prototype._nSquadDeleted = function(e, t, i) {
        this._listViewController.refreshData(!0)
    }
    ,
    UTSquadListSplitViewController.prototype._nSquadSaved = function(e, t, i) {
        this._listViewController.refreshData(!1)
    }
    ,
    UTSquadListSplitViewController
}(UTSplitViewController))
  , UTTOTWHistoryViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTTOTWHistoryViewModel(e) {
        var t = i.call(this) || this;
        return t.squadCollection = new EAIterator([]),
        t.squadServiceObject = e,
        t
    }
    return __extends(UTTOTWHistoryViewModel, i),
    UTTOTWHistoryViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.squadCollection.dealloc()
    }
    ,
    UTTOTWHistoryViewModel.prototype.requestHistory = function() {
        var e = this.squadServiceObject.requestTOTWHistory();
        return e && this._trackRequest(e, !0, function _onRequestHistoryComplete(e) {
            e.success && e.data && (0 === this.squadCollection.length || e.status !== HttpStatusCode.NOT_MODIFIED) && 0 < e.data.squads.length && this.squadCollection.resetCollection(e.data.squads)
        }
        .bind(this)),
        e
    }
    ,
    UTTOTWHistoryViewModel.prototype.setCurrentSquad = function(t) {
        var e = this.squadCollection.indexOf(function(e) {
            return e.getId() === t.getId()
        });
        e && this.squadCollection.setIndex(e)
    }
    ,
    UTTOTWHistoryViewModel.prototype.writeSquad = function(e, t) {
        this.squadCollection.set(e, t)
    }
    ,
    UTTOTWHistoryViewModel.prototype.getSquads = function() {
        return this.squadCollection.values()
    }
    ,
    UTTOTWHistoryViewModel.prototype.getSquadByIndex = function(e) {
        return this.squadCollection.setIndex(e),
        this.squadCollection.current()
    }
    ,
    UTTOTWHistoryViewModel.prototype.getCurrentSquad = function() {
        return this.squadCollection.current()
    }
    ,
    UTTOTWHistoryViewModel.prototype.getIndex = function() {
        return this.squadCollection.getIndex()
    }
    ,
    UTTOTWHistoryViewModel
}(UTViewModel))
  , UTTOTWSquadListView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTTOTWSquadListView() {
        var e = i.call(this) || this;
        return e.cellViews = [],
        e.noResultsView = null,
        e
    }
    return __extends(UTTOTWSquadListView, i),
    UTTOTWSquadListView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTTOTWSquadListView.prototype.dealloc = function() {
        this.clearTable(),
        this.noResultsView && (this.noResultsView.dealloc(),
        this.noResultsView = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTTOTWSquadListView.prototype.setInteractionState = function(t) {
        i.prototype.setInteractionState.call(this, t),
        this.cellViews.forEach(function(e) {
            e.setInteractionState(t)
        })
    }
    ,
    UTTOTWSquadListView.prototype.clearTable = function() {
        0 < this.cellViews.length && (this.cellViews.forEach(function(e) {
            e.dealloc()
        }),
        this.cellViews = [])
    }
    ,
    UTTOTWSquadListView.prototype.generateCellView = function(e) {
        DebugUtils.Assert(e instanceof UTSquadEntity, "Expected a squad entity");
        var t = new UTSquadTableCellView;
        return t.init(),
        t.setSquad(e),
        t.render(),
        t.addTarget(this, this.eCellEventHandler, EventType.TAP),
        this.addSubview(t),
        t
    }
    ,
    UTTOTWSquadListView.prototype.setSquads = function(e) {
        return this.clearTable(),
        this.cellViews = e.map(this.generateCellView, this),
        this.layoutSubviews(),
        this.cellViews
    }
    ,
    UTTOTWSquadListView.prototype.appendEmptyListMessage = function(e) {
        this.clearTable(),
        this.noResultsView || (this.noResultsView = new UTListNoResultsView,
        this.noResultsView.init(),
        this.getRootElement().appendChild(this.noResultsView.getRootElement())),
        this.noResultsView.setHeading(e)
    }
    ,
    UTTOTWSquadListView.prototype.selectCellBySquad = function(t) {
        this.cellViews.forEach(function(e) {
            e.setSelected(e.getSquad() === t)
        }, this)
    }
    ,
    UTTOTWSquadListView.prototype.eCellEventHandler = function(e, t, i) {
        if (t === EventType.TAP) {
            var o = this.cellViews.indexOf(e);
            this.selectCellBySquad(i.squad),
            this._triggerActions(UTTOTWSquadListView.Event.CELL_SELECTED, {
                squad: i.squad,
                cell: e,
                index: o
            })
        }
    }
    ,
    UTTOTWSquadListView.Event = Object.freeze({
        CELL_SELECTED: "UTTOTWSquadListView.Event.CELL_SELECTED"
    }),
    UTTOTWSquadListView
}(EATargetActionView));
UTTOTWSquadListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-totw-squad-list-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTOTWSquadListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTTOTWSquadListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTOTWSquadListViewController = function(t) {
    function UTTOTWSquadListViewController() {
        var e = t.call(this) || this;
        return e.totwHistoryViewModel = null,
        e.squadSelectDelegate = null,
        e
    }
    return __extends(UTTOTWSquadListViewController, t),
    UTTOTWSquadListViewController.prototype.init = function() {
        this.initialized || (t.prototype.init.call(this),
        TelemetryManager.trackPage(TelemetryManager.Sections.TOTW, "TOTW List"))
    }
    ,
    UTTOTWSquadListViewController.prototype.initWithHistoryViewModel = function(e) {
        this.initialized || (e instanceof UTTOTWHistoryViewModel && (this.totwHistoryViewModel = e),
        this.init())
    }
    ,
    UTTOTWSquadListViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.totwHistoryViewModel && (this.totwHistoryViewModel = null)
    }
    ,
    UTTOTWSquadListViewController.prototype._getViewInstanceFromData = function() {
        return new UTTOTWSquadListView
    }
    ,
    UTTOTWSquadListViewController.prototype._getTelemetryId = function() {
        return "TOTW List"
    }
    ,
    UTTOTWSquadListViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.TOTWHistory")
    }
    ,
    UTTOTWSquadListViewController.prototype.viewDidAppear = function() {
        var i = this;
        t.prototype.viewDidAppear.call(this),
        this.getView().addTarget(this, this.eRowSelected, UTTOTWSquadListView.Event.CELL_SELECTED);
        this.totwHistoryViewModel ? this.totwHistoryViewModel.requestHistory().observe(this, function(e, t) {
            e.unobserve(i),
            t.success && i.showSquads()
        }) : this.showSquads()
    }
    ,
    UTTOTWSquadListViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this),
        this.getView().removeTarget(this, this.eRowSelected, UTTOTWSquadListView.Event.CELL_SELECTED)
    }
    ,
    UTTOTWSquadListViewController.prototype.setSquadSelectDelegate = function(e) {
        e instanceof UTTOTWSquadSplitViewController && (this.squadSelectDelegate = e)
    }
    ,
    UTTOTWSquadListViewController.prototype.showSquads = function() {
        var e, t = this.getView(), i = this.totwHistoryViewModel ? this.totwHistoryViewModel.getSquads() : [];
        if (0 === i.length) {
            var o = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TOTW_HISTORY_ENABLED) ? "totw.squadlist.empty" : "totw.squadlist.unavailable";
            t.appendEmptyListMessage(services.Localization.localize(o))
        } else {
            t.setSquads(i);
            var n = null === (e = this.totwHistoryViewModel) || void 0 === e ? void 0 : e.getCurrentSquad();
            n && t.selectCellBySquad(n)
        }
    }
    ,
    UTTOTWSquadListViewController.prototype.eRowSelected = function(e, t, i) {
        var d = this;
        if (this.totwHistoryViewModel) {
            function KOa(e) {
                var t, i;
                if (null === (t = d.totwHistoryViewModel) || void 0 === t || t.setCurrentSquad(e),
                d.squadSelectDelegate) {
                    d.squadSelectDelegate.setSquad(e);
                    var o = d.getView();
                    o.setInteractionState(!1),
                    setTimeout(function() {
                        o && o.setInteractionState(!0)
                    }
                    .bind(d), 600)
                } else
                    null === (i = d.getNavigationController()) || void 0 === i || i.popViewController()
            }
            var u = this.totwHistoryViewModel.getCurrentSquad()
              , p = i.index
              , o = this.totwHistoryViewModel.getSquadByIndex(p);
            i.squad !== u && (o && !o.isValid() ? services.Squad.requestTOTWSquad(o.getId()).observe(this, function(e, t) {
                var i, o, n, r, a;
                if (e.unobserve(d),
                t.success) {
                    var s = null === (i = t.data) || void 0 === i ? void 0 : i.squad;
                    s && (null === (o = d.totwHistoryViewModel) || void 0 === o || o.writeSquad(s, p));
                    var l = d.getView();
                    l.setSquads(null !== (r = null === (n = d.totwHistoryViewModel) || void 0 === n ? void 0 : n.getSquads()) && void 0 !== r ? r : []);
                    var c = null === (a = d.totwHistoryViewModel) || void 0 === a ? void 0 : a.getCurrentSquad();
                    return c && l.selectCellBySquad(c),
                    void KOa.call(d, s)
                }
                KOa.call(d, u)
            }) : KOa.call(this, o))
        }
    }
    ,
    UTTOTWSquadListViewController
}(EAViewController)
  , UTTOTWSummaryBannerView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTTOTWSummaryBannerView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTTOTWSummaryBannerView, e),
    UTTOTWSummaryBannerView.prototype.init = function() {
        var e = services.Localization;
        this.__formationTitle.textContent = e.localize("squads.formation"),
        this.__labelRating.textContent = e.localize("squads.rating"),
        this._ratingStars.init(),
        this._historyBtn.init(),
        this._copySquadIcon.init()
    }
    ,
    UTTOTWSummaryBannerView.prototype.setChemistry = function(e) {}
    ,
    UTTOTWSummaryBannerView.prototype.setChemistryEntries = function(e) {}
    ,
    UTTOTWSummaryBannerView.prototype.setFormation = function(e) {
        this.__formationValue && (this.__formationValue.textContent = e)
    }
    ,
    UTTOTWSummaryBannerView.prototype.getShowChemistryButton = function() {
        return null
    }
    ,
    UTTOTWSummaryBannerView.prototype.setCanCopySquad = function(e) {
        this._copySquadIcon.setInteractionState(e)
    }
    ,
    UTTOTWSummaryBannerView.prototype.getHistoryButton = function() {
        return this._historyBtn
    }
    ,
    UTTOTWSummaryBannerView.prototype.getCopyButton = function() {
        return this._copySquadIcon
    }
    ,
    UTTOTWSummaryBannerView
}(UTSquadSummaryBannerView));
UTTOTWSummaryBannerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("totw"),
        e.classList.add("ut-squad-summary");
        var t = document.createElement("div");
        t.classList.add("ut-squad-summary-info"),
        this.__formationTitle = document.createElement("span"),
        this.__formationTitle.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__formationTitle),
        this.__formationValue = document.createElement("span"),
        this.__formationValue.classList.add("ut-squad-summary-value"),
        t.appendChild(this.__formationValue),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-squad-summary-info");
        var o = document.createElement("div");
        o.classList.add("rating"),
        this.__labelRating = document.createElement("span"),
        this.__labelRating.classList.add("ut-squad-summary-label"),
        o.appendChild(this.__labelRating),
        this._ratingStars = new UTSquadStarRatingView,
        o.appendChild(this._ratingStars.getRootElement()),
        i.appendChild(o),
        e.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("totw-squad-buttons"),
        this._copySquadIcon = new UTImageButtonControl,
        this._copySquadIcon.getRootElement().classList.add("fut_icon"),
        this._copySquadIcon.getRootElement().classList.add("icon_copy"),
        this._copySquadIcon.getRootElement().classList.add("copy-squad-icon"),
        n.appendChild(this._copySquadIcon.getRootElement()),
        this._historyBtn = new UTImageButtonControl,
        this._historyBtn.getRootElement().classList.add("fut_icon"),
        this._historyBtn.getRootElement().classList.add("icon_list"),
        this._historyBtn.getRootElement().classList.add("totw-history-icon"),
        n.appendChild(this._historyBtn.getRootElement()),
        e.appendChild(n),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTOTWSummaryBannerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__formationTitle = null,
    this.__formationValue = null,
    this.__labelRating = null,
    this._ratingStars.destroy(),
    this._copySquadIcon.destroy(),
    this._historyBtn.destroy()
}
,
UTTOTWSummaryBannerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTOTWSquadOverviewView = function(e) {
    function UTTOTWSquadOverviewView() {
        return e.call(this) || this
    }
    return __extends(UTTOTWSquadOverviewView, e),
    UTTOTWSquadOverviewView.prototype.init = function() {
        e.prototype.init.call(this),
        this.renderManager = !1,
        this.renderChemistry = !1,
        this.renderConcepts = !1,
        this.renderRestrictions = !1
    }
    ,
    UTTOTWSquadOverviewView.prototype.getSummaryPanel = function() {
        return this._summaryPanel || (this._summaryPanel = new UTTOTWSummaryBannerView),
        this._summaryPanel
    }
    ,
    UTTOTWSquadOverviewView.prototype.getShowChemistryButton = function() {
        return null
    }
    ,
    UTTOTWSquadOverviewView
}(UTSquadOverviewView)
  , _this = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
this)
  , UTTOTWSquadOverviewViewController = function(r) {
    function UTTOTWSquadOverviewViewController() {
        return r.call(this) || this
    }
    return __extends(UTTOTWSquadOverviewViewController, r),
    UTTOTWSquadOverviewViewController.prototype.init = function() {
        this.initialized || (r.prototype.init.call(this),
        this.totwHistoryViewModel = new UTTOTWHistoryViewModel(services.Squad),
        this.totwHistoryViewModel.init())
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.dealloc = function() {
        r.prototype.dealloc.call(this),
        this.totwHistoryViewModel && this.totwHistoryViewModel.dealloc()
    }
    ,
    UTTOTWSquadOverviewViewController.prototype._getViewInstanceFromData = function() {
        return new UTTOTWSquadOverviewView
    }
    ,
    UTTOTWSquadOverviewViewController.prototype._getTelemetryId = function() {
        return "TOTW"
    }
    ,
    UTTOTWSquadOverviewViewController.prototype._trackPageView = function() {
        TelemetryManager.trackPage(TelemetryManager.Sections.TOTW, this._getTelemetryId())
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.viewDidAppear = function() {
        var e = this.totwHistoryViewModel ? this.totwHistoryViewModel.getCurrentSquad() : null;
        e && this._setSquad(e);
        var t = this.getView().getSummaryPanel();
        t instanceof UTTOTWSummaryBannerView && (t.getHistoryButton().addTarget(this, this.eHistorySelected, EventType.TAP),
        t.getCopyButton().addTarget(this, this.eCopySquadSelected, EventType.TAP),
        t.setCanCopySquad(!1)),
        this._checkSquadListFull(),
        r.prototype.viewDidAppear.call(this)
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.viewWillDisappear = function() {
        var e = this.getView().getSummaryPanel();
        e instanceof UTTOTWSummaryBannerView && (e.getHistoryButton().removeTarget(this, this.eHistorySelected, EventType.TAP),
        e.getCopyButton().removeTarget(this, this.eCopySquadSelected, EventType.TAP)),
        r.prototype.viewWillDisappear.call(this)
    }
    ,
    UTTOTWSquadOverviewViewController.prototype._pushSquadToView = function(e) {
        var t, i = this.getView();
        i.setType(e.isDream() ? "concept" : "standard"),
        i.setSquad(e),
        null === (t = this.getNavigationController()) || void 0 === t || t.setNavigationTitle(e.getName())
    }
    ,
    UTTOTWSquadOverviewViewController.prototype._checkSquadListFull = function() {
        var n = this;
        services.Squad.requestSquadList().observe(this, function(e, t) {
            var i;
            if (e.unobserve(n),
            t.success) {
                var o = n.getView().getSummaryPanel();
                o instanceof UTTOTWSummaryBannerView && o.setCanCopySquad(!(null === (i = t.data) || void 0 === i ? void 0 : i.listFull))
            }
        })
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.getTOTWHistoryViewModel = function() {
        return this.totwHistoryViewModel
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.eHistorySelected = function(e, t, i) {
        var o, n = this.getNavigationController(), r = this.getParentViewController();
        if (this.getView().clearSlotInteractionState(enums.UISlotInteractionState.SELECTED),
        r instanceof UTTOTWSquadSplitViewController)
            r.showHistory();
        else if (n) {
            var a = new UTTOTWSquadListViewController;
            this.totwHistoryViewModel ? a.initWithHistoryViewModel(this.totwHistoryViewModel) : a.init(),
            null === (o = this.getNavigationController()) || void 0 === o || o.pushViewController(a, !0)
        }
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.eCopySquadSelected = function(e, t, i) {
        function lQa(e, t) {
            e.unobserve(o),
            t.success ? n.queue([r.localize("notification.squad.created"), UINotificationType.POSITIVE]) : n.queue([r.localize("notification.squad.copyFailed"), UINotificationType.NEGATIVE]),
            o._checkSquadListFull()
        }
        var o = this
          , n = services.Notification
          , r = services.Localization;
        DebugUtils.Assert(this._squad instanceof UTSquadEntity, "No squad present for copying."),
        TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "TOTW - Copy Squad"),
        utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_COPY_SQUAD, {
            params: []
        }, function() {
            o._squad ? services.Squad.duplicate(o._squad).observe(o, lQa) : n.queue([r.localize("notification.squad.copyFailed"), UINotificationType.NEGATIVE])
        }
        .bind(this))
    }
    ,
    UTTOTWSquadOverviewViewController.prototype._eItemTap = function(e, t, i) {
        var o, n = JSUtils.isNumber(i.slotIndex) ? i.slotIndex : -1;
        (null === (o = this._squad) || void 0 === o ? void 0 : o.getSlot(n).isValid()) && r.prototype._eItemTap.call(this, e, t, i)
    }
    ,
    UTTOTWSquadOverviewViewController.prototype.nInfoStateChanged = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - TOTW")
    }
    ,
    UTTOTWSquadOverviewViewController
}(UTSquadOverviewViewController);
services.URL.registerDeepLinkID(DeepLinkSection.TOTW, function(e) {
    var t = getAppMain().getRootViewController();
    t.setGameViewTab(UTGameTabBarController.TabTag.SQUADS);
    function EQa(e, t) {
        var i;
        if (e.unobserve(_this),
        t.success) {
            var o = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
            (null === (i = t.data) || void 0 === i ? void 0 : i.squad) && o.initWithSquad(t.data.squad),
            a instanceof UTNavigationController && a.pushViewController(o)
        } else
            l.queue([s.localize("notification.TOTW.loadfail"), UINotificationType.NEGATIVE])
    }
    var i = t.getPresentedViewController()
      , a = i instanceof UTTabBarController ? i.getCurrentViewController() : null
      , s = services.Localization
      , l = services.Notification;
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestTOTWHistory().observe(_this, function(e, t) {
        var i, o;
        if (e.unobserve(_this),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.squads) && 0 < (null === (o = t.data) || void 0 === o ? void 0 : o.squads.length)) {
            var n = t.data.squads[0];
            if (n && n.isValid()) {
                var r = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
                r.initWithSquad(n),
                a instanceof UTNavigationController && a.pushViewController(r)
            } else
                services.Squad.requestTOTWSquad(n.getId()).observe(_this, EQa)
        } else
            l.queue([s.localize("notification.TOTW.loadfail"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTOTWSquadSplitViewController = function(t) {
    function UTTOTWSquadSplitViewController() {
        return t.call(this) || this
    }
    return __extends(UTTOTWSquadSplitViewController, t),
    UTTOTWSquadSplitViewController.prototype.init = function() {
        if (!this.initialized) {
            t.prototype.init.call(this),
            this.historyController = new UTTOTWSquadListViewController;
            var e = this._overviewController instanceof UTTOTWSquadOverviewViewController ? this._overviewController.getTOTWHistoryViewModel() : null;
            e && this.historyController.initWithHistoryViewModel(e),
            this.historyController.setSquadSelectDelegate(this),
            this.addChildViewController(this.historyController)
        }
    }
    ,
    UTTOTWSquadSplitViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.historyController && this.historyController.dealloc()
    }
    ,
    UTTOTWSquadSplitViewController.prototype._generateSquadOverview = function() {
        var e = new UTTOTWSquadOverviewViewController;
        return this._squad ? e.initWithSquad(this._squad) : e.init(),
        e
    }
    ,
    UTTOTWSquadSplitViewController.prototype.getDefaultPanel = function() {
        return this.historyController
    }
    ,
    UTTOTWSquadSplitViewController.prototype.showHistory = function() {
        this._showDefaultPanel()
    }
    ,
    UTTOTWSquadSplitViewController.prototype.setSquad = function(e) {
        this._squad = e,
        this._squad && this._overviewController && this._overviewController.setSquad(e),
        this._squad && this._itemDetailController && this._itemDetailController.setSquad(this._squad)
    }
    ,
    UTTOTWSquadSplitViewController.prototype.selectSlotIndexForSquad = function(e, t, i) {
        var o, n;
        (null === (o = this._squad) || void 0 === o ? void 0 : o.getSlot(i).isValid()) && (null === (n = this._overviewController) || void 0 === n || n.selectSlot(i),
        e === this._overviewController && this._showSlotDetails(i))
    }
    ,
    UTTOTWSquadSplitViewController
}(UTBaseSquadSplitViewController)
  , UTSquadsHubView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadsHubView() {
        return t.call(this) || this
    }
    return __extends(UTSquadsHubView, t),
    UTSquadsHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._activeSquadTile.init(),
        this._squadSelectorTile.init(),
        this._totwTile.init(),
        this._activeSquadTile.title = e.localize("navbar.label.activesquad"),
        this._squadSelectorTile.title = e.localize("navbar.label.squadlist"),
        this._totwTile.title = e.localize("navbar.label.TOTW"),
        this._totwTile.setDimOverlayText(e.localize("tile.disabled.totw").toUpperCase()),
        this._totwTile.setDimOverlayType(TileDimOverlayType.LOCKED),
        this._activeSquadTile.addClass("col-1-1"),
        this._squadSelectorTile.addClass("col-1-2"),
        this._totwTile.addClass("col-1-2")
    }
    ,
    UTSquadsHubView.prototype.setActiveSquad = function(e) {
        e && this._activeSquadTile.setSquad(e),
        this._activeSquadTile.setInteractionState(JSUtils.isValid(e))
    }
    ,
    UTSquadsHubView.prototype.setTOTWEnabled = function(e) {
        this._totwTile.setInteractionState(e),
        this._totwTile.setDimmed(!e)
    }
    ,
    UTSquadsHubView.prototype.getActiveSquadTile = function() {
        return this._activeSquadTile
    }
    ,
    UTSquadsHubView.prototype.getSquadManagementTile = function() {
        return this._squadSelectorTile
    }
    ,
    UTSquadsHubView.prototype.getTOTWTile = function() {
        return this._totwTile
    }
    ,
    UTSquadsHubView
}(EAView));
UTSquadsHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squads-hub-view");
        var t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._activeSquadTile = new UTSquadTileView,
        t.appendChild(this._activeSquadTile.getRootElement()),
        this._squadSelectorTile = new UTTileView,
        this._squadSelectorTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._squadSelectorTile.getRootElement().classList.add("squad-management-tile"),
        t.appendChild(this._squadSelectorTile.getRootElement()),
        this._totwTile = new UTTileView,
        this._totwTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._totwTile.getRootElement().classList.add("totw-tile"),
        t.appendChild(this._totwTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadsHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._activeSquadTile.destroy(),
    this._squadSelectorTile.destroy(),
    this._totwTile.destroy()
}
,
UTSquadsHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadsHubViewController = function(n) {
    function UTSquadsHubViewController() {
        var e = n.call(this) || this;
        return e.totwHistoryViewModel = null,
        e
    }
    return __extends(UTSquadsHubViewController, n),
    UTSquadsHubViewController.prototype.init = function() {
        this.initialized || (n.prototype.init.call(this),
        this.totwHistoryViewModel = new UTTOTWHistoryViewModel(services.Squad),
        this.totwHistoryViewModel.init())
    }
    ,
    UTSquadsHubViewController.prototype.dealloc = function() {
        n.prototype.dealloc.call(this),
        this.totwHistoryViewModel && (this.totwHistoryViewModel.dealloc(),
        this.totwHistoryViewModel = null)
    }
    ,
    UTSquadsHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadsHubView
    }
    ,
    UTSquadsHubViewController.prototype._getTelemetryId = function() {
        return "Hub - Squads"
    }
    ,
    UTSquadsHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("infopanel.label.squads")
    }
    ,
    UTSquadsHubViewController.prototype.viewDidAppear = function() {
        var e, t, i = this;
        n.prototype.viewDidAppear.call(this),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        this.loadActiveSquadData();
        var o = this.getView();
        null === (t = this.totwHistoryViewModel) || void 0 === t || t.requestHistory().observe(this, function(e, t) {
            e.unobserve(i),
            t.success && i.totwHistoryViewModel ? o.setTOTWEnabled(0 < i.totwHistoryViewModel.getSquads().length) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.SQUADS, "Squads Hub"),
        o.getActiveSquadTile().addTarget(this, this.eActiveSquadTileSelected, EventType.TAP),
        o.getSquadManagementTile().addTarget(this, this.eSquadManagementTileSelected, EventType.TAP),
        o.getTOTWTile().addTarget(this, this.eTOTWTileSelected, EventType.TAP)
    }
    ,
    UTSquadsHubViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.getActiveSquadTile().removeTarget(this, this.eActiveSquadTileSelected, EventType.TAP),
        e.getSquadManagementTile().removeTarget(this, this.eSquadManagementTileSelected, EventType.TAP),
        e.getTOTWTile().removeTarget(this, this.eTOTWTileSelected, EventType.TAP),
        n.prototype.viewWillDisappear.call(this)
    }
    ,
    UTSquadsHubViewController.prototype.loadActiveSquadData = function() {
        var n = this
          , r = this.getView();
        services.Squad.requestSquadByType("active").observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            t.success ? r.setActiveSquad(null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.squad) && void 0 !== o ? o : void 0) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
        })
    }
    ,
    UTSquadsHubViewController.prototype.gotoActiveSquadOverview = function() {
        var r = this
          , a = this.getNavigationController();
        a && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Squad.requestSquadByType("active").observe(this, function(e, t) {
            var i;
            if (e.unobserve(r),
            t.success) {
                var o = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController
                  , n = null === (i = t.data) || void 0 === i ? void 0 : i.squad;
                n && o.initWithSquad(n),
                null == a || a.pushViewController(o)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.squad.failedToLoad"), UINotificationType.NEGATIVE]);
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTSquadsHubViewController.prototype.gotoSquadManagement = function() {
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Squad.requestSquadList().observe(this, function _onRequestSquadsComplete(e, t) {
            var i, o;
            e.unobserve(this);
            var n = this.getNavigationController();
            if (n) {
                var r = isPhone() ? new UTSquadListViewController : new UTSquadListSplitViewController
                  , a = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.squads) && void 0 !== o ? o : [];
                0 < a.length ? r.initWithSquads(a) : r.init(),
                n.pushViewController(r)
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTSquadsHubViewController.prototype.gotoTOTWSquadOverview = function() {
        function rSa(e) {
            var t = r.getNavigationController();
            if (t) {
                var i = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
                i instanceof UTTOTWSquadOverviewViewController ? i.initWithSquad(e) : (i.setSquad(e),
                i.init()),
                t.pushViewController(i)
            }
        }
        var e, t, i, r = this, a = null === (e = this.totwHistoryViewModel) || void 0 === e ? void 0 : e.getCurrentSquad(), s = null !== (i = null === (t = this.totwHistoryViewModel) || void 0 === t ? void 0 : t.getIndex()) && void 0 !== i ? i : 0;
        a && !(null == a ? void 0 : a.isValid()) ? services.Squad.requestTOTWSquad(a.getId()).observe(this, function(e, t) {
            var i, o;
            if (e.unobserve(r),
            t.success) {
                var n = null === (i = t.data) || void 0 === i ? void 0 : i.squad;
                return n && (null === (o = r.totwHistoryViewModel) || void 0 === o || o.writeSquad(n, s)),
                void rSa.call(r, n)
            }
            rSa.call(r, a)
        }) : rSa.call(this, a)
    }
    ,
    UTSquadsHubViewController.prototype.eActiveSquadTileSelected = function(e, t, i) {
        this.gotoActiveSquadOverview()
    }
    ,
    UTSquadsHubViewController.prototype.eSquadManagementTileSelected = function(e, t, i) {
        this.gotoSquadManagement()
    }
    ,
    UTSquadsHubViewController.prototype.eTOTWTileSelected = function(e, t, i) {
        this.gotoTOTWSquadOverview()
    }
    ,
    UTSquadsHubViewController
}(EAViewController)
  , UTStoreViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTStoreViewModel(e, i) {
        var o = t.call(this) || this
          , n = []
          , r = {}
          , a = {}
          , s = !1
          , l = !1
          , c = !1
          , d = !1;
        return e.forEach(function(t) {
            if (t instanceof UTStoreItemPackEntity)
                t.isMyPack ? (l = !0,
                n.push(t)) : (t instanceof UTStoreXrayItemPackEntity && t.isRefreshed() && (c = !0),
                r[t.id] = t);
            else if (t instanceof UTStorePointsPackEntity && 0 < i.length) {
                var e = JSUtils.find(i, function(e) {
                    return t.productId === e.sku && (e.points = t.points,
                    e.isBestValue = t.isBestValue,
                    e.isMostPopular = t.isMostPopular,
                    !0)
                });
                e && (s = !0,
                a[e.sku] = e)
            } else
                t instanceof UTStoreBundleEntity && !o.hasVanityPacks && (r[t.id] = t,
                d = !0)
        }),
        o.articles = new EAHashTable(r),
        o.categories = [],
        o.myPacks = new EAIterator(n),
        o.nimbleMtxItems = new EAHashTable(a),
        o.hasMtxItems = s,
        o.hasMyPacks = l,
        o.hasRefreshedContent = c,
        o.hasVanityPacks = d,
        o
    }
    return __extends(UTStoreViewModel, t),
    UTStoreViewModel.prototype.hasPacks = function() {
        return 0 < this.articles.filter(function(e) {
            return e instanceof UTStoreItemPackEntity
        }).length
    }
    ,
    UTStoreViewModel.prototype.hasPreviewedPacks = function() {
        return 0 < this.articles.filter(function(e) {
            return e instanceof UTStoreXrayItemPackEntity && e.isPreviewed()
        }).length
    }
    ,
    UTStoreViewModel.prototype.setStoreCategories = function(e) {
        this.categories = e
    }
    ,
    UTStoreViewModel.prototype.getNimbleMTXItems = function() {
        return this.nimbleMtxItems.values().sort(function(e, t) {
            return JSUtils.sortCompare(e.points, t.points)
        })
    }
    ,
    UTStoreViewModel.prototype.getPackById = function(t, e, i) {
        if (e || !JSUtils.isBoolean(e)) {
            var o = this.myPacks.get(this.myPacks.indexOf(function(e) {
                return t === e.id && i === e.tradable
            }));
            if (e || JSUtils.isValid(o))
                return o
        }
        var n = this.articles.get(t);
        return n instanceof UTStorePurchasableArticleEntity ? n : null
    }
    ,
    UTStoreViewModel.prototype.getPackCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.CARDPACK && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getPackCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getPackCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getVanityCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.VANITYBUNDLE && t instanceof UTStoreBundleEntity && 1 === t.itemCollection.length && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getVanityCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getVanityCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getBundleCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.VANITYBUNDLE && t instanceof UTStoreBundleEntity && 1 < t.itemCollection.length && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getBundleCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getBundleCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getPointsCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.POINTSPACK && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getPointsCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getPointsCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getCategoryArticles = function(t) {
        return this.articles.filter(function(e) {
            return e.categoryId === t
        })
    }
    ,
    UTStoreViewModel.prototype.getAllPurchaseablePacks = function() {
        return this.articles.values()
    }
    ,
    UTStoreViewModel.prototype.getPacks = function(t) {
        return t === PurchaseDisplayGroup.MYPACKS ? this.myPacks.values() : t !== PurchaseDisplayGroup.PREVIEWED ? t !== PurchaseDisplayGroup.VANITYBUNDLE ? this.articles.filter(function(e) {
            return e.categoryId === t
        }).sort(function(e, t) {
            return JSUtils.isValid(e.recommendationScore) && JSUtils.isEmpty(t.recommendationScore) ? 1 : JSUtils.isEmpty(e.recommendationScore) && JSUtils.isValid(t.recommendationScore) ? -1 : JSUtils.isValid(e.recommendationScore) && JSUtils.isValid(t.recommendationScore) && e.recommendationScore !== t.recommendationScore ? JSUtils.sortCompare(t.recommendationScore, e.recommendationScore) : e.sortPriority === t.sortPriority ? JSUtils.sortCompare(e.getPrice(GameCurrency.COINS), t.getPrice(GameCurrency.COINS)) : JSUtils.sortCompare(e.sortPriority, t.sortPriority)
        }) : this.articles.filter(function(e) {
            return e instanceof UTStoreBundleEntity && e.displayGroup === PurchaseDisplayGroup.VANITYBUNDLE && 1 < e.itemCollection.length
        }).sort(function(e, t) {
            return e.sortPriority === t.sortPriority ? JSUtils.sortCompare(e.getPrice(GameCurrency.COINS), t.getPrice(GameCurrency.COINS)) : JSUtils.sortCompare(e.sortPriority, t.sortPriority)
        }) : this.articles.filter(function(e) {
            return e instanceof UTStoreXrayItemPackEntity && e.isPreviewed()
        }).sort(function(e, t) {
            return JSUtils.sortCompare(e.previewCreateTime, t.previewCreateTime)
        })
    }
    ,
    UTStoreViewModel.prototype.requestArticlePreviewDuplicates = function(e) {
        var t = e.getPreviewDuplicates();
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTStoreViewModel.prototype.requestCategoryData = function() {
        var o = this
          , e = services.Store.getCategories();
        return e.observe(this, function(e, t) {
            if (e.unobserve(o),
            t.success && JSUtils.isObject(t.response)) {
                var i = t.response.categories;
                o.setStoreCategories(i)
            }
        }),
        this._trackRequest(e, !0),
        e
    }
    ,
    UTStoreViewModel
}(UTViewModel))
  , UTStoreHubView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTStoreHubView() {
        return null !== i && i.apply(this, arguments) || this
    }
    return __extends(UTStoreHubView, i),
    UTStoreHubView.prototype.init = function() {
        i.prototype.init.call(this);
        var e = services.Localization;
        this._featuredTile.init(),
        this._itemsTile.init(),
        this._packsTile.init(),
        this._pointsTile.init(),
        this._disabledTile.setDisplay(!1),
        this._disabledTile.setDimOverlayText(e.localize("store.disabled")),
        this._disabledTile.setDimmed(!0),
        this._disabledTile.setInteractionState(!1),
        this._packsTile.title = e.localize("storehub.label.packs"),
        this._itemsTile.title = e.localize("storehub.label.vanity"),
        this._pointsTile.title = e.localize("storehub.label.mtx");
        var t = this._featuredTile;
        this._packsTile.setDisplay(!1),
        this._itemsTile.setDisplay(!1),
        this._pointsTile.setDisplay(!1),
        this._packsTile.addTarget(this, this._ePacksTileSelected, EventType.TAP),
        t.addTarget(this, this._eFeaturedTileSelected, UTHubMessagesTileView.Event.GOTOLINK),
        this._unassignedTile.init(),
        this._unassignedTile.addTarget(this, this._eUnassignedTileSelected, EventType.TAP),
        this._unassignedTile.setDisplay(!1),
        this.setInteractionState(!0)
    }
    ,
    UTStoreHubView.prototype.dealloc = function() {
        var e = this._featuredTile;
        this._packsTile.removeTarget(this, this._ePacksTileSelected, EventType.TAP),
        this._itemsTile.removeTarget(this, this._eItemsTileSelected, EventType.TAP),
        this._pointsTile.removeTarget(this, this._ePointsTileSelected, EventType.TAP),
        e.removeTarget(this, this._eFeaturedTileSelected, UTHubMessagesTileView.Event.GOTOLINK),
        i.prototype.dealloc.call(this)
    }
    ,
    UTStoreHubView.prototype.setNumUnassignedItems = function(e) {
        this._unassignedTile.setNumberOfItems(e),
        this._unassignedTile.setDisplay(0 < e)
    }
    ,
    UTStoreHubView.prototype.togglePackUnopened = function(e) {
        this._packsTile.toggleClass("highlight", e)
    }
    ,
    UTStoreHubView.prototype.togglePackTileDisplay = function(e) {
        this._packsTile.setDisplay(e),
        e ? this._packsTile.addTarget(this, this._ePacksTileSelected, EventType.TAP) : this._packsTile.removeTarget(this, this._ePacksTileSelected, EventType.TAP)
    }
    ,
    UTStoreHubView.prototype.toggleItemTileDisplay = function(e) {
        this._itemsTile.setDisplay(e),
        e ? this._itemsTile.addTarget(this, this._eItemsTileSelected, EventType.TAP) : this._itemsTile.removeTarget(this, this._eItemsTileSelected, EventType.TAP)
    }
    ,
    UTStoreHubView.prototype.renderFeaturedTile = function(e) {
        0 < e.length ? this._featuredTile.setData(e) : this.renderDefault()
    }
    ,
    UTStoreHubView.prototype.togglePointsTileDisplay = function(e) {
        this._pointsTile.setDisplay(e),
        e ? this._pointsTile.addTarget(this, this._ePointsTileSelected, EventType.TAP) : this._pointsTile.removeTarget(this, this._ePointsTileSelected, EventType.TAP)
    }
    ,
    UTStoreHubView.prototype.renderDefault = function() {
        this._featuredTile.setDisplay(!1)
    }
    ,
    UTStoreHubView.prototype.getFeaturedTile = function() {
        return this._featuredTile
    }
    ,
    UTStoreHubView.prototype.disableStore = function() {
        this._featuredTile.setDisplay(!1),
        this._itemsTile.setDisplay(!1),
        this._packsTile.setDisplay(!1),
        this._pointsTile.setDisplay(!1),
        this._disabledTile.setDisplay(!0)
    }
    ,
    UTStoreHubView.prototype._ePacksTileSelected = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTStoreHubView.Event.PACKS_SELECTED)
    }
    ,
    UTStoreHubView.prototype._eItemsTileSelected = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTStoreHubView.Event.ITEMS_SELECTED)
    }
    ,
    UTStoreHubView.prototype._ePointsTileSelected = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTStoreHubView.Event.POINTS_SELECTED)
    }
    ,
    UTStoreHubView.prototype._eFeaturedTileSelected = function(e, t, i) {
        t === UTHubMessagesTileView.Event.GOTOLINK && this._triggerActions(UTStoreHubView.Event.FEATURED_SELECTED, i)
    }
    ,
    UTStoreHubView.prototype._eUnassignedTileSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTStoreHubView.Event.UNASSIGNED_SELECTED)
    }
    ,
    UTStoreHubView.Event = {
        FEATURED_SELECTED: "UTStoreHubView.FEATURED_SELECTED",
        PACKS_SELECTED: "UTStoreHubView.PACKS_SELECTED",
        ITEMS_SELECTED: "UTStoreHubView.ITEMS_SELECTED",
        POINTS_SELECTED: "UTStoreHubView.POINTS_SELECTED",
        UNASSIGNED_SELECTED: "UTStoreHubView.Event.UNASSIGNED_SELECTED"
    },
    UTStoreHubView
}(EATargetActionView));
UTStoreHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-hub-view"),
        this.__hubGrid = document.createElement("div"),
        this.__hubGrid.classList.add("grid"),
        this.__hubGrid.classList.add("layout-hub"),
        this._unassignedTile = new UTUnassignedTileView,
        this.__hubGrid.appendChild(this._unassignedTile.getRootElement()),
        this._featuredTile = new UTHubMessagesTileView,
        this._featuredTile.getRootElement().classList.add("col-1-1"),
        this._featuredTile.getRootElement().classList.add("featured-tile"),
        this.__hubGrid.appendChild(this._featuredTile.getRootElement()),
        this._packsTile = new UTTileView,
        this._packsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._packsTile.getRootElement().classList.add("col-1-2"),
        this._packsTile.getRootElement().classList.add("packs-tile"),
        this._packsTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._packsTile.getRootElement()),
        this._itemsTile = new UTTileView,
        this._itemsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._itemsTile.getRootElement().classList.add("col-1-2"),
        this._itemsTile.getRootElement().classList.add("items-tile"),
        this._itemsTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._itemsTile.getRootElement()),
        this._pointsTile = new UTTileView,
        this._pointsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._pointsTile.getRootElement().classList.add("col-1-2"),
        this._pointsTile.getRootElement().classList.add("points-tile"),
        this._pointsTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._pointsTile.getRootElement()),
        this._disabledTile = new UTTileView,
        this._disabledTile.getRootElement().classList.add("col-1-1"),
        this._disabledTile.getRootElement().classList.add("disabled-tile"),
        this._disabledTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._disabledTile.getRootElement()),
        e.appendChild(this.__hubGrid),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__hubGrid = null,
    this._unassignedTile.destroy(),
    this._featuredTile.destroy(),
    this._packsTile.destroy(),
    this._itemsTile.destroy(),
    this._pointsTile.destroy(),
    this._disabledTile.destroy()
}
,
UTStoreHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreHubViewController = function(i) {
    function UTStoreHubViewController() {
        var e = i.call(this) || this;
        return e.goToLinkController = new UTGoToLinkController,
        e.viewmodel = null,
        e
    }
    return __extends(UTStoreHubViewController, i),
    UTStoreHubViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.goToLinkController.init()
    }
    ,
    UTStoreHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreHubView
    }
    ,
    UTStoreHubViewController.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.viewmodel = null,
        this.goToLinkController.dealloc()
    }
    ,
    UTStoreHubViewController.prototype.viewDidAppear = function() {
        var e;
        repositories.Store.setDirty(),
        this.goToLinkController.setNavigationController(this.getNavigationController());
        var t = this.getView();
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        i.prototype.viewDidAppear.call(this),
        t.addTarget(this, this.onTileSelected, UTStoreHubView.Event.PACKS_SELECTED),
        t.addTarget(this, this.onTileSelected, UTStoreHubView.Event.ITEMS_SELECTED),
        t.addTarget(this, this.onTileSelected, UTStoreHubView.Event.POINTS_SELECTED),
        t.addTarget(this, this.eGoToLink, UTStoreHubView.Event.FEATURED_SELECTED),
        t.addTarget(this, this.eUnassignedSelected, UTStoreHubView.Event.UNASSIGNED_SELECTED),
        services.Messages.getStoreMessages().observe(this, this.onFeaturedMessagesRequested),
        services.Store.isStoreEnabled() ? (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.getUnassignedItems(),
        services.Store.getPacks(PurchasePackType.ALL, !0, !0).observe(this, this.onPackLoadComplete),
        services.Messages.getStoreMessages().observe(this, this.onFeaturedMessagesRequested)) : t.disableStore()
    }
    ,
    UTStoreHubViewController.prototype.viewDidDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.eUnassignedSelected, UTStoreHubView.Event.UNASSIGNED_SELECTED),
        e.removeTarget(this, this.onTileSelected, UTStoreHubView.Event.PACKS_SELECTED),
        e.removeTarget(this, this.onTileSelected, UTStoreHubView.Event.ITEMS_SELECTED),
        e.removeTarget(this, this.onTileSelected, UTStoreHubView.Event.POINTS_SELECTED),
        e.removeTarget(this, this.eGoToLink, UTStoreHubView.Event.FEATURED_SELECTED)
    }
    ,
    UTStoreHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.store")
    }
    ,
    UTStoreHubViewController.prototype.onTileSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (o && this.viewmodel) {
            var n = void 0;
            switch (t) {
            case UTStoreHubView.Event.PACKS_SELECTED:
                (n = new UTStorePackViewController).init(),
                o.pushViewController(n);
                break;
            case UTStoreHubView.Event.ITEMS_SELECTED:
                (n = new UTStoreItemViewController).init(),
                o.pushViewController(n);
                break;
            case UTStoreHubView.Event.POINTS_SELECTED:
                (n = new UTStoreMTXViewController).init(),
                o.pushViewController(n);
                break;
            default:
                DebugUtils.Assert(!1, "Unknown tile selected in Store Hub")
            }
        }
    }
    ,
    UTStoreHubViewController.prototype.eUnassignedSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.BUTTON_PRESS, "Store - Unassigned Tile"),
        this.gotoUnassigned()
    }
    ,
    UTStoreHubViewController.prototype.getUnassignedItems = function() {
        var o = this;
        services.Item.requestUnassignedItems().observe(this, function(e, t) {
            var i;
            e.unobserve(o),
            JSUtils.isObject(t.response) && o.getView().setNumUnassignedItems(null !== (i = t.response.items.length) && void 0 !== i ? i : 0)
        })
    }
    ,
    UTStoreHubViewController.prototype.gotoUnassigned = function() {
        var r = this
          , a = this.getView();
        a.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Item.requestUnassignedItems().observe(this, function(e, t) {
            var i;
            e.unobserve(r);
            var o = r.getNavigationController();
            if (o) {
                var n = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
                t.success && JSUtils.isObject(t.response) ? n.initWithItems(null !== (i = t.response.items) && void 0 !== i ? i : []) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : n.init(),
                o.pushViewController(n)
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            a.setInteractionState(!0)
        })
    }
    ,
    UTStoreHubViewController.prototype.onPackLoadComplete = function(e, t) {
        var i, o;
        e.unobserve(this);
        var n = this.getView();
        if (t.success && JSUtils.isObject(t.response)) {
            var r = null !== (i = t.response.packs) && void 0 !== i ? i : [];
            this.viewmodel = new UTStoreViewModel(r,services.Store.isMobileMTXEnabled() ? services.MTX.getNimbleMTXItems() : []);
            var a = services.Store.isCoinsEnabled()
              , s = services.Store.hasPointsSpendingAccess();
            a || s ? a ? s || services.Notification.queue([services.Localization.localize("notification.store.fifapointsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.coinsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.allCurrenciesDisabled"), UINotificationType.NEGATIVE]),
            n.togglePackTileDisplay(this.viewmodel.hasPacks()),
            n.toggleItemTileDisplay(this.viewmodel.hasVanityPacks),
            n.togglePointsTileDisplay(this.viewmodel.hasMtxItems && services.MTX.isMTXEnabled());
            var l = services.User.getUser();
            l && this.viewmodel.hasPacks() && n.togglePackUnopened(0 < l.unopenedPacks),
            (null === (o = this.viewmodel) || void 0 === o ? void 0 : o.hasRefreshedContent) && this.createCustomErrorPopup("fut.p.c.changed.title", "fut.p.c.changed")
        } else
            n.disableStore();
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }
    ,
    UTStoreHubViewController.prototype.createCustomErrorPopup = function(e, t) {
        var i = services.Localization
          , o = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: i.localize(t),
            title: i.localize(e)
        });
        o.init(),
        o.viewWillAppear(),
        o.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTStoreHubViewController.prototype.onFeaturedMessagesRequested = function(e, t) {
        e.unobserve(this),
        t.success && t.data ? this.getView().renderFeaturedTile(t.data.messages) : this.getView().renderDefault()
    }
    ,
    UTStoreHubViewController.prototype.eGoToLink = function(e, t, n) {
        var i, r = this;
        if (n.goToLink) {
            var o = n.goToLink.split("|")
              , a = Number(o[0]);
            null === (i = this.viewmodel) || void 0 === i || i.requestCategoryData().observe(this, function() {
                var e, t, i, o;
                (null === (e = r.viewmodel) || void 0 === e ? void 0 : e.getPackCategoryIds().includes(a)) ? o = r.goToLinkController.attemptStoreNavigation("pack", a) : ((null === (t = r.viewmodel) || void 0 === t ? void 0 : t.getBundleCategoryIds().includes(a)) || (null === (i = r.viewmodel) || void 0 === i ? void 0 : i.getVanityCategoryIds().includes(a))) && (o = r.goToLinkController.attemptStoreNavigation("item", a)),
                o && services.PIN.sendData(PINEventType.MESSAGE, {
                    type: PINMessageEventType.FET,
                    service: "aruba",
                    count: 1,
                    track: {
                        trackingtag: n.trackingTag
                    },
                    status: PIN_MESSAGE_EVT_STATUS,
                    destination_id: n.screen,
                    msg_id: n.id.toString()
                })
            })
        }
    }
    ,
    UTStoreHubViewController
}(EAViewController)
  , UTCoordinateVO = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTCoordinateVO(e, t) {
        var i = o.call(this) || this;
        return i.x = e,
        i.y = t,
        i
    }
    return __extends(UTCoordinateVO, o),
    UTCoordinateVO.prototype.value = function() {
        return [this.x, this.y]
    }
    ,
    UTCoordinateVO.prototype.equals = function(e) {
        return e instanceof UTCoordinateVO && this.x === e.x && this.y === e.y
    }
    ,
    UTCoordinateVO
}(EAObject))
  , UTParticle = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTParticle(e) {
        var t = i.call(this) || this;
        return t.acceleration = 0,
        t.alpha = 1,
        t.angle = 0,
        t.color = "#000",
        t.decay = 0,
        t.gravity = 1,
        t.id = null != e ? e : 0,
        t.lifetime = 5e3,
        t.privCoordinateHistory = [],
        t.rotation = 0,
        t.rotationSpeed = 0,
        t.size = 1,
        t.speed = 1,
        t.timestamp = Date.now(),
        t.x = 0,
        t.y = 0,
        t
    }
    return __extends(UTParticle, i),
    Object.defineProperty(UTParticle.prototype, "coordinateHistory", {
        get: function() {
            return this.privCoordinateHistory.slice()
        },
        enumerable: !1,
        configurable: !0
    }),
    UTParticle.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.lifetime = 0,
        this.alpha = 0,
        this.privCoordinateHistory = []
    }
    ,
    UTParticle.prototype.isDead = function() {
        return this.alpha <= 0 || this.lifetime <= Date.now() - this.timestamp
    }
    ,
    UTParticle.prototype.update = function() {
        this.privCoordinateHistory.push(new UTCoordinateVO(this.x,this.y)),
        this.speed += this.speed * this.acceleration,
        this.x += Math.cos(this.angle) * this.speed,
        this.y += Math.sin(this.angle) * this.speed + this.gravity,
        this.rotation += this.rotationSpeed,
        0 < this.alpha && (this.alpha = Math.max(this.alpha - this.decay, 0))
    }
    ,
    UTParticle.prototype.draw = function(e) {
        e.save(),
        e.fillStyle = this.color,
        e.globalAlpha = this.alpha,
        e.beginPath(),
        e.arc(this.x, this.y, this.size, 0, 2 * Math.PI, !1),
        e.closePath(),
        e.fill(),
        e.restore()
    }
    ,
    UTParticle.prototype.random = function(e, t) {
        return Math.random() * (t - e) + e
    }
    ,
    UTParticle
}(EAObject))
  , UTParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTParticleSystem(e) {
        var t = i.call(this) || this;
        return t.acceleration = 0,
        t.angle = 0,
        t.childParticleSystems = [],
        t.ctx = e.getContext("2d"),
        t.duration = 5e3,
        t.frameRequestId = null,
        t.gravity = 1,
        t.isRunning = !1,
        t.lastSpawnTime = 0,
        t.lifetime = 5,
        t.loop = !1,
        t.maxParticles = 100,
        t.parentParticleSystem = null,
        t.particles = [],
        t.rotation = 0,
        t.rotationSpeed = 0,
        t.runStart = 0,
        t.spawnDelay = 0,
        t.spawnInterval = 100,
        t.spawnRate = 10,
        t.speed = 1,
        t.x = 0,
        t.y = 0,
        t
    }
    return __extends(UTParticleSystem, i),
    Object.defineProperty(UTParticleSystem.prototype, "_ctx", {
        get: function() {
            return this.ctx
        },
        enumerable: !1,
        configurable: !0
    }),
    UTParticleSystem.prototype.dealloc = function() {
        this.isRunning = !1,
        JSUtils.isNumber(this.frameRequestId) && (cancelAnimationFrame(this.frameRequestId),
        this.frameRequestId = null),
        this.removeFromParentParticleSystem(),
        this.childParticleSystems.forEach(this.removeChildParticleSystem, this),
        this.particles.forEach(function(e) {
            return e.dealloc()
        }),
        this.particles = [],
        i.prototype.dealloc.call(this)
    }
    ,
    UTParticleSystem.prototype.run = function() {
        this.isRunning || (this.isRunning = !0,
        this.runStart = Date.now(),
        this.draw())
    }
    ,
    UTParticleSystem.prototype.draw = function() {
        var e;
        if (this.isRunning) {
            var t = Date.now();
            if (this.parentParticleSystem || null === (e = this.ctx) || void 0 === e || e.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height),
            this.runStart + this.duration < t) {
                if (!this.loop)
                    return;
                this.runStart = t
            }
            this.drawChildren(),
            this.runStart + this.spawnDelay < t && this.lastSpawnTime + this.spawnInterval < t && (this.lastSpawnTime = t,
            this.spawnParticles(this.spawnRate)),
            this.drawParticles(),
            this.parentParticleSystem || (this.frameRequestId = requestAnimationFrame(this.draw.bind(this)))
        }
    }
    ,
    UTParticleSystem.prototype.drawChildren = function() {
        this.childParticleSystems.forEach(function(e) {
            e.isRunning ? e.draw() : e.run()
        })
    }
    ,
    UTParticleSystem.prototype.drawParticles = function() {
        for (var e = 0; e < this.particles.length; e++) {
            var t = this.particles[e];
            this.updateParticle(t),
            t.isDead() && (this.particles.splice(e, 1),
            e--)
        }
    }
    ,
    UTParticleSystem.prototype.spawnParticles = function(e) {
        for (var t = this.particles.length; 0 < e-- && t < this.maxParticles; )
            this.particles.push(this.generateParticle()),
            t++
    }
    ,
    UTParticleSystem.prototype.generateParticle = function() {
        var e, t, i, o, n = new UTParticle;
        return n.x = this.x + Math.random() * (null !== (t = null === (e = this.ctx) || void 0 === e ? void 0 : e.canvas.width) && void 0 !== t ? t : 0),
        n.y = this.y + Math.random() * (null !== (o = null === (i = this.ctx) || void 0 === i ? void 0 : i.canvas.height) && void 0 !== o ? o : 0),
        n.acceleration = this.acceleration,
        n.angle = this.angle,
        n.gravity = this.gravity,
        n.rotation = this.rotation,
        n.rotationSpeed = this.rotationSpeed,
        n.speed = this.speed,
        n
    }
    ,
    UTParticleSystem.prototype.updateParticle = function(e) {
        this.ctx && (e.draw(this.ctx),
        e.update())
    }
    ,
    UTParticleSystem.prototype.addChildParticleSystem = function(e) {
        this.childParticleSystems.indexOf(e) < 0 && (e.parentParticleSystem = this).childParticleSystems.push(e)
    }
    ,
    UTParticleSystem.prototype.removeChildParticleSystem = function(e) {
        var t = this.childParticleSystems.indexOf(e);
        0 <= t && (e.parentParticleSystem = null,
        this.childParticleSystems.splice(t, 1))
    }
    ,
    UTParticleSystem.prototype.removeFromParentParticleSystem = function() {
        this.parentParticleSystem && this.parentParticleSystem.removeChildParticleSystem(this)
    }
    ,
    UTParticleSystem
}(EAObject))
  , UTConfettiParticle = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTConfettiParticle(e) {
        var t = i.call(this, e) || this;
        return t.tilt = 0,
        t
    }
    return __extends(UTConfettiParticle, i),
    UTConfettiParticle.prototype.update = function() {
        i.prototype.update.call(this),
        this.tilt = Math.sin(this.rotation) * (this.size / 3)
    }
    ,
    UTConfettiParticle.prototype.draw = function(e) {
        e.save(),
        e.beginPath(),
        e.lineWidth = this.size / 2,
        e.strokeStyle = this.color,
        e.globalAlpha = this.alpha,
        e.moveTo(this.x + this.tilt + this.size / 3, this.y),
        e.lineTo(this.x + this.tilt, this.y + this.tilt + this.size / 3),
        e.stroke(),
        e.restore()
    }
    ,
    UTConfettiParticle
}(UTParticle))
  , UTConfettiColourVO = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTConfettiColourVO(e, t) {
        var i = o.call(this) || this;
        return i.primaryColour = e,
        i.secondaryColour = t,
        i
    }
    return __extends(UTConfettiColourVO, o),
    UTConfettiColourVO.prototype.value = function() {
        return [this.primaryColour, this.secondaryColour]
    }
    ,
    UTConfettiColourVO.prototype.equals = function(e) {
        return e instanceof UTConfettiColourVO && this.primaryColour === e.primaryColour && this.secondaryColour === e.secondaryColour
    }
    ,
    UTConfettiColourVO.prototype.getRandom = function() {
        var e = .5 <= Math.random() ? this.primaryColour : this.secondaryColour;
        return "rgba(" + e.r + ", " + e.g + ", " + e.b + ", 1)"
    }
    ,
    UTConfettiColourVO
}(EAObject))
  , UTConfettiRainParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTConfettiRainParticleSystem(e) {
        var t = o.call(this, e) || this;
        return t.confettiColor = new UTConfettiColourVO({
            r: 0,
            g: 0,
            b: 0
        },{
            r: 0,
            g: 0,
            b: 0
        }),
        t
    }
    return __extends(UTConfettiRainParticleSystem, o),
    UTConfettiRainParticleSystem.prototype.generateParticle = function() {
        var e, t, i = new UTConfettiParticle;
        return i.size = i.random(30, 50),
        i.color = this.confettiColor.getRandom(),
        i.x = this.x + Math.random() * (null !== (t = null === (e = this.ctx) || void 0 === e ? void 0 : e.canvas.width) && void 0 !== t ? t : 0),
        i.y = -i.size,
        i.rotation = i.random(1, 2 * Math.PI),
        i.rotationSpeed = i.random(-.25, .25),
        i.speed = 0,
        i.acceleration = 0,
        i.gravity = this.gravity,
        i.tilt = Math.floor(Math.random() * i.size),
        i
    }
    ,
    UTConfettiRainParticleSystem.prototype.setConfettiColor = function(e) {
        this.confettiColor = e
    }
    ,
    UTConfettiRainParticleSystem.prototype.updateParticle = function(e) {
        var t, i;
        o.prototype.updateParticle.call(this, e),
        e.y > (null !== (i = null === (t = this.ctx) || void 0 === t ? void 0 : t.canvas.height) && void 0 !== i ? i : 0) && (e.lifetime = 0)
    }
    ,
    UTConfettiRainParticleSystem
}(UTParticleSystem))
  , UTConfettiCannonParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTConfettiCannonParticleSystem(e) {
        var t = i.call(this, e) || this;
        return t.confettiColor = new UTConfettiColourVO({
            r: 0,
            g: 0,
            b: 0
        },{
            r: 0,
            g: 0,
            b: 0
        }),
        t
    }
    return __extends(UTConfettiCannonParticleSystem, i),
    UTConfettiCannonParticleSystem.prototype.generateParticle = function() {
        var e = new UTConfettiParticle;
        return e.size = e.random(30, 50),
        e.color = this.confettiColor.getRandom(),
        e.x = this.x,
        e.y = this.y,
        e.angle = this.angle + .1 * (Math.random() - Math.random()),
        e.speed = Math.random() * this.speed,
        e.acceleration = -.03,
        e.rotation = e.random(1, 2 * Math.PI),
        e.rotationSpeed = e.random(-.25, .25),
        e.gravity = this.gravity,
        e
    }
    ,
    UTConfettiCannonParticleSystem.prototype.setConfettiColor = function(e) {
        this.confettiColor = e
    }
    ,
    UTConfettiCannonParticleSystem
}(UTParticleSystem))
  , UTParticleTrail = function() {
    function UTParticleTrail() {
        this.color = "#000",
        this.lineCap = "round",
        this.time = 1,
        this.width = 1
    }
    return UTParticleTrail.prototype.draw = function(i, e) {
        var t = e.coordinateHistory.length;
        if (0 < t) {
            var o = 60 * this.time
              , n = e.coordinateHistory.slice(Math.max(t - o, 0))
              , r = n.shift();
            i.save(),
            i.strokeStyle = this.color,
            i.lineWidth = this.width,
            i.lineCap = this.lineCap,
            i.beginPath(),
            r && i.moveTo(r.x, r.y),
            n.forEach(function(e, t) {
                i.globalAlpha = (o - t) / o,
                i.lineTo(e.x, e.y)
            }),
            i.stroke(),
            i.restore()
        }
    }
    ,
    UTParticleTrail
}()
  , UTFireworksParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTFireworksParticleSystem(e) {
        var t = i.call(this, e) || this;
        return t.particleTrail = new UTParticleTrail,
        t.particleTrail.width = 10,
        t.particleTrail.time = .1,
        t
    }
    return __extends(UTFireworksParticleSystem, i),
    UTFireworksParticleSystem.prototype.generateParticle = function() {
        var e = new UTParticle;
        return e.x = this.x,
        e.y = this.y,
        e.color = "rgba(255, 255, 255, 0.4)",
        e.speed = e.random(10, 20),
        e.angle = e.random(0, 2 * Math.PI),
        e.decay = .015,
        e.acceleration = -.05,
        e
    }
    ,
    UTFireworksParticleSystem.prototype.updateParticle = function(e) {
        this.ctx && (e.update(),
        e.draw(this.ctx),
        this.particleTrail.color = e.color,
        this.particleTrail.draw(this.ctx, e))
    }
    ,
    UTFireworksParticleSystem
}(UTParticleSystem))
  , UTSnowflakeParticle = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSnowflakeParticle() {
        return e.call(this) || this
    }
    return __extends(UTSnowflakeParticle, e),
    UTSnowflakeParticle.prototype.draw = function(e) {
        e.save(),
        e.globalAlpha = this.alpha,
        e.beginPath(),
        e.arc(this.x, this.y, this.size, 0, 2 * Math.PI, !1),
        e.fillStyle = this.color,
        e.fill(),
        e.restore()
    }
    ,
    UTSnowflakeParticle
}(UTParticle))
  , UTSnowfallParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTSnowfallParticleSystem(e) {
        return o.call(this, e) || this
    }
    return __extends(UTSnowfallParticleSystem, o),
    UTSnowfallParticleSystem.prototype.generateParticle = function() {
        var e, t, i = new UTSnowflakeParticle, o = null !== (t = null === (e = this.ctx) || void 0 === e ? void 0 : e.canvas.width) && void 0 !== t ? t : 0, n = Math.abs(Math.cos(this.angle) * (o / 2)), r = 0 < Math.cos(this.angle) ? this.x - n : this.x;
        return i.color = "rgb(255, 255, 255)",
        i.size = i.random(2, 7),
        i.x = r + Math.random() * (o + n),
        i.y = -i.size,
        i.speed = Math.random() * this.speed,
        i.acceleration = 0,
        i.gravity = Math.ceil(Math.random() * this.gravity),
        i.angle = this.angle,
        i.decay = i.random(.001, .01),
        i
    }
    ,
    UTSnowfallParticleSystem.prototype.updateParticle = function(e) {
        var t, i;
        o.prototype.updateParticle.call(this, e),
        e.y > (null !== (i = null === (t = this.ctx) || void 0 === t ? void 0 : t.canvas.height) && void 0 !== i ? i : 0) && (e.lifetime = 0)
    }
    ,
    UTSnowfallParticleSystem
}(UTParticleSystem))
  , UTPackAnimationView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPackAnimationView() {
        var e = t.call(this) || this;
        return e.cardComponent = null,
        e.particleSystem = null,
        e.confettiGenerator = null,
        e.confettiCannon1 = null,
        e.confettiCannon2 = null,
        e.fireworkGenerator = null,
        e.snowParticleSystem = null,
        e.windowResizeCallback = e.eWindowResize.bind(e),
        e
    }
    return __extends(UTPackAnimationView, t),
    UTPackAnimationView.prototype.init = function() {
        t.prototype.init.call(this),
        this.particleSystem = new UTParticleSystem(this.__canvas),
        this.confettiGenerator = new UTConfettiRainParticleSystem(this.__canvas),
        this.confettiCannon1 = new UTConfettiCannonParticleSystem(this.__canvas),
        this.confettiCannon2 = new UTConfettiCannonParticleSystem(this.__canvas),
        this.fireworkGenerator = new UTFireworksParticleSystem(this.__canvas),
        this.snowParticleSystem = new UTSnowfallParticleSystem(this.__canvas),
        this.particleSystem.spawnRate = 0,
        this.particleSystem.spawnInterval = 5e3,
        this.particleSystem.loop = !0,
        this.fireworkGenerator.gravity = .15,
        this.fireworkGenerator.spawnInterval = 1e3,
        this.fireworkGenerator.spawnRate = 50,
        this.fireworkGenerator.spawnDelay = 1e3,
        this.fireworkGenerator.duration = 4e3,
        this.particleSystem.addChildParticleSystem(this.fireworkGenerator),
        getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_WINTER_THEME) ? (this.snowParticleSystem.gravity = 5,
        this.snowParticleSystem.spawnInterval = 300,
        this.snowParticleSystem.spawnRate = 20,
        this.snowParticleSystem.loop = !0,
        this.snowParticleSystem.angle = Math.PI,
        this.snowParticleSystem.speed = 4,
        this.particleSystem.addChildParticleSystem(this.snowParticleSystem)) : (this.confettiGenerator.gravity = 5,
        this.confettiGenerator.spawnInterval = 300,
        this.confettiGenerator.spawnRate = 5,
        this.confettiGenerator.loop = !0,
        this.particleSystem.addChildParticleSystem(this.confettiGenerator)),
        this.confettiCannon1.speed = 55,
        this.confettiCannon1.gravity = 5,
        this.confettiCannon1.spawnInterval = 5e3,
        this.confettiCannon1.spawnRate = 25,
        this.confettiCannon2.speed = 55,
        this.confettiCannon2.gravity = 5,
        this.confettiCannon2.spawnInterval = 5e3,
        this.confettiCannon2.spawnRate = 25,
        this.particleSystem.addChildParticleSystem(this.confettiCannon1),
        this.particleSystem.addChildParticleSystem(this.confettiCannon2)
    }
    ,
    UTPackAnimationView.prototype.dealloc = function() {
        window.removeEventListener(EventType.RESIZE, this.windowResizeCallback, !1),
        this.cardComponent && (this.cardComponent.dealloc(),
        this.cardComponent = null),
        this.particleSystem && (this.particleSystem.dealloc(),
        this.particleSystem = null),
        this.confettiGenerator && (this.confettiGenerator.dealloc(),
        this.confettiGenerator = null),
        this.confettiCannon1 && (this.confettiCannon1.dealloc(),
        this.confettiCannon1 = null),
        this.confettiCannon2 && (this.confettiCannon2.dealloc(),
        this.confettiCannon2 = null),
        this.fireworkGenerator && (this.fireworkGenerator.dealloc(),
        this.fireworkGenerator = null),
        this.snowParticleSystem && (this.snowParticleSystem.dealloc(),
        this.snowParticleSystem = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTPackAnimationView.prototype.eWindowResize = function(e) {
        this.positionScene()
    }
    ,
    UTPackAnimationView.prototype.runAnimation = function(e, t) {
        var i;
        if (this.positionScene(),
        this.confettiGenerator && this.confettiCannon1 && this.confettiCannon2) {
            var o = null == t ? void 0 : t.getLargeColorMap(e.getTier());
            if (o) {
                var n = new UTConfettiColourVO(o.background,o.dividers);
                this.confettiGenerator.setConfettiColor(n),
                this.confettiCannon1.setConfettiColor(n),
                this.confettiCannon2.setConfettiColor(n)
            }
            setTimeout(function() {
                this.fireworkGenerator.x += 300,
                this.fireworkGenerator.y += 100
            }
            .bind(this), 1100),
            setTimeout(function() {
                this.fireworkGenerator.x -= 400,
                this.fireworkGenerator.y += 300
            }
            .bind(this), 2100),
            window.addEventListener(EventType.RESIZE, this.windowResizeCallback, !1),
            null === (i = this.particleSystem) || void 0 === i || i.run()
        } else
            DebugUtils.Assert(!1, "Attempted to trigger animations before confetti is initialised")
    }
    ,
    UTPackAnimationView.prototype.setPackTier = function(e) {
        var t = AssetLocationUtils.getPackBackgroundImageUri(e);
        this.__packShell.style.backgroundImage = 'url("' + t + '")'
    }
    ,
    UTPackAnimationView.prototype.generateItem = function(e) {
        JSUtils.isValid(this.cardComponent) || (this.cardComponent = factories.ItemView.createLargeItem(e),
        this.cardComponent.init(),
        this.cardComponent.supportSecondaryViews = !1,
        this.cardComponent.render(e),
        this.__itemShell.appendChild(this.cardComponent.getRootElement()))
    }
    ,
    UTPackAnimationView.prototype.positionScene = function() {
        var e = this.getRootElement();
        this.__canvas.width = e.offsetWidth,
        this.__canvas.height = e.offsetHeight;
        var t = this.__canvas.width
          , i = this.__canvas.height;
        this.positionConfettiCannons(t, i),
        this.positionFireworks(t)
    }
    ,
    UTPackAnimationView.prototype.positionConfettiCannons = function(e, t) {
        if (this.confettiCannon1 && this.confettiCannon2) {
            var i = e / 2
              , o = t / 2;
            e < 600 ? (this.confettiCannon1.x = 0,
            this.confettiCannon2.x = e) : (this.confettiCannon1.x = i - 300,
            this.confettiCannon2.x = 300 + i),
            this.confettiCannon1.y = t,
            this.confettiCannon2.y = t,
            this.confettiCannon1.angle = Math.atan2(o - this.confettiCannon1.y, i - this.confettiCannon1.x),
            this.confettiCannon2.angle = Math.atan2(o - this.confettiCannon2.y, i - this.confettiCannon2.x)
        } else
            DebugUtils.Assert(!1, "Attempted to position confetti classes before they are initialised")
    }
    ,
    UTPackAnimationView.prototype.positionFireworks = function(e) {
        this.fireworkGenerator ? (this.fireworkGenerator.x = e / 2 - 100,
        this.fireworkGenerator.y = 200) : DebugUtils.Assert(!1, "Attempted to position firework classes before they are initialised")
    }
    ,
    UTPackAnimationView
}(EAView));
UTPackAnimationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pack-animation-view");
        var t = document.createElement("div");
        t.classList.add("pack-animation-vignette"),
        e.appendChild(t),
        this.__canvas = document.createElement("canvas"),
        this.__canvas.classList.add("particle-animation"),
        e.appendChild(this.__canvas),
        this.__itemShell = document.createElement("div"),
        this.__itemShell.classList.add("animated-item-shell"),
        e.appendChild(this.__itemShell),
        this.__packShell = document.createElement("div"),
        this.__packShell.classList.add("animated-pack-shell"),
        e.appendChild(this.__packShell),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPackAnimationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__canvas = null,
    this.__itemShell = null,
    this.__packShell = null
}
,
UTPackAnimationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPackAnimationViewController = function(t) {
    function UTPackAnimationViewController() {
        var e = t.call(this) || this;
        return e.animationTimeout = 0,
        e.running = !1,
        e.packTier = 0,
        e.callback = null,
        e
    }
    return __extends(UTPackAnimationViewController, t),
    UTPackAnimationViewController.prototype.initWithPackData = function(e, t) {
        this.initialized || (this.presentedItem = e,
        this.packTier = t,
        DebugUtils.Assert(JSUtils.isValid(this.presentedItem), "UTPackAnimationViewController expects pack to be a valid item"),
        this.init())
    }
    ,
    UTPackAnimationViewController.prototype.dealloc = function() {
        clearTimeout(this.animationTimeout),
        this.callback = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTPackAnimationViewController.prototype._getViewInstanceFromData = function() {
        return new UTPackAnimationView
    }
    ,
    UTPackAnimationViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.runAnimation();
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.APP_PAUSE, this, this._nAppPaused),
        e.addObserver(AppNotification.APP_RESUME, this, this._nAppResumed)
    }
    ,
    UTPackAnimationViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this)
    }
    ,
    UTPackAnimationViewController.prototype.setAnimationCallback = function(e) {
        JSUtils.isFunction(e) && (this.callback = e)
    }
    ,
    UTPackAnimationViewController.prototype.runAnimation = function() {
        if (!this.running) {
            this.running = !0;
            var e = this.getView()
              , t = services.Configuration.getItemRarity(this.presentedItem);
            e.setPackTier(this.packTier),
            e.generateItem(this.presentedItem),
            e.runAnimation(this.presentedItem, t),
            this.animationTimeout = window.setTimeout(this.runCallback.bind(this), 4500)
        }
    }
    ,
    UTPackAnimationViewController.prototype.runCallback = function() {
        var e = this.getNavigationController();
        this.callback && JSUtils.isFunction(this.callback) ? this.callback() : e && e.popViewController()
    }
    ,
    UTPackAnimationViewController.prototype._nAppPaused = function(e, t, i) {
        clearTimeout(this.animationTimeout)
    }
    ,
    UTPackAnimationViewController.prototype._nAppResumed = function(e, t, i) {
        this.runCallback()
    }
    ,
    UTPackAnimationViewController
}(EAViewController)
  , UTAccordionHeaderButton = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTAccordionHeaderButton() {
        return e.call(this) || this
    }
    return __extends(UTAccordionHeaderButton, e),
    UTAccordionHeaderButton.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTAccordionHeaderButton.prototype.setOpenState = function(e) {
        this.toggleClass("open", e)
    }
    ,
    UTAccordionHeaderButton
}(UTButtonControl));
UTAccordionHeaderButton.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("ut-accordion-header-button--header"),
        this.__title = document.createElement("p"),
        this.__title.classList.add("ut-accordion-header-button--title"),
        e.appendChild(this.__title);
        var t = document.createElement("span");
        t.classList.add("ut-accordion-header-button--icon"),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAccordionHeaderButton.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null
}
,
UTAccordionHeaderButton.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPackOddsCollapsibleSectionView = function(i) {
    function UTPackOddsCollapsibleSectionView() {
        var e, t = i.call(this) || this;
        return t._clubItemTypeTitleMap = ((e = {})[PackOddsType.MANAGERS] = "packodds.modal.clubitems.manager.description",
        e[PackOddsType.CUSTOMISATIONS] = "packodds.modal.clubitems.customisation.description",
        e[PackOddsType.CONSUMABLES] = "packodds.modal.clubitems.consumable.description",
        e[PackOddsType.PLAYER_LEVEL] = "packodds.modal.title.players",
        e),
        t
    }
    return __extends(UTPackOddsCollapsibleSectionView, i),
    UTPackOddsCollapsibleSectionView.prototype.init = function() {
        i.prototype.init.call(this),
        this._headerButton.init(),
        this._headerButton.addTarget(this, this._eToggle, EventType.TAP),
        this.setOpenState(!1)
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.dealloc = function() {
        this.table && this.table.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.setTitle = function(e) {
        this._headerButton.setTitle(e)
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype._eToggle = function(e, t, i) {
        this.setOpenState(!this.isOpen)
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.setOpenState = function(e) {
        this.isOpen = e,
        this._headerButton.setOpenState(e),
        DOMKit.toggleClass(this.__content, "open", e)
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.setContentText = function(e) {
        this.__content.innerHTML = e
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.renderPlayerPackOdds = function(e) {
        var i = this
          , o = services.Localization;
        this.setContentText(o.localize(this.getDescription("playersPicks"))),
        this.table = new UTPseudoTableView,
        this.addSubview(this.table, this.__content),
        e.forEach(function(e) {
            var t = o.localize("packodds.modal.title.itemPicks");
            i.table.addRowGroup([t]),
            e.odds.forEach(function(e) {
                var t = i.generateRarityIcon(e.qualityId);
                i.table.addRowData([t, e.description, e.odds])
            }, i)
        }),
        this.layoutSubviews()
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.renderItemOdds = function(e, n) {
        var r = this
          , a = services.Localization;
        this.setContentText(a.localize(this.getDescription(n))),
        this.table = new UTPseudoTableView,
        this.addSubview(this.table, this.__content),
        e.forEach(function(e) {
            var t = r.generateRarityIcon(e.qualityId);
            if ("club" === n && e.category) {
                var i = r._clubItemTypeTitleMap[e.category];
                if (!i)
                    return;
                var o = a.localize(i);
                r.table.addRowGroup([o])
            }
            r.table.addRowData([t, e.description, e.odds])
        }, this),
        this.layoutSubviews()
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.generateRarityIcon = function(e) {
        var t = document.createElement("div");
        switch (DOMKit.addClass(t, "pack-odds-icon"),
        e) {
        case PurchasePackTier.BRONZE:
            DOMKit.addClass(t, "bronze");
            break;
        case PurchasePackTier.SILVER:
            DOMKit.addClass(t, "silver");
            break;
        case PurchasePackTier.GOLD:
            DOMKit.addClass(t, "gold");
            break;
        case PurchasePackTier.SPECIAL:
            DOMKit.addClass(t, "special");
            break;
        default:
            DebugUtils.Assert(!1, "Unsupported pack tier.")
        }
        return t
    }
    ,
    UTPackOddsCollapsibleSectionView.prototype.getDescription = function(e) {
        switch (e) {
        case "players":
            return "packodds.modal.description.players";
        case "club":
            return "packodds.modal.description.clubitems";
        case "playersPicks":
            return "packodds.modal.description.playerPicks";
        default:
            return ""
        }
    }
    ,
    UTPackOddsCollapsibleSectionView
}(EAView);
UTPackOddsCollapsibleSectionView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pack-odds-collapse-section-view"),
        this._headerButton = new UTAccordionHeaderButton,
        e.appendChild(this._headerButton.getRootElement()),
        this.__content = document.createElement("div"),
        this.__content.classList.add("ut-pack-odds-collapse-section-view--content"),
        e.appendChild(this.__content),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPackOddsCollapsibleSectionView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._headerButton.destroy(),
    this.__content = null
}
,
UTPackOddsCollapsibleSectionView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPackOddsView = function(t) {
    function UTPackOddsView() {
        return t.call(this) || this
    }
    return __extends(UTPackOddsView, t),
    UTPackOddsView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._informationSection.init(),
        this._informationSection.setTitle(e.localize("packodds.modal.title.disclaimer")),
        this._informationSection.setContentText(e.localize("packodds.modal.description.disclaimer")),
        this._exitBtn.init()
    }
    ,
    UTPackOddsView.prototype.getExitBtn = function() {
        return this._exitBtn
    }
    ,
    UTPackOddsView.prototype.getFooter = function() {
        return this.__timestamp
    }
    ,
    UTPackOddsView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTPackOddsView.prototype._generateDateTimeString = function(e) {
        var t, i, o = services.Localization, n = new Date(e), r = n.getUTCHours();
        return i = o.locale.language === LanguageEnum.ENGLISH ? (t = (r % 12 || 12).toString(),
        12 <= r ? "pm" : "am") : (t = r.toString(),
        ""),
        o.localize("date.ddmmmyyyyhhmm", [n.getUTCDate().toString(), o.localize(MONTH_NAMES[n.getUTCMonth()]), n.getUTCFullYear().toString(), t, TextUtils.formatToTwoDigits(n.getUTCMinutes()), i])
    }
    ,
    UTPackOddsView.prototype.setOdds = function(e, t) {
        services.Localization;
        var i = e.filter(function(e) {
            return e.isPlayer(t)
        });
        0 < i.length && this.renderPlayerItemsOddsSection(i);
        var o = e.filter(function(e) {
            return e.isClub(t)
        });
        0 < o.length && this.renderClubItemsOddsSection(o);
        var n = e.filter(function(e) {
            return e.isPlayerPicks(t)
        })
          , r = this.getOddsWithSamePackId(n);
        r && 0 < r.length && this.renderPlayerPickOddsSection(r);
        var a = this._generateDateTimeString(e[0].startTime)
          , s = services.Localization.localize("packodds.modal.timestamp", [a]);
        this.__timestamp.innerHTML = (new DOMParser).parseFromString(s, "text/html").body.innerHTML
    }
    ,
    UTPackOddsView.prototype.renderPlayerItemsOddsSection = function(e) {
        this.renderOddsSection(e, "packodds.modal.title.players", "players")
    }
    ,
    UTPackOddsView.prototype.renderClubItemsOddsSection = function(e) {
        this.renderOddsSection(e, "packodds.modal.title.clubItems", "club")
    }
    ,
    UTPackOddsView.prototype.renderOddsSection = function(e, t, i) {
        var o = services.Localization
          , n = new UTPackOddsCollapsibleSectionView;
        n.init(),
        n.setTitle(o.localize(t)),
        n.renderItemOdds(e, i),
        this.addSubview(n, this.__sections),
        this.layoutSubviews()
    }
    ,
    UTPackOddsView.prototype.renderPlayerPickOddsSection = function(e) {
        var t = services.Localization
          , i = new UTPackOddsCollapsibleSectionView;
        i.init(),
        i.setTitle(t.localize("packodds.modal.title.playersPicks")),
        i.renderPlayerPackOdds(e),
        this.addSubview(i, this.__sections),
        this.layoutSubviews()
    }
    ,
    UTPackOddsView.prototype.getOddsWithSamePackId = function(e) {
        return e.reduce(function(e, t) {
            var i = e.find(function(e) {
                return e.packId === t.packId
            });
            return i || (i = {
                packId: t.packId,
                odds: []
            },
            e.push(i)),
            i.odds.push(t),
            e
        }, [])
    }
    ,
    UTPackOddsView
}(EAView);
UTPackOddsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pack-odds-modal");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this.__sections = document.createElement("div"),
        this.__sections.classList.add("ut-pack-odds-modal--sections"),
        this._informationSection = new UTPackOddsCollapsibleSectionView,
        this.__sections.appendChild(this._informationSection.getRootElement()),
        e.appendChild(this.__sections);
        var i = document.createElement("footer");
        this.__timestamp = document.createElement("div"),
        this.__timestamp.classList.add("footer-info"),
        i.appendChild(this.__timestamp),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPackOddsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this.__sections = null,
    this._informationSection.destroy(),
    this.__timestamp = null
}
,
UTPackOddsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPackOddsViewController = function(t) {
    function UTPackOddsViewController() {
        var e = t.call(this) || this;
        return e.odds = [],
        e
    }
    return __extends(UTPackOddsViewController, t),
    UTPackOddsViewController.prototype.initWithPack = function(e) {
        if (!this.initialized) {
            var t = this.getView();
            this.odds = e.odds,
            this.packId = e.id,
            DebugUtils.Assert(0 < this.odds.length, "UTPackOddsViewController expects at least one UTPackOddsDTO."),
            t.setTitle(services.Localization.localize(e.packName)),
            this.init()
        }
    }
    ,
    UTPackOddsViewController.prototype.dealloc = function() {
        this.odds = [],
        t.prototype.dealloc.call(this)
    }
    ,
    UTPackOddsViewController.prototype._getViewInstanceFromData = function() {
        return new UTPackOddsView
    }
    ,
    UTPackOddsViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        e.setOdds(this.odds, this.packId),
        this.decorateLinks(e.getFooter()),
        t.prototype.viewDidAppear.call(this),
        e.getExitBtn().addTarget(this, this._eOnExitBtn, EventType.TAP)
    }
    ,
    UTPackOddsViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e && e.getExitBtn().removeTarget(this, this._eOnExitBtn, EventType.TAP)
    }
    ,
    UTPackOddsViewController.prototype._eOnExitBtn = function(e, t, i) {
        var o;
        null === (o = this.getParentViewController()) || void 0 === o || o.dismissViewController()
    }
    ,
    UTPackOddsViewController
}(EAViewController)
  , UTStoreArticleDetailsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTStoreArticleDetailsView() {
        var e = t.call(this) || this;
        return e.actionButtons = [],
        e.headerButtons = [],
        e
    }
    return __extends(UTStoreArticleDetailsView, t),
    UTStoreArticleDetailsView.prototype.init = function() {
        this.__articleTime.style.display = "none",
        this.__articleQuantity.style.display = "none",
        this.__articleGlobalQuantity.style.display = "none",
        t.prototype.init.call(this)
    }
    ,
    UTStoreArticleDetailsView.prototype.dealloc = function() {
        this.resetArticleView(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTStoreArticleDetailsView.prototype.resetArticleView = function() {
        var t = this;
        this.actionButtons.forEach(function(e) {
            return t.removeActionButton(e)
        }),
        this.__articleQuantity.style.display = "none",
        this.__articleTime.style.display = "none"
    }
    ,
    UTStoreArticleDetailsView.prototype.getArticleId = function() {
        return this.articleId
    }
    ,
    UTStoreArticleDetailsView.prototype.setArticleId = function(e) {
        this.articleId = e
    }
    ,
    UTStoreArticleDetailsView.prototype.setName = function(e) {
        this.__articleTitle.textContent = e
    }
    ,
    UTStoreArticleDetailsView.prototype.setDescription = function(e) {
        this.__articleDesc.innerHTML = TextUtils.nltobr(e)
    }
    ,
    UTStoreArticleDetailsView.prototype.disableButtons = function() {
        this.actionButtons.forEach(function(e) {
            return e.setInteractionState(!1)
        }),
        this.headerButtons.forEach(function(e) {
            return e.setInteractionState(!1)
        })
    }
    ,
    UTStoreArticleDetailsView.prototype.removeHeaderButton = function(e) {
        var t = this.headerButtons.indexOf(e);
        0 < t && (this.__articleHeader.removeChild(e.getRootElement()),
        this.headerButtons.splice(t, 1),
        e.dealloc())
    }
    ,
    UTStoreArticleDetailsView.prototype.appendHeaderButton = function(e) {
        this.__articleHeader.appendChild(e.getRootElement()),
        this.headerButtons.push(e)
    }
    ,
    UTStoreArticleDetailsView.prototype.removeActionButton = function(e) {
        var t = this.actionButtons.indexOf(e);
        0 < t && (this.__articleActionContainer.removeChild(e.getRootElement()),
        this.actionButtons.splice(t, 1),
        e.dealloc())
    }
    ,
    UTStoreArticleDetailsView.prototype.appendActionButton = function(e) {
        this.__articleActionContainer.appendChild(e.getRootElement()),
        this.actionButtons.push(e)
    }
    ,
    UTStoreArticleDetailsView.prototype.setPackQuantityLabel = function(e) {
        this.__articleQuantityLabel.textContent = e
    }
    ,
    UTStoreArticleDetailsView.prototype.setPackQuantity = function(e) {
        var t = services.Localization;
        this.setPackQuantityLabel(t.localize("store.saletype.userQuantity")),
        this.__articleQuantity.style.display = 0 < e ? "" : "none",
        this.__articleQuantityValue.textContent = 0 < e ? t.localizeNumber(e) : "0"
    }
    ,
    UTStoreArticleDetailsView.prototype.setGlobalPackQuantity = function(e) {
        var t = services.Localization;
        this.__articleGlobalQuantityLabel.textContent = t.localize("store.saletype.globalQuantity"),
        this.__articleGlobalQuantity.style.display = 0 < e ? "" : "none",
        this.__articleGlobalQuantityValue.textContent = 0 < e ? t.localizeNumber(e) : "0"
    }
    ,
    UTStoreArticleDetailsView.prototype.setTimeRemaining = function(e) {
        if (!(e <= 0)) {
            var t = services.Localization
              , i = Math.round(e - Date.now() / MS_PER_SECOND);
            this.__articleTimeLabel.textContent = t.localize("store.sale.endingTime"),
            this.__articleTimeValue.textContent = 0 < i ? t.localizePromoTimeRemaining(i) : "",
            this.__articleTime.style.display = 0 < i ? "" : "none",
            0 < i ? (this.__articleTimeValue.textContent = t.localizePromoTimeRemaining(i),
            this.__articleTime.style.display = "") : this.disableButtons()
        }
    }
    ,
    UTStoreArticleDetailsView.prototype.setTradableStyle = function(e) {
        this.toggleClass(UTStoreArticleDetailsView.Style.IS_TRADEABLE, e),
        this.toggleClass(UTStoreArticleDetailsView.Style.IS_UNTRADEABLE, !e)
    }
    ,
    UTStoreArticleDetailsView.Style = Object.freeze({
        IS_TRADEABLE: "is-tradeable",
        IS_UNTRADEABLE: "is-untradeable"
    }),
    UTStoreArticleDetailsView
}(EATargetActionView))
  , UTStorePackDetailsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTStorePackDetailsView() {
        return t.call(this) || this
    }
    return __extends(UTStorePackDetailsView, t),
    UTStorePackDetailsView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__rareQuantityLabel.textContent = e.localize("store.group.rarelabel"),
        this._pack && this._pack.init()
    }
    ,
    UTStorePackDetailsView.prototype.removeOddsButton = function() {
        this._btnOdds && this.removeHeaderButton(this._btnOdds)
    }
    ,
    UTStorePackDetailsView.prototype.setupOddsButton = function() {
        this.removeOddsButton(),
        this._btnOdds = new UTImageButtonControl,
        this._btnOdds.init(),
        this._btnOdds.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this._btnOdds.addClass("info-btn"),
        this.appendHeaderButton(this._btnOdds)
    }
    ,
    UTStorePackDetailsView.prototype.removeOpenButton = function() {
        this._btnOpen && this.removeActionButton(this._btnOpen)
    }
    ,
    UTStorePackDetailsView.prototype.setupOpenButton = function() {
        this.removeOpenButton();
        var e = services.Localization;
        this._btnOpen = new UTCurrencyButtonControl,
        this._btnOpen.init(),
        this._btnOpen.setText(e.localize("store.mypack.open")),
        this._btnOpen.setSubText(e.localize("store.mypack.claimPack")),
        this._btnOpen.addClass("call-to-action"),
        this._btnOpen.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnOpen)
    }
    ,
    UTStorePackDetailsView.prototype.getPackShine = function() {
        return this._pack.getPackShine()
    }
    ,
    UTStorePackDetailsView.prototype.updateShineAnimationState = function() {
        this._pack.getPackShine().updateAnimationRunState()
    }
    ,
    UTStorePackDetailsView.prototype.removeBuyCoinsButton = function() {
        this._btnBuyCoins && this.removeActionButton(this._btnBuyCoins)
    }
    ,
    UTStorePackDetailsView.prototype.setupBuyCoinsButton = function(e) {
        this.removeBuyCoinsButton();
        var t = services.Localization;
        this._btnBuyCoins = new UTCurrencyButtonControl,
        this._btnBuyCoins.init(),
        this._btnBuyCoins.setCurrencyType(GameCurrency.COINS),
        this._btnBuyCoins.setText(t.localizeNumber(e)),
        this._btnBuyCoins.setSubText(t.localize("currency.coins")),
        this._btnBuyCoins.addClass("call-to-action"),
        this._btnBuyCoins.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyCoins)
    }
    ,
    UTStorePackDetailsView.prototype.removeBuyPointsButton = function() {
        this._btnBuyPoints && this.removeActionButton(this._btnBuyPoints)
    }
    ,
    UTStorePackDetailsView.prototype.setupBuyPointsButton = function(e) {
        this.removeBuyPointsButton();
        var t = services.Localization;
        this._btnBuyPoints = new UTCurrencyButtonControl,
        this._btnBuyPoints.init(),
        this._btnBuyPoints.setCurrencyType(GameCurrency.POINTS),
        this._btnBuyPoints.setText(t.localizeNumber(e)),
        this._btnBuyPoints.setSubText(t.localize("currency.points")),
        this._btnBuyPoints.addClass("call-to-action"),
        this._btnBuyPoints.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyPoints)
    }
    ,
    UTStorePackDetailsView.prototype.enableBuyCoinButton = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStorePackDetailsView.prototype.enableBuyPointsButton = function(e) {
        var t;
        null === (t = this._btnBuyPoints) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStorePackDetailsView.prototype.renderDefault = function(e) {
        this.setPackBackground(e)
    }
    ,
    UTStorePackDetailsView.prototype.setPackBackground = function(e) {
        this._pack.setPackBackground(e)
    }
    ,
    UTStorePackDetailsView.prototype.setItemCounts = function(e, t, i) {
        function _toggleCountDisplay(e, t) {
            e.style.display = t ? "" : "none"
        }
        _toggleCountDisplay(this.__itemQuantity, 0 < e),
        _toggleCountDisplay(this.__rareQuantity, 0 < t),
        _toggleCountDisplay(this.__packContentType, i !== PurchaseArticleContentType.UNKNOWN);
        var o = ""
          , n = "";
        switch (i) {
        case PurchaseArticleContentType.MIXED:
            o = "store.packType.mixed",
            n = "mixed";
            break;
        case PurchaseArticleContentType.VANITY:
            o = "store.packType.vanity",
            n = "vanity";
            break;
        case PurchaseArticleContentType.PLAYERS:
            o = "store.packType.players",
            n = "players"
        }
        this.__itemQuantityLabel.textContent = services.Localization.localize(1 < e ? "dock.label.items" : "dock.label.item"),
        this.__packContentTypeLabel.textContent = services.Localization.localize(o),
        this.__itemQuantityValue.textContent = e.toString(),
        this.__rareQuantityValue.textContent = t.toString(),
        this.__packContentType.classList.remove("mixed"),
        this.__packContentType.classList.remove("vanity"),
        this.__packContentType.classList.remove("players"),
        i !== PurchaseArticleContentType.UNKNOWN && this.__packContentType.classList.add(n)
    }
    ,
    UTStorePackDetailsView.prototype.setMyPack = function(e) {
        e ? this.setupOpenButton() : this.removeOpenButton()
    }
    ,
    UTStorePackDetailsView.prototype.setRecommended = function(e) {
        this._pack.showRecommendedLabel(e)
    }
    ,
    UTStorePackDetailsView.prototype.eBubbleEvent = function(e, t, i) {
        var o = this.getArticleId();
        if (e === this._btnBuyCoins)
            this._triggerActions(UTStorePackDetailsView.Event.BUY_COINS, {
                articleId: o
            });
        else if (e === this._btnBuyPoints)
            this._triggerActions(UTStorePackDetailsView.Event.BUY_POINTS, {
                articleId: o
            });
        else if (e === this._btnOpen)
            this._triggerActions(UTStorePackDetailsView.Event.OPEN, {
                articleId: o
            });
        else {
            if (e !== this._btnOdds)
                return;
            this._triggerActions(UTStorePackDetailsView.Event.CHECK_ODDS, {
                articleId: o
            })
        }
    }
    ,
    UTStorePackDetailsView.Event = Object.freeze({
        OPEN: "UTStorePackDetailsView.Event.OPEN",
        BUY_COINS: "UTStoreArticleDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTStoreArticleDetailsView.Event.BUY_POINTS",
        CHECK_ODDS: "UTStorePackDetailsView.Event.CHECK_ODDS"
    }),
    UTStorePackDetailsView
}(UTStoreArticleDetailsView));
UTStorePackDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-pack-details-view"),
        this.__articleHeader = document.createElement("h1"),
        this.__articleHeader.classList.add("ut-store-pack-details-view--title"),
        this.__articleTitle = document.createElement("span"),
        this.__articleHeader.appendChild(this.__articleTitle),
        e.appendChild(this.__articleHeader),
        this._pack = new UTPackGraphicView,
        e.appendChild(this._pack.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-store-pack-details-view--content");
        var i = document.createElement("div");
        i.classList.add("ut-store-pack-details-view--pack-counts"),
        this.__packContentType = document.createElement("div"),
        this.__packContentType.classList.add("pack-type"),
        this.__packContentType.classList.add("ut-store-pack-details-view--pack-counts-cell");
        var o = document.createElement("div");
        o.classList.add("icon"),
        this.__packContentType.appendChild(o),
        this.__packContentTypeLabel = document.createElement("span"),
        this.__packContentTypeLabel.classList.add("label"),
        this.__packContentType.appendChild(this.__packContentTypeLabel),
        i.appendChild(this.__packContentType),
        this.__itemQuantity = document.createElement("div"),
        this.__itemQuantity.classList.add("total"),
        this.__itemQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__itemQuantityValue = document.createElement("span"),
        this.__itemQuantityValue.classList.add("value"),
        this.__itemQuantity.appendChild(this.__itemQuantityValue),
        this.__itemQuantityLabel = document.createElement("span"),
        this.__itemQuantityLabel.classList.add("label"),
        this.__itemQuantity.appendChild(this.__itemQuantityLabel),
        i.appendChild(this.__itemQuantity),
        this.__rareQuantity = document.createElement("div"),
        this.__rareQuantity.classList.add("rare"),
        this.__rareQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__rareQuantityValue = document.createElement("span"),
        this.__rareQuantityValue.classList.add("value"),
        this.__rareQuantity.appendChild(this.__rareQuantityValue),
        this.__rareQuantityLabel = document.createElement("span"),
        this.__rareQuantityLabel.classList.add("label"),
        this.__rareQuantity.appendChild(this.__rareQuantityLabel),
        i.appendChild(this.__rareQuantity),
        t.appendChild(i),
        this.__articleDesc = document.createElement("p"),
        this.__articleDesc.classList.add("ut-store-pack-details-view--description"),
        t.appendChild(this.__articleDesc),
        this.__articleQuantity = document.createElement("p"),
        this.__articleQuantity.classList.add("ut-store-pack-details-view--user-quantity"),
        this.__articleQuantity.classList.add("ut-store-pack-details-view--quantity"),
        this.__articleQuantityLabel = document.createElement("span"),
        this.__articleQuantityLabel.classList.add("label"),
        this.__articleQuantity.appendChild(this.__articleQuantityLabel),
        this.__articleQuantityValue = document.createElement("span"),
        this.__articleQuantityValue.classList.add("value"),
        this.__articleQuantity.appendChild(this.__articleQuantityValue),
        t.appendChild(this.__articleQuantity),
        this.__articleGlobalQuantity = document.createElement("p"),
        this.__articleGlobalQuantity.classList.add("ut-store-pack-details-view--global-quantity"),
        this.__articleGlobalQuantity.classList.add("ut-store-pack-details-view--quantity"),
        this.__articleGlobalQuantityLabel = document.createElement("span"),
        this.__articleGlobalQuantityLabel.classList.add("label"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityLabel),
        this.__articleGlobalQuantityValue = document.createElement("span"),
        this.__articleGlobalQuantityValue.classList.add("value"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityValue),
        t.appendChild(this.__articleGlobalQuantity),
        this.__articleTime = document.createElement("p"),
        this.__articleTime.classList.add("ut-store-pack-details-view--expiry"),
        this.__articleTimeLabel = document.createElement("span"),
        this.__articleTimeLabel.classList.add("label"),
        this.__articleTime.appendChild(this.__articleTimeLabel),
        this.__articleTimeValue = document.createElement("span"),
        this.__articleTimeValue.classList.add("value"),
        this.__articleTime.appendChild(this.__articleTimeValue),
        t.appendChild(this.__articleTime),
        e.appendChild(t),
        this.__articleActionContainer = document.createElement("div"),
        this.__articleActionContainer.classList.add("ut-store-pack-details-view--footer"),
        e.appendChild(this.__articleActionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStorePackDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__articleHeader = null,
    this.__articleTitle = null,
    this._pack.destroy(),
    this.__packContentType = null,
    this.__packContentTypeLabel = null,
    this.__itemQuantity = null,
    this.__itemQuantityValue = null,
    this.__itemQuantityLabel = null,
    this.__rareQuantity = null,
    this.__rareQuantityValue = null,
    this.__rareQuantityLabel = null,
    this.__articleDesc = null,
    this.__articleQuantity = null,
    this.__articleQuantityLabel = null,
    this.__articleQuantityValue = null,
    this.__articleGlobalQuantity = null,
    this.__articleGlobalQuantityLabel = null,
    this.__articleGlobalQuantityValue = null,
    this.__articleTime = null,
    this.__articleTimeLabel = null,
    this.__articleTimeValue = null,
    this.__articleActionContainer = null
}
,
UTStorePackDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLabelButtonControl = function(e) {
    function UTLabelButtonControl() {
        return e.call(this) || this
    }
    return __extends(UTLabelButtonControl, e),
    UTLabelButtonControl.prototype.init = function() {
        e.prototype.init.call(this),
        this._label.init(),
        this._label.setRoundedCorner(UTLabelView.Rounded.TOP_LEFT)
    }
    ,
    UTLabelButtonControl.prototype.setText = function(e) {
        this.__text.textContent = e
    }
    ,
    UTLabelButtonControl.prototype.setLabel = function(e) {
        this._label.setLabel(e)
    }
    ,
    UTLabelButtonControl.prototype.toggleLabel = function(e) {
        this.toggleClass(UTLabelButtonControl.UI_STATE.HAS_LABEL, e),
        e || this.setLabel("")
    }
    ,
    UTLabelButtonControl.prototype.toggleCTA = function(e) {
        this.toggleClass(UTLabelButtonControl.STYLE.CALL_TO_ACTION, e)
    }
    ,
    UTLabelButtonControl.STYLE = Object.freeze({
        DEFAULT: "",
        CALL_TO_ACTION: "call-to-action"
    }),
    UTLabelButtonControl.UI_STATE = Object.freeze({
        DEFAULT: "",
        HAS_LABEL: "has-label"
    }),
    UTLabelButtonControl
}(UTStandardButtonControl);
UTLabelButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("btn-label"),
        this._label = new UTLabelView,
        e.appendChild(this._label.getRootElement()),
        this.__text = document.createElement("span"),
        this.__text.classList.add("btn-text"),
        e.appendChild(this.__text),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLabelButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._label.destroy(),
    this.__text = null
}
,
UTLabelButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreArticlePackGraphicView = function(e) {
    function UTStoreArticlePackGraphicView() {
        return e.call(this) || this
    }
    return __extends(UTStoreArticlePackGraphicView, e),
    UTStoreArticlePackGraphicView.prototype.init = function() {
        this.setStyle(UTStoreArticlePackGraphicView.Styles.DEFAULT),
        e.prototype.init.call(this),
        this._packGraphic.init()
    }
    ,
    UTStoreArticlePackGraphicView.prototype.setStyle = function(e) {
        this.removeClass(JSUtils.getObjectValues(UTStoreArticlePackGraphicView.Styles).join(" ")),
        this.addClass(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderBundle = function(e) {
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.BUNDLE, !0),
        this._packGraphic.getBackgroundImageView().src = AssetLocationUtils.getBundleBackgroundImageUri(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.setPackBackground = function(e) {
        this._packGraphic.setPackBackground(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.getPackGraphic = function() {
        return this._packGraphic
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderSingle = function(e) {
        this.renderItem(e),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.SINGLE, !0)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.clearSingle = function() {
        this.clearItem(),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.SINGLE, !1)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderRevealed = function(e) {
        this.renderItem(e),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.REVEALED, !0)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.clearRevealed = function() {
        this.clearItem(),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.REVEALED, !1)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.setRecommended = function(e) {
        this._packGraphic.showRecommendedLabel(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderItem = function(e) {
        this._itemView && this.clearItem(),
        this._itemView = factories.ItemView.createLargeItem(e),
        this._itemView.init(),
        this._itemView.supportSecondaryViews = !1,
        this._itemView.render(e),
        this.addSubview(this._itemView, this.__itemContainer),
        this.layoutSubviews()
    }
    ,
    UTStoreArticlePackGraphicView.prototype.clearItem = function() {
        this._itemView && this._itemView.dealloc()
    }
    ,
    UTStoreArticlePackGraphicView.Styles = Object.freeze({
        DEFAULT: "ut-store-article-pack-graphic-view--default",
        BUNDLE: "ut-store-article-pack-graphic-view--bundle",
        REVEALED: "ut-store-article-pack-graphic-view--revealed",
        SINGLE: "ut-store-article-pack-graphic-view--single"
    }),
    UTStoreArticlePackGraphicView
}(EAView);
UTStoreArticlePackGraphicView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-article-pack-graphic-view"),
        this._packGraphic = new UTPackGraphicView,
        this._packGraphic.getRootElement().classList.add("ut-store-article-pack-graphic-view--pack"),
        e.appendChild(this._packGraphic.getRootElement()),
        this.__itemContainer = document.createElement("div"),
        this.__itemContainer.classList.add("ut-store-article-pack-graphic-view--option"),
        e.appendChild(this.__itemContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreArticlePackGraphicView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._packGraphic.destroy(),
    this.__itemContainer = null
}
,
UTStoreArticlePackGraphicView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreXrayPackDetailsView = function(o) {
    function UTStoreXrayPackDetailsView() {
        var e = o.call(this) || this;
        return e.isPreviewed = !1,
        e
    }
    return __extends(UTStoreXrayPackDetailsView, o),
    UTStoreXrayPackDetailsView.prototype.init = function() {
        o.prototype.init.call(this),
        this._xrayPack.init(),
        this.setupRevealButton()
    }
    ,
    UTStoreXrayPackDetailsView.prototype.dealloc = function() {
        this.resetPack(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTStoreXrayPackDetailsView.prototype._getContentViewInstance = function() {
        return new UTStoreXrayPackDetailsView
    }
    ,
    UTStoreXrayPackDetailsView.prototype.removeRevealButton = function() {
        this._reviewBtn && this.removeActionButton(this._reviewBtn)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setupRevealButton = function() {
        this.removeRevealButton();
        var e = services.Localization;
        this._reviewBtn = new UTLabelButtonControl,
        this._reviewBtn.init(),
        this._reviewBtn.toggleCTA(!0),
        this._reviewBtn.setText(e.localize("store.x.p")),
        this._reviewBtn.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this._reviewBtn.setInteractionState(!0),
        this.appendActionButton(this._reviewBtn)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.getPackShine = function() {
        return this._xrayPack.getPackGraphic().getPackShine()
    }
    ,
    UTStoreXrayPackDetailsView.prototype.updateShineAnimationState = function() {
        this._xrayPack.getPackGraphic().getPackShine().updateAnimationRunState()
    }
    ,
    UTStoreXrayPackDetailsView.prototype.toggleReplacementWarning = function(e) {
        var t = services.Localization;
        this.__replacementWarning.textContent = e ? t.localize("store.x.p.m") : ""
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setCoinsAmount = function(e) {
        if (0 < e) {
            var t = services.Localization;
            this.__coinPrice.textContent = t.localizeNumber(e)
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setPointsAmount = function(e) {
        if (0 < e) {
            var t = services.Localization;
            this.__pointsPrice.textContent = t.localizeNumber(e)
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.resetPack = function() {
        if (this.isPreviewed) {
            var e = services.Localization;
            this._xrayPack.clearItem(),
            this.toggleReplacementWarning(!1),
            this._reviewBtn.setText(e.localize("store.x.p")),
            this._reviewBtn.toggleLabel(!1),
            this.isPreviewed = !1
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.renderDefault = function(e) {
        this.resetPack(),
        this._xrayPack.setPackBackground(e)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.renderItem = function(e) {
        this._xrayPack.renderRevealed(e)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.renderPreviewed = function(e, t, i) {
        this.isPreviewed = !0;
        var o = services.Localization;
        this.renderItem(e),
        this.setPreviewTimeRemainingLabel(t, i),
        this._reviewBtn.setText(o.localize("store.x.v"))
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setTimeRemaining = function(e) {
        0 !== e && (Math.round(e - Date.now() / MS_PER_SECOND) <= 0 && this.resetPack(),
        o.prototype.setTimeRemaining.call(this, e))
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setPreviewTimeRemainingLabel = function(e, t) {
        if (void 0 === t && (t = 0),
        !(e <= 0)) {
            var i = services.Localization;
            if (0 < t && t <= e)
                return this._reviewBtn.toggleLabel(!0),
                void this._reviewBtn.setLabel(i.localize("store.expiry.na"));
            var o = Math.round(e - Date.now() / MS_PER_SECOND)
              , n = 0 < o ? i.localize("store.x.ref.in", [i.localizePromoTimeRemaining(o)]) : "";
            this._reviewBtn.setLabel(n),
            this._reviewBtn.toggleLabel(0 < o),
            this._reviewBtn.setText(0 < o ? i.localize("store.x.v") : i.localize("store.x.p")),
            o <= 0 && (this.resetPack(),
            this._triggerActions(UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED, {
                articleId: this.getArticleId()
            }))
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setRecommended = function(e) {
        this._xrayPack.setRecommended(e)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.eBubbleEvent = function(e, t, i) {
        e instanceof UTLabelButtonControl && this._triggerActions(UTStoreXrayPackDetailsView.Event.REVEAL, {
            articleId: this.getArticleId()
        }),
        o.prototype.eBubbleEvent.call(this, e, t, i)
    }
    ,
    UTStoreXrayPackDetailsView.Event = Object.freeze({
        OPEN: "UTStorePackDetailsView.Event.OPEN",
        BUY_COINS: "UTStorePackDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTStorePackDetailsView.Event.BUY_POINTS",
        CHECK_ODDS: "UTStorePackDetailsView.Event.CHECK_ODDS",
        REVEAL: "UTStoreXrayPackDetailsView.Event.REVEAL",
        REVEAL_EXPIRED: "UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED"
    }),
    UTStoreXrayPackDetailsView
}(UTStorePackDetailsView);
UTStoreXrayPackDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-xray-pack-details-view"),
        this.__articleHeader = document.createElement("h1"),
        this.__articleHeader.classList.add("ut-store-xray-pack-details-view--heading"),
        this.__articleTitle = document.createElement("span"),
        this.__articleTitle.classList.add("ut-store-xray-pack-details-view--title"),
        this.__articleHeader.appendChild(this.__articleTitle),
        this.__replacementWarning = document.createElement("span"),
        this.__replacementWarning.classList.add("ut-store-xray-pack-details-view--warning"),
        this.__articleHeader.appendChild(this.__replacementWarning),
        e.appendChild(this.__articleHeader);
        var t = document.createElement("div");
        t.classList.add("ut-store-xray-pack-details-view--prices"),
        this.__coinPrice = document.createElement("span"),
        this.__coinPrice.classList.add("ut-store-xray-pack-details-view--prices-coins"),
        t.appendChild(this.__coinPrice),
        this.__pointsPrice = document.createElement("span"),
        this.__pointsPrice.classList.add("ut-store-xray-pack-details-view--prices-points"),
        t.appendChild(this.__pointsPrice),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-store-xray-pack-details-view--body"),
        this._xrayPack = new UTStoreArticlePackGraphicView,
        i.appendChild(this._xrayPack.getRootElement());
        var o = document.createElement("div");
        o.classList.add("ut-store-xray-pack-details-view--content");
        var n = document.createElement("div");
        n.classList.add("ut-store-pack-details-view--pack-counts"),
        this.__packContentType = document.createElement("div"),
        this.__packContentType.classList.add("pack-type"),
        this.__packContentType.classList.add("ut-store-pack-details-view--pack-counts-cell");
        var r = document.createElement("div");
        r.classList.add("icon"),
        this.__packContentType.appendChild(r),
        this.__packContentTypeLabel = document.createElement("span"),
        this.__packContentTypeLabel.classList.add("label"),
        this.__packContentType.appendChild(this.__packContentTypeLabel),
        n.appendChild(this.__packContentType),
        this.__itemQuantity = document.createElement("div"),
        this.__itemQuantity.classList.add("total"),
        this.__itemQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__itemQuantityValue = document.createElement("span"),
        this.__itemQuantityValue.classList.add("value"),
        this.__itemQuantity.appendChild(this.__itemQuantityValue),
        this.__itemQuantityLabel = document.createElement("span"),
        this.__itemQuantityLabel.classList.add("label"),
        this.__itemQuantity.appendChild(this.__itemQuantityLabel),
        n.appendChild(this.__itemQuantity),
        this.__rareQuantity = document.createElement("div"),
        this.__rareQuantity.classList.add("rare"),
        this.__rareQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__rareQuantityValue = document.createElement("span"),
        this.__rareQuantityValue.classList.add("value"),
        this.__rareQuantity.appendChild(this.__rareQuantityValue),
        this.__rareQuantityLabel = document.createElement("span"),
        this.__rareQuantityLabel.classList.add("label"),
        this.__rareQuantity.appendChild(this.__rareQuantityLabel),
        n.appendChild(this.__rareQuantity),
        o.appendChild(n),
        this.__articleDesc = document.createElement("p"),
        this.__articleDesc.classList.add("ut-store-xray-pack-details-view--description"),
        o.appendChild(this.__articleDesc),
        this.__articleQuantity = document.createElement("p"),
        this.__articleQuantity.classList.add("ut-store-xray-pack-details-view--user-quantity"),
        this.__articleQuantity.classList.add("ut-store-xray-pack-details-view--quantity"),
        this.__articleQuantityLabel = document.createElement("span"),
        this.__articleQuantityLabel.classList.add("label"),
        this.__articleQuantity.appendChild(this.__articleQuantityLabel),
        this.__articleQuantityValue = document.createElement("span"),
        this.__articleQuantityValue.classList.add("value"),
        this.__articleQuantity.appendChild(this.__articleQuantityValue),
        o.appendChild(this.__articleQuantity),
        this.__articleGlobalQuantity = document.createElement("p"),
        this.__articleGlobalQuantity.classList.add("ut-store-xray-pack-details-view--global-quantity"),
        this.__articleGlobalQuantity.classList.add("ut-store-xray-pack-details-view--quantity"),
        this.__articleGlobalQuantityLabel = document.createElement("span"),
        this.__articleGlobalQuantityLabel.classList.add("label"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityLabel),
        this.__articleGlobalQuantityValue = document.createElement("span"),
        this.__articleGlobalQuantityValue.classList.add("value"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityValue),
        o.appendChild(this.__articleGlobalQuantity),
        this.__articleTime = document.createElement("p"),
        this.__articleTime.classList.add("ut-store-xray-pack-details-view--expiry"),
        this.__articleTimeLabel = document.createElement("span"),
        this.__articleTimeLabel.classList.add("label"),
        this.__articleTime.appendChild(this.__articleTimeLabel),
        this.__articleTimeValue = document.createElement("span"),
        this.__articleTimeValue.classList.add("value"),
        this.__articleTime.appendChild(this.__articleTimeValue),
        o.appendChild(this.__articleTime),
        i.appendChild(o),
        e.appendChild(i),
        this.__articleActionContainer = document.createElement("div"),
        this.__articleActionContainer.classList.add("ut-store-xray-pack-details-view--footer"),
        e.appendChild(this.__articleActionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreXrayPackDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__articleHeader = null,
    this.__articleTitle = null,
    this.__replacementWarning = null,
    this.__coinPrice = null,
    this.__pointsPrice = null,
    this._xrayPack.destroy(),
    this.__packContentType = null,
    this.__packContentTypeLabel = null,
    this.__itemQuantity = null,
    this.__itemQuantityValue = null,
    this.__itemQuantityLabel = null,
    this.__rareQuantity = null,
    this.__rareQuantityValue = null,
    this.__rareQuantityLabel = null,
    this.__articleDesc = null,
    this.__articleQuantity = null,
    this.__articleQuantityLabel = null,
    this.__articleQuantityValue = null,
    this.__articleGlobalQuantity = null,
    this.__articleGlobalQuantityLabel = null,
    this.__articleGlobalQuantityValue = null,
    this.__articleTime = null,
    this.__articleTimeLabel = null,
    this.__articleTimeValue = null,
    this.__articleActionContainer = null
}
,
UTStoreXrayPackDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreBundleDetailsView = function(t) {
    function UTStoreBundleDetailsView() {
        var e = t.call(this) || this;
        return e.style = UTStoreBundleDetailsView.Styles.UNSET,
        e
    }
    return __extends(UTStoreBundleDetailsView, t),
    UTStoreBundleDetailsView.prototype.removeRevealButton = function() {
        this._btnReveal && (this.removeActionButton(this._btnReveal),
        this._btnReveal.dealloc())
    }
    ,
    UTStoreBundleDetailsView.prototype.setupRevealButton = function() {
        this.removeRevealButton(),
        this._btnReveal = new UTImageButtonControl,
        this._btnReveal.init(),
        this._btnReveal.addClass("call-to-action reveal-btn"),
        this._btnReveal.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnReveal)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableRevealButton = function(e) {
        var t;
        null === (t = this._btnReveal) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.removeStoryButton = function() {
        this._btnStory && this.removeHeaderButton(this._btnStory)
    }
    ,
    UTStoreBundleDetailsView.prototype.setupStoryButton = function() {
        this.removeStoryButton(),
        this._btnStory = new UTImageButtonControl,
        this._btnStory.init(),
        this._btnStory.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this._btnStory.addClass("story-btn"),
        this.appendHeaderButton(this._btnStory)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableStoryButton = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.removeBuyCoinsButton = function() {
        this._btnBuyCoins && this.removeActionButton(this._btnBuyCoins)
    }
    ,
    UTStoreBundleDetailsView.prototype.setupBuyCoinsButton = function(e) {
        this.removeBuyCoinsButton();
        var t = services.Localization;
        this._btnBuyCoins = new UTCurrencyButtonControl,
        this._btnBuyCoins.init(),
        this._btnBuyCoins.setCurrencyType(GameCurrency.COINS),
        this._btnBuyCoins.setText(t.localizeNumber(e)),
        this._btnBuyCoins.setSubText(t.localize("currency.coins")),
        this._btnBuyCoins.addClass("call-to-action"),
        this._btnBuyCoins.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyCoins)
    }
    ,
    UTStoreBundleDetailsView.prototype.removeBuyPointsButton = function() {
        this._btnBuyPoints && this.removeActionButton(this._btnBuyPoints)
    }
    ,
    UTStoreBundleDetailsView.prototype.setupBuyPointsButton = function(e) {
        this.removeBuyPointsButton();
        var t = services.Localization;
        this._btnBuyPoints = new UTCurrencyButtonControl,
        this._btnBuyPoints.init(),
        this._btnBuyPoints.setCurrencyType(GameCurrency.POINTS),
        this._btnBuyPoints.setText(t.localizeNumber(e)),
        this._btnBuyPoints.setSubText(t.localize("currency.points")),
        this._btnBuyPoints.addClass("call-to-action"),
        this._btnBuyPoints.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyPoints)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableBuyCoinButton = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableBuyPointsButton = function(e) {
        var t;
        null === (t = this._btnBuyPoints) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.setStyle = function(e) {
        this.style = e,
        this.removeClass(JSUtils.getObjectValues(UTStoreBundleDetailsView.Styles).join(" ")),
        this.addClass(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.updateShineAnimationState = function() {
        this.style === UTStoreBundleDetailsView.Styles.BUNDLE && this._articleGraphic.getPackGraphic().getPackShine().updateAnimationRunState()
    }
    ,
    UTStoreBundleDetailsView.prototype.renderBundle = function(e) {
        this.setStyle(UTStoreBundleDetailsView.Styles.BUNDLE),
        this._articleGraphic.renderBundle(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.renderDirectPurchase = function(e) {
        this.setStyle(UTStoreBundleDetailsView.Styles.SINGLE),
        this._articleGraphic.renderSingle(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.eBubbleEvent = function(e, t, i) {
        var o = this.articleId;
        e === this._btnReveal ? this._triggerActions(UTStoreBundleDetailsView.Event.VIEW_REVEAL, {
            articleId: o
        }) : e === this._btnStory ? this._triggerActions(UTStoreBundleDetailsView.Event.VIEW_STORY, {
            articleId: o
        }) : e === this._btnBuyCoins ? this._triggerActions(UTStoreBundleDetailsView.Event.BUY_COINS, {
            articleId: o
        }) : e === this._btnBuyPoints && this._triggerActions(UTStoreBundleDetailsView.Event.BUY_POINTS, {
            articleId: o
        })
    }
    ,
    UTStoreBundleDetailsView.Styles = Object.freeze({
        UNSET: "",
        BUNDLE: "ut-store-bundle-details-view--bundle",
        SINGLE: "ut-store-bundle-details-view--single"
    }),
    UTStoreBundleDetailsView.Event = Object.freeze({
        BUY_COINS: "UTStoreBundleDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTStoreBundleDetailsView.Event.BUY_POINTS",
        VIEW_REVEAL: "UTStoreBundleDetailsView.Event.VIEW_REVEAL",
        VIEW_STORY: "UTStoreBundleDetailsView.Event.VIEW_STORY"
    }),
    UTStoreBundleDetailsView
}(UTStoreArticleDetailsView);
UTStoreBundleDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-bundle-details-view"),
        this.__articleHeader = document.createElement("h1"),
        this.__articleHeader.classList.add("ut-store-bundle-details-view--title"),
        this.__articleTitle = document.createElement("span"),
        this.__articleHeader.appendChild(this.__articleTitle),
        e.appendChild(this.__articleHeader);
        var t = document.createElement("div");
        t.classList.add("ut-store-bundle-details-view--body"),
        this._articleGraphic = new UTStoreArticlePackGraphicView,
        t.appendChild(this._articleGraphic.getRootElement());
        var i = document.createElement("div");
        i.classList.add("ut-store-bundle-details-view--content"),
        this.__articleDesc = document.createElement("p"),
        this.__articleDesc.classList.add("ut-store-bundle-details-view--description"),
        i.appendChild(this.__articleDesc),
        this.__articleQuantity = document.createElement("p"),
        this.__articleQuantity.classList.add("ut-store-bundle-details-view--user-quantity"),
        this.__articleQuantity.classList.add("ut-store-bundle-details-view--quantity"),
        this.__articleQuantityLabel = document.createElement("span"),
        this.__articleQuantityLabel.classList.add("label"),
        this.__articleQuantity.appendChild(this.__articleQuantityLabel),
        this.__articleQuantityValue = document.createElement("span"),
        this.__articleQuantityValue.classList.add("value"),
        this.__articleQuantity.appendChild(this.__articleQuantityValue),
        i.appendChild(this.__articleQuantity),
        this.__articleGlobalQuantity = document.createElement("p"),
        this.__articleGlobalQuantity.classList.add("ut-store-bundle-details-view--global-quantity"),
        this.__articleGlobalQuantity.classList.add("ut-store-bundle-details-view--quantity"),
        this.__articleGlobalQuantityLabel = document.createElement("span"),
        this.__articleGlobalQuantityLabel.classList.add("label"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityLabel),
        this.__articleGlobalQuantityValue = document.createElement("span"),
        this.__articleGlobalQuantityValue.classList.add("value"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityValue),
        i.appendChild(this.__articleGlobalQuantity),
        this.__articleTime = document.createElement("p"),
        this.__articleTime.classList.add("ut-store-bundle-details-view--expiry"),
        this.__articleTimeLabel = document.createElement("span"),
        this.__articleTimeLabel.classList.add("label"),
        this.__articleTime.appendChild(this.__articleTimeLabel),
        this.__articleTimeValue = document.createElement("span"),
        this.__articleTimeValue.classList.add("value"),
        this.__articleTime.appendChild(this.__articleTimeValue),
        i.appendChild(this.__articleTime),
        t.appendChild(i),
        e.appendChild(t),
        this.__articleActionContainer = document.createElement("div"),
        this.__articleActionContainer.classList.add("ut-store-bundle-details-view--footer"),
        e.appendChild(this.__articleActionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreBundleDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__articleHeader = null,
    this.__articleTitle = null,
    this._articleGraphic.destroy(),
    this.__articleDesc = null,
    this.__articleQuantity = null,
    this.__articleQuantityLabel = null,
    this.__articleQuantityValue = null,
    this.__articleGlobalQuantity = null,
    this.__articleGlobalQuantityLabel = null,
    this.__articleGlobalQuantityValue = null,
    this.__articleTime = null,
    this.__articleTimeLabel = null,
    this.__articleTimeValue = null,
    this.__articleActionContainer = null
}
,
UTStoreBundleDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNimbleMTXDetailsView = function(t) {
    function UTNimbleMTXDetailsView() {
        var e = t.call(this) || this;
        return e.nimbleMTXsku = "",
        e
    }
    return __extends(UTNimbleMTXDetailsView, t),
    UTNimbleMTXDetailsView.prototype.init = function() {
        t.prototype.init.call(this),
        this._actionBtn.addTarget(this, this.onStartNimbleTransaction, EventType.TAP),
        this._actionBtn.init(),
        this.toggleOriginAccessLogo(!1),
        this.toggleTag(!1)
    }
    ,
    UTNimbleMTXDetailsView.prototype.setHeader = function(e) {
        this.__title.textContent = e
    }
    ,
    UTNimbleMTXDetailsView.prototype.setDescription = function(e) {
        this.__description.textContent = e
    }
    ,
    UTNimbleMTXDetailsView.prototype.setButtonText = function(e) {
        this._actionBtn.setText(e)
    }
    ,
    UTNimbleMTXDetailsView.prototype.setLocalImageFPUrl = function(e) {
        this._imageLoaderFP.src = "images/store/IconFCPoint_pack" + e + ".png"
    }
    ,
    UTNimbleMTXDetailsView.prototype.setMTXsku = function(e) {
        this.nimbleMTXsku = e
    }
    ,
    UTNimbleMTXDetailsView.prototype.addOriginAccessLogo = function() {
        this._imageLoaderOA.src = "images/logo/EA_Play.png",
        this.toggleOriginAccessLogo(!0)
    }
    ,
    UTNimbleMTXDetailsView.prototype.toggleOriginAccessLogo = function(e) {
        this._imageLoaderOA.setDisplay(e)
    }
    ,
    UTNimbleMTXDetailsView.prototype.addTag = function(e) {
        var t = services.Localization.localize("popular" === e ? "store.mtx.most-popular" : "store.mtx.best-value");
        this._tag.setLabel(t),
        this._tag.setRoundedCorner(UTLabelView.Rounded.ROUND),
        this._tag.setStyle("popular" === e ? UTLabelView.Style.ACTIVE : UTLabelView.Style.HIGHLIGHT),
        this.toggleTag(!0)
    }
    ,
    UTNimbleMTXDetailsView.prototype.toggleTag = function(e) {
        this._tag.setDisplay(e)
    }
    ,
    UTNimbleMTXDetailsView.prototype.onStartNimbleTransaction = function(e, t, i) {
        this._triggerActions(UTNimbleMTXDetailsView.START_TRANSACTION, {
            nimbleMTXsku: this.nimbleMTXsku
        })
    }
    ,
    UTNimbleMTXDetailsView.START_TRANSACTION = "startTransaction",
    UTNimbleMTXDetailsView
}(EATargetActionView);
UTNimbleMTXDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("col-1-1"),
        e.classList.add("ut-nimble-mtx-details");
        var t = document.createElement("div");
        t.classList.add("image"),
        this._imageLoaderFP = new EAImageView,
        t.appendChild(this._imageLoaderFP.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("content"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("title"),
        i.appendChild(this.__title),
        this.__description = document.createElement("div"),
        this.__description.classList.add("description"),
        i.appendChild(this.__description),
        this._tag = new UTLabelView,
        i.appendChild(this._tag.getRootElement());
        var o = document.createElement("div");
        o.classList.add("purchasing"),
        this._imageLoaderOA = new EAImageView,
        o.appendChild(this._imageLoaderOA.getRootElement()),
        this._actionBtn = new UTStandardButtonControl,
        this._actionBtn.getRootElement().classList.add("call-to-action"),
        o.appendChild(this._actionBtn.getRootElement()),
        i.appendChild(o),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNimbleMTXDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._imageLoaderFP.destroy(),
    this.__title = null,
    this.__description = null,
    this._tag.destroy(),
    this._imageLoaderOA.destroy(),
    this._actionBtn.destroy()
}
,
UTNimbleMTXDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreView = function(t) {
    function UTStoreView() {
        var e = t.call(this) || this;
        return e.showPackLabels = !0,
        e.checkPackShineStates = function() {
            e.storePacks.forEach(function(e) {
                return e.updateShineAnimationState()
            })
        }
        ,
        e.storePacks = [],
        e.nimbleMTXItems = [],
        e
    }
    return __extends(UTStoreView, t),
    UTStoreView.prototype.init = function() {
        var e = this;
        t.prototype.init.call(this),
        this._navigation.addTarget(this, this._handleTabSelect, EventType.TAP),
        this.setInteractionState(!0),
        this.toggleDescription(!1),
        this.debounceCallback = JSUtils.debounce(function() {
            return e.checkPackShineStates()
        }, 200),
        this.__itemList.addEventListener(EventType.SCROLL, this.debounceCallback, !1)
    }
    ,
    UTStoreView.prototype.dealloc = function() {
        this.clearPacks(),
        this.clearNimbleMTXItems(),
        this._navigation.removeTarget(this, this._handleTabSelect, EventType.TAP),
        this.__itemList.removeEventListener(EventType.SCROLL, this.debounceCallback, !1),
        t.prototype.dealloc.call(this)
    }
    ,
    UTStoreView.prototype.setInteractionState = function(t) {
        this._setInteractionStateFlag(t),
        this._navigation.setInteractionState(t),
        this.storePacks.forEach(function(e) {
            return e.setInteractionState(t)
        })
    }
    ,
    UTStoreView.prototype.setDisclaimerText = function(e) {
        this.__disclaimerText.innerHTML = e
    }
    ,
    UTStoreView.prototype.clearPacks = function() {
        this.storePacks.forEach(function(e) {
            return e.dealloc()
        }),
        this.storePacks = []
    }
    ,
    UTStoreView.prototype.clearNimbleMTXItems = function() {
        this.nimbleMTXItems.forEach(function(e) {
            return e.dealloc()
        }),
        this.nimbleMTXItems = []
    }
    ,
    UTStoreView.prototype.setCategoryTabs = function(e, t, i) {
        var o = this;
        this._navigation.clearTabs(),
        e && this._navigation.addTab(PurchaseDisplayGroup.MYPACKS, services.Localization.localize("store.group.mypacks")),
        i.forEach(function(e) {
            o._navigation.addTab(e.categoryId, services.Localization.localize(e.localizedName))
        }),
        t && this._navigation.addTab(PurchaseDisplayGroup.PREVIEWED, services.Localization.localize("store.group.previewed")),
        this._navigation.layoutSubviews()
    }
    ,
    UTStoreView.prototype.setStoreCategory = function(e) {
        this._navigation.setActiveTab(e)
    }
    ,
    UTStoreView.prototype.getStoreCategory = function() {
        return this._navigation.getActiveTab()
    }
    ,
    UTStoreView.prototype.setDescriptionString = function(e) {
        this.__description.textContent = e
    }
    ,
    UTStoreView.prototype.toggleDescription = function(e) {
        this.__description.style.display = e ? "block" : "none"
    }
    ,
    UTStoreView.prototype.togglePackLabels = function(e) {
        this.showPackLabels = e
    }
    ,
    UTStoreView.prototype.setNimbleMTXItems = function(e, t) {
        var i = this;
        this.clearPacks(),
        this.clearNimbleMTXItems(),
        this.setDescriptionString(services.Localization.localize("store.mtx.labelDescription", [APP_YEAR_SHORT.toString()])),
        this.toggleDescription(this.showPackLabels),
        e.forEach(function(e) {
            return i.generateNimbleMTXView(e, t)
        }),
        this.layoutSubviews()
    }
    ,
    UTStoreView.prototype.generateNimbleMTXView = function(e, t) {
        var i = new UTNimbleMTXDetailsView
          , o = services.Localization;
        i.init(),
        i.setHeader(e.title),
        i.setDescription(o.localize("store.mtxitem.descriptionText", [o.localizeNumber(e.points)])),
        i.setButtonText(o.localize("store.mtxitem.buttonText", [e.priceFormatted])),
        i.setLocalImageFPUrl(e.getLocalImageAssetId()),
        i.setMTXsku(e.sku),
        t && i.addOriginAccessLogo(),
        this.showPackLabels && e.isMostPopular && i.addTag("popular"),
        this.showPackLabels && e.isBestValue && i.addTag("value"),
        i.addTarget(this, this._eNimbleMTXItemEventHandler, UTNimbleMTXDetailsView.START_TRANSACTION),
        this.addSubview(i, this.__itemList),
        this.nimbleMTXItems.push(i)
    }
    ,
    UTStoreView.prototype.setPacks = function(e, t, i, o) {
        var n = this;
        this.clearPacks(),
        this.clearNimbleMTXItems(),
        this.setDescriptionString(""),
        this.toggleDescription(!1),
        e.forEach(function(e) {
            e instanceof UTStoreXrayItemPackEntity ? n.generateXrayPack(e, o) : e instanceof UTStoreItemPackEntity ? n.generatePack(e, t, i, !e.isMyPack && o) : e instanceof UTStoreBundleEntity && n.generateBundle(e, t, i)
        }),
        this.layoutSubviews(),
        this.checkPackShineStates()
    }
    ,
    UTStoreView.prototype.setupArticleView = function(e) {
        var t;
        if (e instanceof UTStoreXrayItemPackEntity)
            t = new UTStoreXrayPackDetailsView;
        else if (e instanceof UTStoreItemPackEntity)
            t = new UTStorePackDetailsView;
        else {
            if (!(e instanceof UTStoreBundleEntity))
                return null;
            t = new UTStoreBundleDetailsView
        }
        if (t instanceof UTStoreArticleDetailsView) {
            var i = services.Localization;
            t.init(),
            t.setArticleId(e.id),
            t.setName(i.localize(e.packName)),
            t.setDescription(i.localize(e.packDesc)),
            (e instanceof UTStoreItemPackEntity && !e.isMyPack || e instanceof UTStoreBundleEntity) && (0 < e.userAvailableQuantity && t.setPackQuantity(e.quantity),
            0 < e.globalAvailableQuantity && t.setGlobalPackQuantity(e.globalAvailableQuantity),
            0 < e.end && t.setTimeRemaining(e.end)),
            e instanceof UTStoreItemPackEntity && t instanceof UTStorePackDetailsView && t.setRecommended(!0 === e.isSegmented)
        }
        return t.setTradableStyle(e.tradable),
        t
    }
    ,
    UTStoreView.prototype.setupPack = function(e, t) {
        var i = this.setupArticleView(e);
        if (i instanceof UTStorePackDetailsView) {
            var o = e.guidAssetId && !JSUtils.isEmpty(e.guidAssetId) ? Number(e.guidAssetId) : Number(e.assetId);
            return DebugUtils.Assert(JSUtils.isNumber(o), "Foreground asset id is expecting a number but received" + typeof o),
            i.renderDefault(e.assetId),
            i.setItemCounts(e.itemQuantity, e.rareQuantity, e.contentType),
            t && (i.setupOddsButton(),
            i.addTarget(this, this._ePackEventHandler, UTStorePackDetailsView.Event.CHECK_ODDS)),
            i
        }
        return null
    }
    ,
    UTStoreView.prototype.generatePack = function(e, t, i, o) {
        var n = this
          , r = this.setupPack(e, o);
        if (r instanceof UTStorePackDetailsView) {
            var a = e.getPrice(GameCurrency.COINS)
              , s = e.getPrice(GameCurrency.POINTS);
            r.setMyPack(e.isMyPack),
            e.isMyPack || (i.coins && 0 < a && r.setupBuyCoinsButton(a),
            i.points && 0 < s && r.setupBuyPointsButton(s),
            t.forEach(function(e) {
                e.type === GameCurrency.COINS ? r.enableBuyCoinButton(0 < a && e.amount >= a) : e.type === GameCurrency.POINTS && r.enableBuyPointsButton(0 < s && e.amount >= s)
            })),
            r.addTarget(this, function() {
                return n._ePackEventHandler(r, UTStorePackDetailsView.Event.OPEN, {
                    articleId: e.id,
                    tradable: e.tradable
                })
            }, UTStorePackDetailsView.Event.OPEN),
            r.addTarget(this, this._ePackEventHandler, UTStorePackDetailsView.Event.BUY_COINS),
            r.addTarget(this, this._ePackEventHandler, UTStorePackDetailsView.Event.BUY_POINTS),
            this.addSubview(r, this.__itemList),
            this.storePacks.push(r)
        }
    }
    ,
    UTStoreView.prototype.generateXrayPack = function(e, t) {
        var i = this.setupPack(e, t);
        if (i instanceof UTStoreXrayPackDetailsView) {
            var o = e.getPreviewItem()
              , n = e.getPrice(GameCurrency.COINS)
              , r = e.getPrice(GameCurrency.POINTS);
            i.setCoinsAmount(n),
            i.setPointsAmount(r),
            e.isPreviewed() && o instanceof UTItemEntity && i.renderPreviewed(o, e.previewExpireTime, e.end),
            i.toggleReplacementWarning(e.wasRefreshed),
            i.addTarget(this, this._ePackEventHandler, UTStoreXrayPackDetailsView.Event.REVEAL),
            i.addTarget(this, this._ePackEventHandler, UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED),
            this.addSubview(i, this.__itemList),
            this.storePacks.push(i)
        }
    }
    ,
    UTStoreView.prototype.removeArticleView = function(t) {
        var e = this.storePacks.find(function(e) {
            return e.getArticleId() === t
        });
        e && (e.dealloc(),
        this.storePacks.splice(this.storePacks.indexOf(e), 1))
    }
    ,
    UTStoreView.prototype.handleArticleTimedUpdate = function(t) {
        if (this.getStoreCategory() !== PurchaseDisplayGroup.MYPACKS) {
            var e = this.storePacks.find(function(e) {
                return e.getArticleId() === t.id
            });
            e instanceof UTStoreXrayPackDetailsView && t instanceof UTStoreXrayItemPackEntity ? (e.setPreviewTimeRemainingLabel(t.previewExpireTime, t.end),
            e.setTimeRemaining(t.end)) : e instanceof UTStoreArticleDetailsView && e.setTimeRemaining(t.end)
        } else
            DebugUtils.Assert(!1, "UTStoreView.handleArticleTimedUpdate() fired on myPacks presented tab. Exiting our of timed event handler")
    }
    ,
    UTStoreView.prototype.updatePack = function(t) {
        var e = this.storePacks.find(function(e) {
            return e.getArticleId() === t.id
        });
        if (e instanceof UTStoreXrayPackDetailsView) {
            var i = t.getPreviewItem();
            if (t.isPreviewed() && i instanceof UTItemEntity)
                e.toggleReplacementWarning(t.wasRefreshed),
                e.renderPreviewed(i, t.previewExpireTime, t.end);
            else {
                var o = t.guidAssetId && !JSUtils.isEmpty(t.guidAssetId) ? Number(t.guidAssetId) : Number(t.assetId);
                DebugUtils.Assert(JSUtils.isNumber(o), "Foreground asset id is expecting a number but received" + typeof o),
                e.renderDefault(t.assetId)
            }
        } else
            DebugUtils.Assert(!1, "No UTStoreXrayPackDetailsView's found in collection")
    }
    ,
    UTStoreView.prototype.generateBundle = function(e, t, i) {
        var o = this.setupArticleView(e);
        if (o instanceof UTStoreBundleDetailsView) {
            var n = e.guidAssetId && !JSUtils.isEmpty(e.guidAssetId) ? e.guidAssetId : Number(e.assetId);
            e.isSingle ? o.renderDirectPurchase(e.getPreviewItem()) : o.renderBundle(n);
            var r = e.getPrice(GameCurrency.COINS)
              , a = e.getPrice(GameCurrency.POINTS);
            i.coins && 0 < r && o.setupBuyCoinsButton(r),
            i.points && 0 < a && o.setupBuyPointsButton(a),
            t.forEach(function(e) {
                e.type === GameCurrency.COINS ? o.enableBuyCoinButton(0 < r && e.amount >= r) : e.type === GameCurrency.POINTS && o.enableBuyPointsButton(0 < a && e.amount >= a)
            }),
            e.isSingle || (o.setupRevealButton(),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.VIEW_REVEAL),
            o.setupStoryButton(),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.VIEW_STORY)),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.BUY_COINS),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.BUY_POINTS),
            this.addSubview(o, this.__itemList),
            this.storePacks.push(o)
        }
    }
    ,
    UTStoreView.prototype._handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && (this.__itemList.scrollTop = 0,
        this._triggerActions(UTStoreView.Event.TAB_SELECTED, i))
    }
    ,
    UTStoreView.prototype._ePackEventHandler = function(e, t, i) {
        var o = null == i ? void 0 : i.articleId;
        this.getStoreCategory() === PurchaseDisplayGroup.PREVIEWED && t === UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED && o ? this.removeArticleView(o) : this.isInteractionEnabled() && this._triggerActions(t, i)
    }
    ,
    UTStoreView.prototype._eNimbleMTXItemEventHandler = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(t, i)
    }
    ,
    UTStoreView.Event = {
        TAB_SELECTED: "UTStoreView.Event.TAB_SELECTED"
    },
    UTStoreView
}(EATargetActionView);
UTStoreView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-hub-view"),
        this._navigation = new EAFilterBarView,
        e.appendChild(this._navigation.getRootElement()),
        this.__description = document.createElement("div"),
        this.__description.classList.add("ut-store-hub-view--description"),
        e.appendChild(this.__description),
        this.__itemList = document.createElement("div"),
        this.__itemList.classList.add("ut-store-hub-view--content"),
        this.__disclaimerText = document.createElement("p"),
        this.__disclaimerText.classList.add("ut-store-hub-view--disclaimer"),
        this.__itemList.appendChild(this.__disclaimerText),
        e.appendChild(this.__itemList),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._navigation.destroy(),
    this.__description = null,
    this.__itemList = null,
    this.__disclaimerText = null
}
,
UTStoreView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreRevealModalListView = function(i) {
    function UTStoreRevealModalListView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.listRows = [],
        t.emptyMessage = null,
        t._coinPurchaseBtn = null,
        t._pointsPurchaseBtn = null,
        t
    }
    return __extends(UTStoreRevealModalListView, i),
    UTStoreRevealModalListView.prototype.init = function() {
        i.prototype.init.call(this),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._exitBtn.setInteractionState(!0)
    }
    ,
    UTStoreRevealModalListView.prototype.dealloc = function() {
        this.removeEmptyMessage(),
        this.clearList(),
        this.removeDuplicateButton(),
        this.removeFooter(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTStoreRevealModalListView.prototype.toggleDuplicateWarning = function(e) {
        this.__duplicateCountContainer.style.display = 1 <= e ? "flex" : "";
        var t = services.Localization
          , i = 1 === e ? "store.x.p.duplicateCountSingle" : "store.x.p.duplicateCountPlural";
        this.__duplicateCount.textContent = 0 < e ? t.localize(i, [e.toString()]) : ""
    }
    ,
    UTStoreRevealModalListView.prototype.toggleReplacementWarning = function(e) {
        var t = services.Localization;
        this.__replacementWarning.textContent = e ? t.localize("store.x.p.m") : ""
    }
    ,
    UTStoreRevealModalListView.prototype.toggleFooterDisplay = function(e) {
        this.__footerElement.style.display = e ? "" : "none"
    }
    ,
    UTStoreRevealModalListView.prototype.clearList = function() {
        this.listRows.forEach(function(e) {
            return e.dealloc()
        }),
        this.listRows = []
    }
    ,
    UTStoreRevealModalListView.prototype.showEmptyMessage = function() {
        this.emptyHeaderMessage = this.loc.localize("store.x.l.e.t"),
        this.emptyBodyMessage = this.loc.localize("store.x.l.e.m"),
        this.emptyMessage || (this.emptyMessage = new UTEmptySectionMessageView),
        this.getRootElement().appendChild(this.emptyMessage.getRootElement()),
        this.emptyMessage.setHeading(this.emptyHeaderMessage),
        this.emptyMessage.setDescription(this.emptyBodyMessage)
    }
    ,
    UTStoreRevealModalListView.prototype.removeEmptyMessage = function() {
        this.emptyMessage && (this.emptyMessage.dealloc(),
        this.emptyMessage = null)
    }
    ,
    UTStoreRevealModalListView.prototype.setHeader = function(e) {
        this.__title.textContent = e
    }
    ,
    UTStoreRevealModalListView.prototype.removeDuplicateButton = function() {
        this._duplicateBtn && (this._duplicateBtn.removeTarget(this, this.onButtonTapped, EventType.TAP),
        this._duplicateBtn.dealloc(),
        this._duplicateBtn = null)
    }
    ,
    UTStoreRevealModalListView.prototype.toggleDuplicateButtonInteractionState = function(e) {
        var t;
        null === (t = this._duplicateBtn) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreRevealModalListView.prototype.setupFooter = function(e, t, i, o, n) {
        var r = this;
        void 0 === o && (o = 0),
        void 0 === n && (n = 0),
        this.removeFooter(),
        e && (this.removeDuplicateButton(),
        this._duplicateBtn = new UTStandardButtonControl,
        this._duplicateBtn.init(),
        this._duplicateBtn.setText(this.loc.localize("store.x.p.duplicateCheck")),
        this._duplicateBtn.addClass("mini"),
        this.__actionContainer.appendChild(this._duplicateBtn.getRootElement()),
        this._duplicateBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this.setInteractionState(!0)),
        i.coins && 0 < o && (this._coinPurchaseBtn = new UTCurrencyButtonControl,
        this._coinPurchaseBtn.init(),
        this._coinPurchaseBtn.setText(this.loc.localizeNumber(o)),
        this._coinPurchaseBtn.setCurrencyType(GameCurrency.COINS),
        this._coinPurchaseBtn.setSubText(this.loc.localize("currency.coins")),
        this._coinPurchaseBtn.addClass("call-to-action"),
        this.__actionContainer.appendChild(this._coinPurchaseBtn.getRootElement()),
        this._coinPurchaseBtn.addTarget(this, this.onButtonTapped, EventType.TAP)),
        i.points && 0 < n && (this._pointsPurchaseBtn = new UTCurrencyButtonControl,
        this._pointsPurchaseBtn.init(),
        this._pointsPurchaseBtn.setText(this.loc.localizeNumber(n)),
        this._pointsPurchaseBtn.setCurrencyType(GameCurrency.POINTS),
        this._pointsPurchaseBtn.setSubText(this.loc.localize("currency.points")),
        this._pointsPurchaseBtn.addClass("call-to-action"),
        this.__actionContainer.appendChild(this._pointsPurchaseBtn.getRootElement()),
        this._pointsPurchaseBtn.addTarget(this, this.onButtonTapped, EventType.TAP)),
        t.forEach(function(e) {
            r._coinPurchaseBtn && e.type === GameCurrency.COINS ? (r._coinPurchaseBtn.setInteractionState(0 < o && e.amount >= o),
            r.__coinsAvailable.textContent = r.loc.localizeNumber(e.amount)) : r._pointsPurchaseBtn && e.type === GameCurrency.POINTS && (r._pointsPurchaseBtn.setInteractionState(0 < n && e.amount >= n),
            r.__pointsAvailable.textContent = r.loc.localizeNumber(e.amount))
        }),
        this.setInteractionState(!0)
    }
    ,
    UTStoreRevealModalListView.prototype.removeFooter = function() {
        this.removeDuplicateButton(),
        this._coinPurchaseBtn && (this._coinPurchaseBtn.removeTarget(this, this.onButtonTapped, EventType.TAP),
        this._coinPurchaseBtn.dealloc(),
        this._coinPurchaseBtn = null),
        this._pointsPurchaseBtn && (this._pointsPurchaseBtn.removeTarget(this, this.onButtonTapped, EventType.TAP),
        this._pointsPurchaseBtn.dealloc(),
        this._pointsPurchaseBtn = null)
    }
    ,
    UTStoreRevealModalListView.prototype.addItems = function(e, i, o) {
        var n = this;
        return void 0 === o && (o = ListItemPriority.DEFAULT),
        this.listRows = e.map(function(e) {
            var t = i.includes(e.definitionId);
            return n.generateListRow(e, t, o)
        }),
        this.listRows
    }
    ,
    UTStoreRevealModalListView.prototype.render = function() {
        var t = this;
        0 === this.listRows.length ? (this.showEmptyMessage(),
        this.removeFooter()) : (this.removeEmptyMessage(),
        this.listRows.forEach(function(e) {
            e.render(),
            t.__list.appendChild(e.getRootElement())
        }))
    }
    ,
    UTStoreRevealModalListView.prototype.generateListRow = function(e, t, i) {
        var o = new UTItemTableCellView;
        return o.setData(e, void 0, i),
        t && o.addClass(UTStoreRevealModalListView.ListStyle.DUPLICATE),
        o
    }
    ,
    UTStoreRevealModalListView.prototype.onButtonTapped = function(e, t, i) {
        this.isInteractionEnabled() && (e === this._exitBtn ? this._triggerActions(UTStoreRevealModalListView.Event.EXIT, i) : e === this._duplicateBtn ? this._triggerActions(UTStoreRevealModalListView.Event.DUPLICATE_CHECK, i) : e === this._coinPurchaseBtn && this._triggerActions(UTStoreRevealModalListView.Event.COIN_PURCHASE, i),
        e === this._pointsPurchaseBtn && this._triggerActions(UTStoreRevealModalListView.Event.POINTS_PURCHASE, i))
    }
    ,
    UTStoreRevealModalListView.ListStyle = Object.freeze({
        DUPLICATE: "ut-store-reveal-modal-list-view--duplicate"
    }),
    UTStoreRevealModalListView.Event = Object.freeze({
        EXIT: "UTStoreRevealModalListView.Event.EXIT",
        COIN_PURCHASE: "UTStoreRevealModalListView.Event.COIN_PURCHASE",
        DUPLICATE_CHECK: "UTStoreRevealModalListView.Event.DUPLICATE_CHECK",
        POINTS_PURCHASE: "UTStoreRevealModalListView.Event.POINTS_PURCHASE"
    }),
    UTStoreRevealModalListView
}(EATargetActionView);
UTStoreRevealModalListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-reveal-modal-list-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this.__list = document.createElement("ul"),
        this.__list.classList.add("itemList"),
        e.appendChild(this.__list),
        this.__footerElement = document.createElement("footer"),
        this.__replacementWarning = document.createElement("div"),
        this.__replacementWarning.classList.add("ut-store-reveal-modal-list-view--warning"),
        this.__footerElement.appendChild(this.__replacementWarning);
        var i = document.createElement("div");
        i.classList.add("ut-store-reveal-modal-list-view--footer-container"),
        this.__wallet = document.createElement("div"),
        this.__wallet.classList.add("ut-store-reveal-modal-list-view--wallet"),
        this.__coinsAvailable = document.createElement("span"),
        this.__coinsAvailable.classList.add("ut-store-reveal-modal-list-view--coins"),
        this.__wallet.appendChild(this.__coinsAvailable),
        this.__pointsAvailable = document.createElement("span"),
        this.__pointsAvailable.classList.add("ut-store-reveal-modal-list-view--points"),
        this.__wallet.appendChild(this.__pointsAvailable),
        i.appendChild(this.__wallet),
        this.__duplicateCountContainer = document.createElement("div"),
        this.__duplicateCountContainer.classList.add("ut-store-reveal-modal-list-view--duplicate-count");
        var o = document.createElement("span");
        o.classList.add("ut-store-reveal-modal-list-view--duplicate-count-icon"),
        this.__duplicateCountContainer.appendChild(o),
        this.__duplicateCount = document.createElement("span"),
        this.__duplicateCount.classList.add("ut-store-reveal-modal-list-view--duplicate-count-content"),
        this.__duplicateCountContainer.appendChild(this.__duplicateCount),
        i.appendChild(this.__duplicateCountContainer),
        this.__actionContainer = document.createElement("div"),
        this.__actionContainer.classList.add("ut-store-reveal-modal-list-view--action-container"),
        i.appendChild(this.__actionContainer),
        this.__footerElement.appendChild(i),
        e.appendChild(this.__footerElement),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreRevealModalListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this.__list = null,
    this.__footerElement = null,
    this.__replacementWarning = null,
    this.__wallet = null,
    this.__coinsAvailable = null,
    this.__pointsAvailable = null,
    this.__duplicateCountContainer = null,
    this.__duplicateCount = null,
    this.__actionContainer = null
}
,
UTStoreRevealModalListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStorePackRevealModalListViewController = function(l) {
    function UTStorePackRevealModalListViewController(e, t, i) {
        var o = l.call(this) || this;
        return o.isCachePreview = e,
        o.pack = t,
        o.storeVM = i,
        o.viewmodel = new UTItemListViewModel([]),
        o
    }
    return __extends(UTStorePackRevealModalListViewController, l),
    UTStorePackRevealModalListViewController.prototype.dealloc = function() {
        this.viewmodel = null,
        l.prototype.dealloc.call(this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype._getTelemetryId = function() {
        return "Store Pack Reveal"
    }
    ,
    UTStorePackRevealModalListViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreRevealModalListView({
            localization: services.Localization
        })
    }
    ,
    UTStorePackRevealModalListViewController.prototype.viewDidAppear = function() {
        var e, t, i, o;
        l.prototype.viewDidAppear.call(this),
        null === (e = this.viewmodel) || void 0 === e || e.addArray(this.pack.itemCollection);
        var n = services.Localization
          , r = services.Store.isStoreDuplicateChecksEnabled()
          , a = this.getView()
          , s = services.User.getUser();
        a.setHeader(n.localize("store.x.pp")),
        this.pack.isDuplicateChecked || a.addTarget(this, this.eDuplicateCheck, UTStoreRevealModalListView.Event.DUPLICATE_CHECK),
        a.addItems(null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getItemList()) && void 0 !== i ? i : [], this.pack.duplicateIds),
        a.setupFooter(r && !this.pack.isDuplicateChecked, null !== (o = null == s ? void 0 : s.getCurrencies()) && void 0 !== o ? o : [], {
            coins: services.Store.isCoinsEnabled(),
            points: services.Store.hasPointsSpendingAccess()
        }, this.pack.getPrice(GameCurrency.COINS), this.pack.getPrice(GameCurrency.POINTS)),
        r && 0 < this.pack.duplicateIds.length && a.toggleDuplicateWarning(this.pack.duplicateIds.length),
        a.toggleReplacementWarning(this.pack.wasRefreshed),
        a.addTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT),
        a.addTarget(this, this.eBuyWithCoins, UTStoreRevealModalListView.Event.COIN_PURCHASE),
        a.addTarget(this, this.eBuyWithPoints, UTStoreRevealModalListView.Event.POINTS_PURCHASE),
        a.render(),
        this.triggerTelemetryPage()
    }
    ,
    UTStorePackRevealModalListViewController.prototype.viewWillDisappear = function() {
        var e;
        l.prototype.viewWillDisappear.call(this),
        null === (e = this.viewmodel) || void 0 === e || e.resetCollection([]);
        var t = this.getView();
        t.removeTarget(this, this.eDuplicateCheck, UTStoreRevealModalListView.Event.DUPLICATE_CHECK),
        t.removeTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT),
        t.removeTarget(this, this.eBuyWithCoins, UTStoreRevealModalListView.Event.COIN_PURCHASE),
        t.removeTarget(this, this.eBuyWithPoints, UTStoreRevealModalListView.Event.POINTS_PURCHASE)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eDuplicateCheck = function(e, t, i) {
        var n = this
          , r = this.getView();
        r.toggleDuplicateButtonInteractionState(!1),
        r.removeTarget(this, this.eDuplicateCheck, UTStoreRevealModalListView.Event.DUPLICATE_CHECK);
        this.storeVM.requestArticlePreviewDuplicates(this.pack).observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            t.success && JSUtils.isObject(t.response) ? (r.clearList(),
            r.addItems(null !== (o = null === (i = n.viewmodel) || void 0 === i ? void 0 : i.getItemList()) && void 0 !== o ? o : [], n.pack.duplicateIds),
            r.toggleDuplicateWarning(n.pack.duplicateIds.length),
            r.render()) : t.status === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Store.setStoreDuplicateChecksEnabled(!1),
            services.Notification.queue([services.Localization.localize("notification.store.duplicateCheckServiceDisabled"), UINotificationType.NEGATIVE])) : services.Notification.queue([services.Localization.localize("notification.store.duplicateCheckFail"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eExitTapped = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eBuyWithCoins = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eBuyWithPoints = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.handleKeyUpEvent = function(e) {
        e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE && e.key !== KeyboardKey.ENTER || this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.triggerTelemetryPage = function() {
        function toFormattedDate(e) {
            return e.toISOString()
        }
        if (this.isCachePreview) {
            var t = {
                items: {
                    consumable: [],
                    durable: []
                },
                preview_generated: toFormattedDate(new Date(this.pack.previewCreateTime * MS_PER_SECOND)),
                refresh_time: toFormattedDate(new Date(this.pack.previewExpireTime * MS_PER_SECOND))
            };
            this.pack.itemCollection.forEach(function(e) {
                e.isConsumable() ? t.items.consumable.push({
                    id: e.definitionId,
                    quantity: e.stackCount
                }) : t.items.durable.push({
                    id: e.definitionId,
                    quantity: e.stackCount
                })
            }, this);
            var e = services.Localization;
            services.PIN.sendData(PINEventType.STORE_ARTICLE_PREVIEW, {
                item_attr: t,
                item_id: this.pack.id.toString(),
                item_name: e.localize(this.pack.packName),
                item_type: "Pack",
                source: "UT",
                type: "view"
            })
        }
        var i = this._getTelemetryId();
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, i)
    }
    ,
    UTStorePackRevealModalListViewController
}(BasePopupViewController)
  , UTStoreViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTStoreViewController() {
        var e = i.call(this) || this;
        return e.viewmodel = null,
        e.startingCategory = PurchaseDisplayGroup.MYPACKS,
        e.packLoadObservable = null,
        e.isOpeningPack = !1,
        e.isLoadingPacks = !1,
        e.intervalController = new EAIntervalController(1e3,e.handleEventTimer.bind(e)),
        e
    }
    return __extends(UTStoreViewController, i),
    UTStoreViewController.prototype.initWithStartingCategory = function(e) {
        this.initialized || (this.startingCategory = e,
        this.init())
    }
    ,
    UTStoreViewController.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.viewmodel = null,
        this.packLoadObservable && (this.packLoadObservable.unobserve(this),
        this.packLoadObservable = null,
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING))
    }
    ,
    UTStoreViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStoreViewController.prototype._getTelemetryId = function() {
        return "Hub - Store"
    }
    ,
    UTStoreViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.store")
    }
    ,
    UTStoreViewController.prototype.viewDidAppear = function() {
        var e;
        if (i.prototype.viewDidAppear.call(this),
        this.intervalController.start(),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        services.Store.isStoreEnabled())
            this.getStorePacks(!1);
        else {
            var t = this.getNavigationController();
            t && t.popViewController()
        }
        getDefaultDispatcher().addObserver(AppNotification.APP_RESUME, this, this.nAppResumed),
        getDefaultDispatcher().addObserver(AppNotification.APP_PAUSE, this, this._nAppPaused),
        this.getView().addTarget(this, this.eTabSelected, UTStoreView.Event.TAB_SELECTED),
        this.triggerTelemetryPage()
    }
    ,
    UTStoreViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.intervalController.stop(),
        getDefaultDispatcher().removeObserver(AppNotification.APP_RESUME, this),
        getDefaultDispatcher().removeObserver(AppNotification.APP_PAUSE, this),
        this.getView().removeTarget(this, this.eTabSelected, UTStoreView.Event.TAB_SELECTED)
    }
    ,
    UTStoreViewController.prototype.willDismiss = function(e) {
        i.prototype.willDismiss.call(this, e),
        e && e instanceof UTPackOddsViewController && e.dealloc()
    }
    ,
    UTStoreViewController.prototype.setCategory = function(e) {
        var t, i, o, n, r, a, s, l;
        if (this.packLoadObservable)
            this.startingCategory = e;
        else {
            var c = this.getView()
              , d = services.User.getUser();
            if (c.setStoreCategory(e),
            e === PurchaseDisplayGroup.FIFAPOINTS) {
                var u = !0 !== (null !== (t = getAppMain().getConfigRepository().getConfigObject(EAConfigurationRepository.KEY_MTX_SETTINGS)) && void 0 !== t ? t : {}).hideLabels;
                c.togglePackLabels(u),
                c.setNimbleMTXItems(null !== (o = null === (i = this.viewmodel) || void 0 === i ? void 0 : i.getNimbleMTXItems()) && void 0 !== o ? o : [], null !== (r = null === (n = null == d ? void 0 : d.getSelectedPersona()) || void 0 === n ? void 0 : n.hasOriginAccess) && void 0 !== r && r)
            } else
                c.setPacks(null !== (s = null === (a = this.viewmodel) || void 0 === a ? void 0 : a.getPacks(e)) && void 0 !== s ? s : [], null !== (l = null == d ? void 0 : d.getCurrencies()) && void 0 !== l ? l : [], {
                    coins: services.Store.isCoinsEnabled(),
                    points: services.Store.hasPointsSpendingAccess()
                }, services.Store.isPackOddsEnabled() && e !== PurchaseDisplayGroup.VANITYBUNDLE)
        }
    }
    ,
    UTStoreViewController.prototype.createCustomErrorPopup = function(e, t) {
        var i = services.Localization
          , o = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: i.localize(t),
            title: i.localize(e)
        });
        o.init(),
        o.viewWillAppear(),
        o.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTStoreViewController.prototype.getStorePacks = function(e) {
        var t, i, a = this;
        void 0 === e && (e = !0),
        e && repositories.Store.setDirty();
        var s = null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.categories) && void 0 !== i ? i : [];
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.packLoadObservable = services.Store.getPacks(PurchasePackType.ALL, !0, !0),
        this.packLoadObservable.observe(this, function(e, t) {
            if (e.unobserve(a),
            a.packLoadObservable = null,
            t.success && JSUtils.isObject(t.response)) {
                var i = t.response.packs;
                if (0 === i.length)
                    (r = a.getNavigationController()) && r.popViewController();
                a.viewmodel = new UTStoreViewModel(i,services.Store.isMobileMTXEnabled() ? services.MTX.getNimbleMTXItems() : []);
                var o = services.Store.isCoinsEnabled()
                  , n = services.Store.hasPointsSpendingAccess();
                o || n ? o ? n || services.Notification.queue([services.Localization.localize("notification.store.fifapointsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.coinsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.allCurrenciesDisabled"), UINotificationType.NEGATIVE]),
                t.status !== HttpStatusCode.NOT_MODIFIED || 0 === s.length ? a.getStoreCategories() : (a.viewmodel.setStoreCategories(s),
                a.setCategory(a.startingCategory))
            } else {
                var r;
                (r = a.getNavigationController()) && r.popViewController()
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTStoreViewController.prototype.getStoreCategories = function() {
        var e, t = this;
        null === (e = this.viewmodel) || void 0 === e || e.requestCategoryData().observe(this, function() {
            t.setupCategories()
        })
    }
    ,
    UTStoreViewController.prototype.updateViewCategories = function() {}
    ,
    UTStoreViewController.prototype.setupCategories = function() {
        this.setCategory(this.startingCategory)
    }
    ,
    UTStoreViewController.prototype.gotoUnassigned = function() {
        var r = this
          , a = this.getView();
        a.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Item.requestUnassignedItems().observe(this, function(e, t) {
            var i;
            e.unobserve(r);
            var o = r.getNavigationController();
            if (o) {
                var n = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
                t.success && JSUtils.isObject(t.response) ? n.initWithItems(null !== (i = t.response.items) && void 0 !== i ? i : []) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : n.init(),
                o.pushViewController(n)
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            a.setInteractionState(!0)
        })
    }
    ,
    UTStoreViewController.prototype.eTabSelected = function(e, t, i) {
        var o, n, r, a, s = this;
        if (!this.isLoadingPacks) {
            var l = this.getView()
              , c = services.User.getUser()
              , d = services.Store.isCoinsEnabled()
              , u = services.Store.hasPointsSpendingAccess()
              , p = services.Store.isPackOddsEnabled() && i.id !== PurchaseDisplayGroup.VANITYBUNDLE;
            this.isLoadingPacks = !0,
            l.setInteractionState(!1),
            l.setPacks(null !== (n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPacks(i.id)) && void 0 !== n ? n : [], null !== (r = null == c ? void 0 : c.getCurrencies()) && void 0 !== r ? r : [], {
                coins: d,
                points: u
            }, p);
            var h = null === (a = this.viewmodel) || void 0 === a ? void 0 : a.categories.find(function(e) {
                return e.categoryId === i.id
            })
              , _ = null;
            i.id === PurchaseDisplayGroup.MYPACKS ? _ = this._getTelemetryId() + ": " + i.id.toString() : h && (_ = this._getTelemetryId() + ": " + h.localizedName),
            _ && (TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.FILTER, _.toUpperCase()),
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: _.toUpperCase()
            })),
            setTimeout(function() {
                s.viewmodel && (s.isLoadingPacks = !1,
                l.setInteractionState(!0))
            }, 0)
        }
    }
    ,
    UTStoreViewController.prototype.eRevealPack = function(e, t, i) {
        var o, l = this;
        if (!this.isPreviewingPack) {
            this.isPreviewingPack = !0;
            var n = this.viewmodel
              , c = this.getView()
              , d = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId, !1);
            if (!(d instanceof UTStoreXrayItemPackEntity))
                return DebugUtils.Assert(!1, "Attempt to preview a non previewable pack"),
                void (this.isPreviewingPack = !1);
            var u = !d.isPreviewed()
              , r = d.isCollectionCached();
            c.setInteractionState(!1);
            function M9a(e, t, i) {
                if (e.unobserve(l),
                t === UTStoreRevealModalListView.Event.COIN_PURCHASE || t === UTStoreRevealModalListView.Event.POINTS_PURCHASE)
                    return l.isPreviewingPack = !1,
                    void l.eOpenPack(i, t, {
                        articleId: d.id
                    });
                c.updatePack(d),
                l.isPreviewingPack = !1,
                u && l.updateViewCategories(),
                c.setInteractionState(!0)
            }
            function N9a() {
                if (n) {
                    var e = new UTStorePackRevealModalListViewController(r,d,n);
                    e.init(),
                    e.onExit.observe(l, M9a),
                    gPopupClickShield.setActivePopup(e)
                } else
                    DebugUtils.Assert(!1, "viewmodel is not undefined and required to progress")
            }
            d ? d.getPreviewCollection().observe(this, function(e, t) {
                if (e.unobserve(l),
                t.success && JSUtils.isObject(t.response)) {
                    d.wasRefreshed && l.createCustomErrorPopup("fut.p.c.changed.title", "fut.p.x.p.c.changed.d");
                    var i = d.getPreviewItem();
                    if (d && i)
                        if (u) {
                            var o = new UTPackAnimationViewController;
                            o.initWithPackData(i, d.assetId),
                            o.setAnimationCallback(function() {
                                l.dismissViewController(!1, function() {
                                    o.dealloc()
                                }),
                                N9a()
                            }),
                            o.modalDisplayStyle = "fullscreen",
                            l.presentViewController(o, !0)
                        } else
                            N9a();
                    else
                        DebugUtils.Assert(!1, "Unable to determine the itemToShow")
                } else {
                    var n = services.Localization
                      , r = !0;
                    l.isPreviewingPack = !1,
                    c.setInteractionState(!0);
                    var a = t.error ? t.error.code : t.status;
                    if (a === HttpStatusCode.NOT_FOUND)
                        l.createCustomErrorPopup("store.x.e.t.p.e", "store.x.e.d.p.e");
                    else if (a === HttpStatusCode.FORBIDDEN)
                        r = !1,
                        l.createCustomErrorPopup("store.x.e.t.p.l", "fut.p.x.limit.reached");
                    else if (a === UtasErrorCode.SERVICE_IS_DISABLED)
                        services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.STORE_PREVIEWS_ENABLED, !1),
                        services.Notification.queue([n.localize("fut.pu.fail.p.x.disabled"), UINotificationType.NEGATIVE]);
                    else if (a === HttpStatusCode.RATE_LIMIT)
                        l.createCustomErrorPopup("store.popup.error.RateLimitHeader", "store.popup.error.RateLimitBody");
                    else if (NetworkErrorManager.checkCriticalStatus(a))
                        NetworkErrorManager.handleStatus(a);
                    else {
                        services.Notification.queue([n.localize("notification.store.failedRequest"), UINotificationType.NEGATIVE]);
                        var s = l.getNavigationController();
                        s && s.popViewController()
                    }
                    r && l.getStorePacks()
                }
            }) : DebugUtils.Assert(!1, "Unable to determine the pack from viewmodel")
        }
    }
    ,
    UTStoreViewController.prototype.showGoToUnassignedConfirmation = function() {
        var e = this
          , t = this.getView();
        utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.UNASSIGNED_ENTITLEMENT, {
            params: []
        }, function() {
            e.gotoUnassigned()
        }, function() {
            t.setInteractionState(!0)
        })
    }
    ,
    UTStoreViewController.prototype.showGoToPlayerPicksConfirmation = function() {
        var e = this
          , t = this.getView();
        utils.PopupManager.showConfirmation(new UTPopupDTO("popup.error.playerPicks.title.collectBeforePurchase","popup.error.playerPicks.description.collectBeforePurchase",[{
            labelEnum: enums.UIDialogOptions.CANCEL,
            negativeActionFlag: !0
        }, {
            labelEnum: enums.UIDialogOptions.TAKE_ME
        }]), {
            params: []
        }, function() {
            services.Item.requestPendingPlayerPickItemSelection().observe(e, e._onPendingPlayerPickItemsRequested)
        }, function() {
            t.setInteractionState(!0)
        })
    }
    ,
    UTStoreViewController.prototype._onPendingPlayerPickItemsRequested = function(e, t) {
        if (e.unobserve(this),
        t.success && JSUtils.isObject(t.response) && 0 < t.response.items.length && 0 < t.response.availablePicks)
            this.openPlayerPicks(t.response.items, t.response.availablePicks);
        else if (NetworkErrorManager.checkCriticalStatus(t.status))
            NetworkErrorManager.handleStatus(t.status);
        else {
            var i = new UTPopupDTO("popup.error.playerPicks.title.noPlayerPicksAvailable","popup.error.playerPicks.description.noPlayerPicksAvailable",[{
                labelEnum: enums.UIDialogOptions.OK
            }]);
            utils.PopupManager.showAlert(i, function() {
                return getAppMain().getLoginController().logout()
            })
        }
    }
    ,
    UTStoreViewController.prototype.openPlayerPicks = function(e, t) {
        var i = new UTPlayerPicksViewController;
        i.initWithPicks(e, t),
        i.modalDisplayStyle = isPhone() ? "fullscreen" : "form",
        this.presentViewController(i, !0),
        this.getView().setInteractionState(!0)
    }
    ,
    UTStoreViewController.prototype.didDismiss = function(e) {
        i.prototype.didDismiss.call(this, e),
        e instanceof UTPlayerPicksViewController && this.gotoUnassigned(),
        e.dealloc()
    }
    ,
    UTStoreViewController.prototype.eOpenPack = function(p, e, t) {
        var i, o, h = this;
        if (!this.isOpeningPack) {
            var a = this.getView()
              , _ = null === (i = this.viewmodel) || void 0 === i ? void 0 : i.getPackById(t.articleId, e === UTStorePackDetailsView.Event.OPEN, JSUtils.isBoolean(t.tradable) ? t.tradable : void 0)
              , m = e === UTStorePackDetailsView.Event.BUY_POINTS || e === UTStoreBundleDetailsView.Event.BUY_POINTS || e === UTStoreRevealModalListView.Event.POINTS_PURCHASE ? GameCurrency.POINTS : GameCurrency.COINS;
            this.isOpeningPack = !0,
            a.setInteractionState(!1);
            function yab(e, t) {
                var i, o, n, r, a;
                if (e.unobserve(h),
                h.isOpeningPack = !1,
                t.success && JSUtils.isObject(t.response))
                    if (repositories.Item.setDirty(ItemPile.PURCHASED),
                    services.User.requestCurrencies(),
                    _ instanceof UTStoreItemPackEntity && (null == _ ? void 0 : _.isMyPack) && (null === (o = services.User.getUser()) || void 0 === o || o.decrementNumUnopenedPacks()),
                    window.services.revenueSDK.logEvent(RevenueAnalytics.Event.STORE_PACK_PURCHASED, ((i = {})[RevenueAnalytics.Key.CURRENCY] = m,
                    i[RevenueAnalytics.Key.TYPE] = null !== (n = null == _ ? void 0 : _.dealType) && void 0 !== n ? n : "unknown",
                    i[RevenueAnalytics.Key.ID] = null !== (a = null === (r = null == _ ? void 0 : _.id) || void 0 === r ? void 0 : r.toString()) && void 0 !== a ? a : "unknown",
                    i)),
                    p instanceof UTStorePackRevealModalListViewController)
                        repositories.Store.setDirty(),
                        h.gotoUnassigned();
                    else {
                        var s = null
                          , l = t.response.items.filter(function(e) {
                            return e.isPlayer()
                        });
                        if (0 < l.length) {
                            var c = new UTItemUtils
                              , d = l.sort(function(e, t) {
                                return c.sortByType(e, t)
                            });
                            s = d[0]
                        } else
                            t.response.items.forEach(function(e) {
                                (!s || s.discardValue < e.discardValue) && (s = e)
                            });
                        if (s && _) {
                            var u = new UTPackAnimationViewController;
                            u.initWithPackData(s, _.assetId),
                            u.setAnimationCallback(function() {
                                this.dismissViewController(!1, function() {
                                    u.dealloc()
                                }),
                                repositories.Store.setDirty(),
                                this.gotoUnassigned()
                            }
                            .bind(h)),
                            u.modalDisplayStyle = "fullscreen",
                            h.presentViewController(u, !0)
                        } else
                            DebugUtils.Assert(!1, "Unable to determine the itemToShow")
                    }
                else
                    T(t)
            }
            function zab(e, t) {
                var i, o, n, r, a;
                if (e.unobserve(h),
                h.isOpeningPack = !1,
                t.success && JSUtils.isObject(t.response)) {
                    services.User.requestCurrencies();
                    var s = services.User.getUser();
                    _ instanceof UTStoreItemPackEntity && (null == _ ? void 0 : _.isMyPack) && (null === (o = services.User.getUser()) || void 0 === o || o.decrementNumUnopenedPacks()),
                    TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.PLAYER_PICKS, "Store - Player Picks Pack Purchased"),
                    window.services.revenueSDK.logEvent(RevenueAnalytics.Event.STORE_PACK_PURCHASED, ((i = {})[RevenueAnalytics.Key.CURRENCY] = m,
                    i[RevenueAnalytics.Key.TYPE] = null !== (n = null == _ ? void 0 : _.dealType) && void 0 !== n ? n : "unknown",
                    i[RevenueAnalytics.Key.ID] = null !== (a = null === (r = null == _ ? void 0 : _.id) || void 0 === r ? void 0 : r.toString()) && void 0 !== a ? a : "unknown",
                    i)),
                    s && (s.hasPlayerPicksPending = !0),
                    services.Item.requestPendingPlayerPickItemSelection().observe(h, h._onPendingPlayerPickItemsRequested)
                } else
                    T(t)
            }
            function Bab() {
                var e;
                if (_ instanceof UTStorePurchasableArticleEntity) {
                    var t = m === GameCurrency.POINTS ? utils.PopupManager.Confirmations.BUY_PACK_POINTS : utils.PopupManager.Confirmations.BUY_PACK_COINS;
                    if (_ instanceof UTStoreBundleEntity && _.isSingle ? t = m === GameCurrency.POINTS ? utils.PopupManager.Confirmations.BUY_ITEM_POINTS : utils.PopupManager.Confirmations.BUY_ITEM_COINS : _ instanceof UTStoreBundleEntity && !_.isSingle && (t = m === GameCurrency.POINTS ? utils.PopupManager.Confirmations.BUY_BUNDLE_POINTS : utils.PopupManager.Confirmations.BUY_BUNDLE_COINS),
                    _ instanceof UTStoreItemPackEntity) {
                        var i = _.prices.toArray().map(function(e) {
                            return {
                                name: e.value.type,
                                funds: e.value.amount,
                                finalFunds: e.value.amount
                            }
                        });
                        services.PIN.sendData(PINEventType.MESSAGE, {
                            track: {
                                data: {
                                    item_type: "store_reco",
                                    item_id: _.id + "-" + _.subArticleId
                                },
                                trackingtag: null !== (e = _.trackingTag) && void 0 !== e ? e : ""
                            },
                            context: {
                                id: _.id,
                                subArticleId: _.subArticleId,
                                isSegmented: _.isSegmented,
                                currencies: i
                            },
                            type: "in_game"
                        })
                    }
                    var o = services.Localization
                      , n = o.localize(_.packName)
                      , r = o.localizeNumber(_.getPrice(m));
                    utils.PopupManager.showConfirmation(t, {
                        params: [n, r]
                    }, function() {
                        _.purchase(m).observe(this, _ instanceof UTStoreItemPackEntity && _.isPlayerPickPack ? zab : yab)
                    }
                    .bind(h), function() {
                        this.isOpeningPack = !1,
                        a.setInteractionState(!0)
                    }
                    .bind(h))
                }
            }
            function Cab(e, t) {
                if (e.unobserve(h),
                t === UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
                    services.PIN.sendData(PINEventType.MILESTONE, {
                        mode: PIN_MILESTONE_EVT_MODE,
                        moment: PINMileStoneEventMoment.IGNORE,
                        mstid: PINMilestoneEventId.PACK_LIMIT,
                        type: PINMilestoneEventType.PLAY_TIME
                    }),
                    Bab.call(h),
                    services.PlayerHealth.storeLimitIgnoredTimestamp(PlayerHealthStatId.PACKS_OPENED);
                else if (t === UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED) {
                    var i = h.getNavigationController();
                    if (i) {
                        var o = new UTPlayerHealthViewController;
                        o.init(),
                        i.pushViewController(o, !0)
                    }
                    h.isOpeningPack = !1,
                    a.setInteractionState(!0)
                } else
                    h.isOpeningPack = !1,
                    a.setInteractionState(!0)
            }
            var T = function(e) {
                var t, i;
                a.setInteractionState(!0);
                var o = services.Localization
                  , n = e.error ? e.error.code : e.status;
                if (n === HttpStatusCode.NOT_FOUND || n === HttpStatusCode.GONE)
                    h.createCustomErrorPopup("store.x.e.t.p.e", "store.x.e.d.p.e");
                else if (n === HttpStatusCode.FORBIDDEN)
                    h.createCustomErrorPopup("fut.p.c.not_expired.title", "fut.x.not_expired");
                else if (n === UtasErrorCode.STATE_INVALID)
                    h.createCustomErrorPopup("fut.p.c.changed.title", "fut.p.x.p.c.changed");
                else if (n === UtasErrorCode.ITEM_EXISTS)
                    repositories.Item.setDirty(ItemPile.PURCHASED),
                    h.showGoToUnassignedConfirmation();
                else if (n === UtasErrorCode.SERVICE_IS_DISABLED) {
                    switch (m) {
                    case GameCurrency.COINS:
                        services.Store.setCoinsEnabled(!1);
                        break;
                    case GameCurrency.POINTS:
                        (null === (i = null === (t = services.User.getUser()) || void 0 === t ? void 0 : t.getSelectedPersona()) || void 0 === i ? void 0 : i.isPC) ? services.MTX.setMTXEnabled(!1) : services.Store.setPointsEnabled(!1);
                        break;
                    default:
                        services.Store.setStoreEnabled(!1)
                    }
                    if (!services.Store.isCoinsEnabled() && !services.Store.hasPointsSpendingAccess() || !services.Store.isStoreEnabled())
                        (r = h.getNavigationController()) && r.popViewController()
                } else if (n === HttpStatusCode.RATE_LIMIT)
                    h.createCustomErrorPopup("store.popup.error.RateLimitHeader", "store.popup.error.RateLimitBody");
                else if (NetworkErrorManager.checkCriticalStatus(n))
                    NetworkErrorManager.handleStatus(n);
                else {
                    var r;
                    services.Notification.queue([o.localize("notification.store.failedRequest"), UINotificationType.NEGATIVE]),
                    (r = h.getNavigationController()) && r.popViewController()
                }
                h.getStorePacks()
            };
            _ ? 0 < repositories.Item.numItemsInCache(ItemPile.PURCHASED) ? (this.showGoToUnassignedConfirmation(),
            this.isOpeningPack = !1) : _ instanceof UTStoreItemPackEntity && _.isPlayerPickPack && (null === (o = services.User.getUser()) || void 0 === o ? void 0 : o.hasPlayerPicksPending) ? (this.showGoToPlayerPicksConfirmation(),
            this.isOpeningPack = !1) : e === UTStorePackDetailsView.Event.OPEN ? _.open().observe(this, yab) : services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.PACKS_OPENED) ? services.PlayerHealth.readPlayerHealth().observe(this, function(e, t) {
                if (e.unobserve(h),
                t.success && t.data && t.data.playerHealth) {
                    var i = t.data.playerHealth
                      , o = i.getStatById(PlayerHealthStatId.PACKS_OPENED);
                    if (i.enabled && o && o.isLimitReached()) {
                        services.PIN.sendData(PINEventType.MILESTONE, {
                            mode: PIN_MILESTONE_EVT_MODE,
                            moment: PINMileStoneEventMoment.COMPLETE,
                            mstid: PINMilestoneEventId.PACK_LIMIT,
                            type: PINMilestoneEventType.PLAY_TIME
                        });
                        var n = new UTPlayerHealthLimitPopupViewController;
                        n.init(),
                        n.getView().setContentByType(o.id, o.limit),
                        n.onExit.observe(h, Cab),
                        gPopupClickShield.setActivePopup(n)
                    } else
                        Bab.call(h)
                } else
                    Bab.call(h)
            }) : Bab.call(this) : DebugUtils.Assert(!1, "Unable to determine the pack from viewmodel")
        }
    }
    ,
    UTStoreViewController.prototype.eUnassignedSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.BUTTON_PRESS, "Store - Unassigned Tile"),
        this.gotoUnassigned()
    }
    ,
    UTStoreViewController.prototype._nAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTStoreViewController.prototype.nAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTStoreViewController.prototype.handleEventTimer = function() {
        if (this.viewmodel) {
            var t = this.getView()
              , e = t.getStoreCategory();
            e !== PurchaseDisplayGroup.MYPACKS && this.viewmodel.getAllPurchaseablePacks().forEach(function(e) {
                return t.handleArticleTimedUpdate(e)
            }),
            e !== PurchaseDisplayGroup.PREVIEWED || this.viewmodel.hasPreviewedPacks() || (this.createCustomErrorPopup("store.popup.error.packsExpiredWarningTitle", "store.popup.error.packsExpiredWarningMessage"),
            this.setupCategories())
        }
    }
    ,
    UTStoreViewController.prototype.triggerTelemetryPage = function() {
        var e = this._getTelemetryId();
        e && TelemetryManager.trackPage(TelemetryManager.Sections.STORE, e)
    }
    ,
    UTStoreViewController
}(EAViewController));
services.URL.registerDeepLinkID(DeepLinkSection.STORE, function(e) {
    var t = getAppMain().getRootViewController();
    if (services.Localization.storeLocLoaded) {
        if (t.setGameViewTab(UTGameTabBarController.TabTag.STORE),
        0 < e.length) {
            var i = e[0]
              , o = void 0;
            for (o in PurchaseDisplayGroup)
                if (PurchaseDisplayGroup.hasOwnProperty(o) && PurchaseDisplayGroup[o] === i) {
                    var n = t.getPresentedViewController();
                    if (n instanceof UTTabBarController) {
                        var r = n.getCurrentViewController();
                        (null == r ? void 0 : r.getRootController()).setCategory(PurchaseDisplayGroup[o])
                    }
                }
        }
    } else
        t.setGameViewTab(UTGameTabBarController.TabTag.HOME)
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreBundleDetailsModalView = function(e) {
    function UTStoreBundleDetailsModalView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTStoreBundleDetailsModalView, e),
    UTStoreBundleDetailsModalView.prototype.init = function() {
        e.prototype.init.call(this),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._exitBtn.setInteractionState(!0)
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setModalHeader = function(e) {
        this.__title.textContent = e
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setName = function(e) {
        this.__name.textContent = e
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setDescription = function(e) {
        this.__description.innerHTML = TextUtils.nltobr(e)
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setArtAsset = function(e) {
        this._asset.src = AssetLocationUtils.getBundleBackgroundImageUri(e)
    }
    ,
    UTStoreBundleDetailsModalView.prototype.onButtonTapped = function(e, t, i) {
        this.isInteractionEnabled() && e === this._exitBtn && this._triggerActions(UTStoreBundleDetailsModalView.Event.EXIT, i)
    }
    ,
    UTStoreBundleDetailsModalView.Event = Object.freeze({
        EXIT: "UTStoreBundleDetailsModalView.Event.EXIT"
    }),
    UTStoreBundleDetailsModalView
}(EATargetActionView);
UTStoreBundleDetailsModalView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-bundle-details-modal-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-store-bundle-details-modal-view--body");
        var o = document.createElement("div");
        o.classList.add("ut-store-bundle-details-modal-view--image-container"),
        this._asset = new EAImageView,
        this._asset.getRootElement().classList.add("ut-store-bundle-details-modal-view--asset"),
        o.appendChild(this._asset.getRootElement()),
        i.appendChild(o),
        this.__name = document.createElement("div"),
        this.__name.classList.add("ut-store-bundle-details-modal-view--name"),
        i.appendChild(this.__name),
        this.__description = document.createElement("div"),
        this.__description.classList.add("ut-store-bundle-details-modal-view--description"),
        i.appendChild(this.__description),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreBundleDetailsModalView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this._asset.destroy(),
    this.__name = null,
    this.__description = null
}
,
UTStoreBundleDetailsModalView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreBundleDetailsModalViewController = function(i) {
    function UTStoreBundleDetailsModalViewController(e) {
        var t = i.call(this) || this;
        return t.bundle = e,
        t
    }
    return __extends(UTStoreBundleDetailsModalViewController, i),
    UTStoreBundleDetailsModalViewController.prototype._getTelemetryId = function() {
        return "Store - Bundle Story - Bundle ID: " + this.bundle.id
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreBundleDetailsModalView
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = services.Localization
          , t = this.getView();
        t.setModalHeader(e.localize("store.bundle.story.title")),
        t.setName(e.localize(this.bundle.packName)),
        t.setDescription(e.localize(this.bundle.packDesc)),
        t.setArtAsset(this.bundle.guidAssetId),
        t.addTarget(this, this.eExitTapped, UTStoreBundleDetailsModalView.Event.EXIT),
        t.setInteractionState(!0),
        this.triggerTelemetryPage()
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.getView().removeTarget(this, this.eExitTapped, UTStoreBundleDetailsModalView.Event.EXIT)
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.eExitTapped = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.triggerTelemetryPage = function() {
        var e = this._getTelemetryId();
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, e)
    }
    ,
    UTStoreBundleDetailsModalViewController
}(BasePopupViewController)
  , UTStoreBundleRevealModalListViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTStoreBundleRevealModalListViewController(e) {
        var t = o.call(this) || this;
        return t.bundle = e,
        t.viewmodel = new UTItemListViewModel([]),
        t
    }
    return __extends(UTStoreBundleRevealModalListViewController, o),
    UTStoreBundleRevealModalListViewController.prototype.dealloc = function() {
        this.viewmodel.dealloc(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype._getTelemetryId = function() {
        return "Store - Bundle Reveal - Bundle ID: " + this.bundle.id
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreRevealModalListView({
            localization: services.Localization
        })
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.viewDidAppear = function() {
        var e, t = services.Localization, i = this.getView();
        o.prototype.viewDidAppear.call(this),
        this.viewmodel.addArray(this.bundle.getCollection()),
        i.toggleFooterDisplay(!1),
        i.setHeader(t.localize("store.vanity.bundle.content.modal.title")),
        i.addItems(null !== (e = this.viewmodel.getItemList()) && void 0 !== e ? e : [], [], ListItemPriority.DEFAULT),
        i.addTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT),
        i.render(),
        i.setInteractionState(!0),
        this.triggerTelemetryPage()
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        o.prototype.viewWillDisappear.call(this),
        this.viewmodel.resetCollection([]),
        e.removeTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT)
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.eExitTapped = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.triggerTelemetryPage = function() {
        var e = this._getTelemetryId();
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, e)
    }
    ,
    UTStoreBundleRevealModalListViewController
}(BasePopupViewController))
  , UTStoreItemViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTStoreItemViewController(e) {
        void 0 === e && (e = -1);
        var t = r.call(this) || this;
        return t.initCategory = e,
        t
    }
    return __extends(UTStoreItemViewController, r),
    UTStoreItemViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStoreItemViewController.prototype._getTelemetryId = function() {
        return "Hub - Store - Vanity"
    }
    ,
    UTStoreItemViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.vanity")
    }
    ,
    UTStoreItemViewController.prototype.updateViewCategories = function() {
        var e;
        if (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.categories) {
            var t = this.getView().getStoreCategory()
              , i = this.viewmodel.getBundleCategories().concat(this.viewmodel.getVanityCategories()).filter(function(e, t, i) {
                return i.indexOf(e) === t
            });
            this.getView().setCategoryTabs(!1, !1, i),
            this.setCategory(t)
        }
    }
    ,
    UTStoreItemViewController.prototype.setupCategories = function() {
        var e, t;
        this.updateViewCategories();
        var i = null === (e = this.viewmodel) || void 0 === e ? void 0 : e.getBundleCategories()
          , o = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getVanityCategories();
        if (-1 < this.initCategory)
            this.startingCategory = this.initCategory,
            this.initCategory = -1;
        else if (i && 0 < i.length)
            this.startingCategory = i[0].categoryId;
        else {
            if (!(o && 0 < o.length)) {
                services.Notification.queue([services.Localization.localize("notification.store.failedToLoadCategories"), UINotificationType.NEGATIVE]);
                var n = this.getNavigationController();
                return void (n && n.popViewController())
            }
            this.startingCategory = o[0].categoryId
        }
        r.prototype.setupCategories.call(this)
    }
    ,
    UTStoreItemViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.eRevealStoryBundle, UTStoreBundleDetailsView.Event.VIEW_STORY),
        e.addTarget(this, this.eRevealContentsBundle, UTStoreBundleDetailsView.Event.VIEW_REVEAL),
        e.addTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_COINS),
        e.addTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_POINTS)
    }
    ,
    UTStoreItemViewController.prototype.viewWillDisappear = function() {
        r.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.eRevealStoryBundle, UTStoreBundleDetailsView.Event.VIEW_STORY),
        e.removeTarget(this, this.eRevealContentsBundle, UTStoreBundleDetailsView.Event.VIEW_REVEAL),
        e.removeTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_COINS),
        e.removeTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_POINTS)
    }
    ,
    UTStoreItemViewController.prototype.eRevealStoryBundle = function(e, t, i) {
        var o, n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId);
        if (n instanceof UTStoreBundleEntity) {
            var r = new UTStoreBundleDetailsModalViewController(n);
            r.init(),
            gPopupClickShield.setActivePopup(r)
        }
    }
    ,
    UTStoreItemViewController.prototype.eRevealContentsBundle = function(e, t, i) {
        var o, n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId);
        if (n instanceof UTStoreBundleEntity) {
            var r = new UTStoreBundleRevealModalListViewController(n);
            r.init(),
            gPopupClickShield.setActivePopup(r)
        }
    }
    ,
    UTStoreItemViewController
}(UTStoreViewController))
  , UTStoreMTXViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(n) {
    function UTStoreMTXViewController() {
        return n.call(this) || this
    }
    return __extends(UTStoreMTXViewController, n),
    UTStoreMTXViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStoreMTXViewController.prototype._getTelemetryId = function() {
        return "Hub - Store - FIFA Points"
    }
    ,
    UTStoreMTXViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        services.Store.isMobileMTXEnabled() || this.disablePointsPurchasing(),
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, "MTX Store"),
        getDefaultDispatcher().addObserver(AppNotification.APP_RESUME, this, this.nAppResumed),
        getDefaultDispatcher().addObserver(AppNotification.MTX_PURCHASE_NOTIF, this, this.nMTXNotif),
        e.setDisclaimerText(services.Localization.localize("store.mtx.disclaimer")),
        e.addTarget(this, this.eStartNimbleTransaction, UTNimbleMTXDetailsView.START_TRANSACTION),
        this.decorateLinks(e.getRootElement()),
        n.prototype.viewDidAppear.call(this)
    }
    ,
    UTStoreMTXViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.mtx")
    }
    ,
    UTStoreMTXViewController.prototype.setupCategories = function() {
        this.startingCategory = PurchaseDisplayGroup.FIFAPOINTS,
        n.prototype.setupCategories.call(this)
    }
    ,
    UTStoreMTXViewController.prototype.viewWillDisappear = function() {
        n.prototype.viewWillDisappear.call(this),
        getDefaultDispatcher().removeObserver(AppNotification.APP_RESUME, this),
        getDefaultDispatcher().removeObserver(AppNotification.MTX_CATALOG_REFRESH, this),
        getDefaultDispatcher().removeObserver(AppNotification.MTX_PURCHASE_NOTIF, this);
        var e = this.getView();
        e.removeTarget(this, this.eStartNimbleTransaction, UTNimbleMTXDetailsView.START_TRANSACTION),
        this.stripLinks(e.getRootElement())
    }
    ,
    UTStoreMTXViewController.prototype.disablePointsPurchasing = function() {
        var e;
        services.MTX.disableNimbleMTX(),
        null === (e = this.getNavigationController()) || void 0 === e || e.popViewController()
    }
    ,
    UTStoreMTXViewController.prototype.nAppResumed = function(e, t, i) {
        var o = this;
        n.prototype.nAppResumed.call(this, e, t, i);
        services.Store.isMobileMTXEnabled() && (getDefaultDispatcher().addObserver(AppNotification.MTX_CATALOG_REFRESH, this, this.nMTXCatalogRefresh),
        window.plugins.cordovaNimble.setupMTX(function() {
            o.startingCategory = o.getView().getStoreCategory()
        }
        .bind(this), function() {
            o.disablePointsPurchasing()
        }
        .bind(this)))
    }
    ,
    UTStoreMTXViewController.prototype.eStartNimbleTransaction = function(e, t, r) {
        var a = this;
        if (!this.isOpeningPack && !this.isLoadingPacks) {
            if (!services.Store.isMobileMTXEnabled())
                return services.Notification.queue([services.Localization.localize("mtx.error.disabled"), UINotificationType.NEGATIVE]),
                void this.disablePointsPurchasing();
            function ieb(e, t) {
                e.unobserve(a),
                t.success || (a.isOpeningPack = !1,
                services.Notification.queue([services.Localization.localize("mtx.error.nocharge"), UINotificationType.NEGATIVE]))
            }
            function jeb(e, t) {
                if (e.unobserve(a),
                t === UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
                    services.PIN.sendData(PINEventType.MILESTONE, {
                        mode: PIN_MILESTONE_EVT_MODE,
                        moment: PINMileStoneEventMoment.IGNORE,
                        mstid: PINMilestoneEventId.POINT_LIMIT,
                        type: PINMilestoneEventType.PLAY_TIME
                    }),
                    services.MTX.beginTransaction(r.nimbleMTXsku).observe(a, ieb),
                    services.PlayerHealth.storeLimitIgnoredTimestamp(PlayerHealthStatId.POINTS_PURCHASED);
                else if (t === UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED) {
                    var i = a.getNavigationController();
                    if (i) {
                        var o = new UTPlayerHealthViewController;
                        o.init(),
                        i.pushViewController(o, !0)
                    }
                    a.isOpeningPack = !1
                } else
                    a.isOpeningPack = !1
            }
            function keb(e, t) {
                if (e.unobserve(a),
                t.success && t.data && t.data.playerHealth) {
                    var i = t.data.playerHealth
                      , o = i.getStatById(PlayerHealthStatId.POINTS_PURCHASED);
                    if (i.enabled && o && o.isLimitReached()) {
                        services.PIN.sendData(PINEventType.MILESTONE, {
                            mode: PIN_MILESTONE_EVT_MODE,
                            moment: PINMileStoneEventMoment.COMPLETE,
                            mstid: PINMilestoneEventId.POINT_LIMIT,
                            type: PINMilestoneEventType.PLAY_TIME
                        });
                        var n = new UTPlayerHealthLimitPopupViewController;
                        n.init(),
                        n.getView().setContentByType(o.id, o.limit),
                        n.onExit.observe(a, jeb),
                        gPopupClickShield.setActivePopup(n)
                    } else
                        services.MTX.beginTransaction(r.nimbleMTXsku).observe(a, ieb)
                } else
                    services.MTX.beginTransaction(r.nimbleMTXsku).observe(a, ieb)
            }
            var i = function(e, t) {
                e.unobserve(a),
                t.success ? services.MTX.hasUnverifiedTransactions() ? services.MTX.verifyStoredTransactions().observe(a, i) : services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.POINTS_PURCHASED) ? services.PlayerHealth.readPlayerHealth().observe(a, keb) : services.MTX.beginTransaction(r.nimbleMTXsku).observe(a, ieb) : (a.isOpeningPack = !1,
                services.Notification.queue([services.Localization.localize("mtx.error.nocharge"), UINotificationType.NEGATIVE]),
                a.disablePointsPurchasing())
            };
            this.isOpeningPack = !0,
            services.MTX.hasUnverifiedTransactions() ? services.MTX.verifyStoredTransactions().observe(this, i) : services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.POINTS_PURCHASED) ? services.PlayerHealth.readPlayerHealth().observe(this, keb) : services.MTX.beginTransaction(r.nimbleMTXsku).observe(this, ieb)
        }
    }
    ,
    UTStoreMTXViewController.prototype.nMTXNotif = function(e, t, i) {
        var o, n;
        if (this.isOpeningPack = !1,
        i.success)
            services.Notification.queue([services.Localization.localize("mtx.notification.purchaseSuccess"), UINotificationType.POSITIVE]);
        else {
            var r = null === (o = i.error) || void 0 === o ? void 0 : o.code
              , a = null === (n = i.error) || void 0 === n ? void 0 : n.message
              , s = ""
              , l = "mtx.error.generic"
              , c = JSUtils.isEmpty(a) ? "UTAS Error: " + r : "MTX Error: " + r + ", " + a;
            switch (TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.MTX_ERROR, c),
            r) {
            case NimbleError.UNKNOWN:
            case NimbleError.NIMBLE_VERIFICATION_ERROR:
                s = "mtx.error.basic";
                break;
            case NimbleError.NIMBLE_BILLING_NOT_AVAILABLE:
            case NimbleError.NIMBLE_INVALID_SKU:
            case NimbleError.NIMBLE_EMPTY_SYNERGY_CATALOG:
            case NimbleError.NIMBLE_EMPTY_BILLING_CATALOG:
                s = "mtx.error.disabled",
                this.disablePointsPurchasing();
                break;
            case NimbleError.NIMBLE_ITEM_ALREADY_OWNED:
                l = "mtx.error.firstParty";
                break;
            case NimbleError.NIMBLE_PLATFORM_ERROR:
                s = "mtx.error.transactionCancelled";
                break;
            case NimbleError.NIMBLE_ITEM_UNAVAILABLE:
                s = "mtx.error.itemUnavailable";
                break;
            case NimbleError.NIMBLE_TRANSACTION_OUTSTANDING:
                s = "mtx.error.pendingTransaction";
                break;
            case NimbleError.NIMBLE_USER_CANCELED:
                return
            }
            JSUtils.isEmpty(s) ? this.createCustomErrorPopup("popup.error.genericMtxErrorTitle", l) : services.Notification.queue([services.Localization.localize(s), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTStoreMTXViewController.prototype.nMTXCatalogRefresh = function(e, t) {
        getDefaultDispatcher().removeObserver(AppNotification.MTX_CATALOG_REFRESH, this),
        this.getStorePacks()
    }
    ,
    UTStoreMTXViewController
}(UTStoreViewController))
  , UTStorePackViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(a) {
    function UTStorePackViewController(e) {
        void 0 === e && (e = -1);
        var t = a.call(this) || this;
        return t.initCategory = e,
        t
    }
    return __extends(UTStorePackViewController, a),
    UTStorePackViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStorePackViewController.prototype._getTelemetryId = function() {
        return "Hub - Store - Packs"
    }
    ,
    UTStorePackViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.packs")
    }
    ,
    UTStorePackViewController.prototype.viewDidAppear = function() {
        a.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.OPEN),
        e.addTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_COINS),
        e.addTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_POINTS),
        e.addTarget(this, this.eRevealPack, UTStoreXrayPackDetailsView.Event.REVEAL),
        e.addTarget(this, this.eRevealExpired, UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED),
        e.addTarget(this, this.eCheckPackOdds, UTStorePackDetailsView.Event.CHECK_ODDS)
    }
    ,
    UTStorePackViewController.prototype.viewWillDisappear = function() {
        a.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.OPEN),
        e.removeTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_COINS),
        e.removeTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_POINTS),
        e.removeTarget(this, this.eRevealPack, UTStoreXrayPackDetailsView.Event.REVEAL),
        e.removeTarget(this, this.eRevealExpired, UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED),
        e.removeTarget(this, this.eCheckPackOdds, UTStorePackDetailsView.Event.CHECK_ODDS)
    }
    ,
    UTStorePackViewController.prototype.updateViewCategories = function() {
        var e;
        if (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.categories) {
            var t = this.getView()
              , i = t.getStoreCategory();
            t.setCategoryTabs(this.viewmodel.hasMyPacks, this.viewmodel.hasPreviewedPacks(), this.viewmodel.getPackCategories()),
            this.setCategory(i)
        }
    }
    ,
    UTStorePackViewController.prototype.setupCategories = function() {
        var e, t, i;
        this.updateViewCategories(),
        -1 < this.initCategory ? (this.startingCategory = this.initCategory,
        this.initCategory = -1) : this.startingCategory !== PurchaseDisplayGroup.PREVIEWED || (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.hasPreviewedPacks()) || (this.startingCategory = PurchaseDisplayGroup.MYPACKS);
        var o = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getPackCategories();
        if (o && 0 < o.length) {
            var n = o[0];
            n && this.startingCategory === PurchaseDisplayGroup.MYPACKS && !(null === (i = this.viewmodel) || void 0 === i ? void 0 : i.hasMyPacks) && (this.startingCategory = n.categoryId)
        } else {
            services.Notification.queue([services.Localization.localize("notification.store.failedToLoadCategories"), UINotificationType.NEGATIVE]);
            var r = this.getNavigationController();
            r && r.popViewController()
        }
        a.prototype.setupCategories.call(this)
    }
    ,
    UTStorePackViewController.prototype.eRevealExpired = function(e, t, i) {
        if (this.viewmodel) {
            var o = this.getView().getStoreCategory();
            o !== PurchaseDisplayGroup.PREVIEWED || this.viewmodel.hasPreviewedPacks() ? o === PurchaseDisplayGroup.PREVIEWED && this.setCategory(o) : (this.createCustomErrorPopup("store.popup.error.packsExpiredWarningTitle", "store.popup.error.packsExpiredWarningMessage"),
            this.setupCategories())
        }
    }
    ,
    UTStorePackViewController.prototype.eCheckPackOdds = function(e, t, i) {
        var o;
        if (!this.isOpeningPack) {
            var n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId);
            if (n instanceof UTStoreItemPackEntity && (null == n ? void 0 : n.hasOdds())) {
                var r = new UTPackOddsViewController;
                r.initWithPack(n),
                r.modalDisplayStyle = "form",
                this.presentViewController(r, !0);
                var a = n.odds.map(function(e) {
                    var t = {};
                    return t[e.description] = e.odds,
                    t
                }, this);
                services.PIN.sendData(PINEventType.UI_INTERACTION, {
                    action: "selection",
                    custom: a,
                    mdur: 0,
                    object_id: n.id.toString(),
                    object_type: "store_pack",
                    pgid: "",
                    sdur: 0
                })
            } else
                services.Notification.queue([services.Localization.localize("packodds.error.noOdds"), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTStorePackViewController
}(UTStoreViewController))
  , UTWatchSectionListViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTWatchSectionListViewModel(e) {
        var t = i.call(this, e) || this;
        return t.setSection(UTWatchSectionListViewModel.SECTION.ACTIVE, function(e) {
            var t = e.getAuctionData();
            return t.isActiveTrade() && t.isBid()
        }, UTWatchSectionListViewModel.SECTION.ACTIVE),
        t.setSection(UTWatchSectionListViewModel.SECTION.WATCHED, function(e) {
            var t = e.getAuctionData();
            return t.isActiveTrade() && !t.isBid() && t.watched
        }, UTWatchSectionListViewModel.SECTION.WATCHED),
        t.setSection(UTWatchSectionListViewModel.SECTION.WON, function(e) {
            var t = e.getAuctionData();
            return e.getAuctionData().isWon() || !t.isValid()
        }, UTWatchSectionListViewModel.SECTION.WON),
        t.setSection(UTWatchSectionListViewModel.SECTION.EXPIRED, function(e) {
            var t = e.getAuctionData();
            return t.isExpired() || t.isClosedTrade() && !t.isWon()
        }, UTWatchSectionListViewModel.SECTION.EXPIRED),
        t.organizeItems(),
        t
    }
    return __extends(UTWatchSectionListViewModel, i),
    UTWatchSectionListViewModel.prototype.hasMovableWonItems = function() {
        return -1 < this.indexOf(this.findMovableWon)
    }
    ,
    UTWatchSectionListViewModel.prototype.getMovableWonItems = function() {
        return this.values().filter(this.findMovableWon)
    }
    ,
    UTWatchSectionListViewModel.prototype.hasExpiredAuctions = function() {
        return -1 < this.indexOf(this.findExpired)
    }
    ,
    UTWatchSectionListViewModel.prototype.getExpiredAuctions = function() {
        return this.values().filter(this.findExpired)
    }
    ,
    UTWatchSectionListViewModel.prototype.findMovableWon = function(e) {
        return e.isMovable() && e.getAuctionData().isWon()
    }
    ,
    UTWatchSectionListViewModel.prototype.findExpired = function(e) {
        var t = e.getAuctionData();
        return t.isExpired() || t.isClosedTrade() && !t.isWon()
    }
    ,
    UTWatchSectionListViewModel.SECTION = {
        ACTIVE: 0,
        WATCHED: 1,
        WON: 2,
        EXPIRED: 3
    },
    UTWatchSectionListViewModel
}(UTItemSectionListViewModel))
  , UTWatchListView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTWatchListView() {
        var e = t.call(this) || this;
        return e.sections = [],
        e.emptyListView = null,
        e
    }
    return __extends(UTWatchListView, t),
    UTWatchListView.prototype.dealloc = function() {
        var e;
        JSUtils.isValid(this.emptyListView) && (null === (e = this.emptyListView) || void 0 === e || e.dealloc(),
        this.emptyListView = null),
        this.clearSections(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTWatchListView.prototype.clearSections = function() {
        this.sections.forEach(function(e) {
            return e.dealloc()
        }),
        this.sections = []
    }
    ,
    UTWatchListView.prototype.renderSection = function(e, t, i) {
        var o = this.sections[t];
        o ? o.clearList() : ((o = new UTSectionedItemListView).init(),
        this.sections[t] = o),
        o.addItems(e, i),
        o.render();
        var n = this.getRootElement();
        return DOMKit.empty(n),
        this.sections.forEach(function(e) {
            return n.appendChild(e.getRootElement())
        }),
        o
    }
    ,
    UTWatchListView.prototype.getSection = function(e) {
        return this.sections[e] || null
    }
    ,
    UTWatchListView.prototype.renderEmptyView = function(e, t, i) {
        this.clearSections(),
        this.emptyListView = new UTListNoResultsView,
        this.emptyListView.init(),
        this.emptyListView.setHeading(e),
        i && this.emptyListView.setupButton(t, i),
        this.getRootElement().appendChild(this.emptyListView.getRootElement())
    }
    ,
    UTWatchListView.prototype.onTimedUpdate = function() {
        this.sections.forEach(function(e) {
            return e.onTimedUpdate()
        })
    }
    ,
    UTWatchListView.prototype.selectListRow = function(t) {
        this.sections.forEach(function(e) {
            return e.selectRowByItemId(t)
        })
    }
    ,
    UTWatchListView.prototype.removeItemsById = function(t) {
        this.sections.forEach(function(e) {
            return e.removeItemsById(t)
        })
    }
    ,
    UTWatchListView
}(EAView));
UTWatchListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-watch-list-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWatchListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTWatchListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWatchListViewController = function(o) {
    function UTWatchListViewController() {
        var e = o.call(this) || this;
        return e.onDataChange = new EAObservable,
        e.onItemSelected = new EAObservable,
        e.viewmodel = null,
        e
    }
    return __extends(UTWatchListViewController, o),
    UTWatchListViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this.viewmodel = new UTWatchSectionListViewModel([]),
        this.viewmodel.dataUpdated.observe(this, this._eViewmodelDataUpdated),
        TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfer Targets"))
    }
    ,
    UTWatchListViewController.prototype.dealloc = function() {
        var e, t, i;
        null === (e = this.viewmodel) || void 0 === e || e.stopAuctionUpdates(),
        null === (t = this.viewmodel) || void 0 === t || t.dataUpdated.unobserve(this),
        this.onDataChange.dealloc(),
        this.onItemSelected.dealloc(),
        o.prototype.dealloc.call(this),
        null === (i = this.viewmodel) || void 0 === i || i.dealloc()
    }
    ,
    UTWatchListViewController.prototype._getViewInstanceFromData = function() {
        return new UTWatchListView
    }
    ,
    UTWatchListViewController.prototype._getTelemetryId = function() {
        return "Transfer Targets - List View"
    }
    ,
    UTWatchListViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.watchlist")
    }
    ,
    UTWatchListViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.ITEM_UNWATCH, this, this._nItemUnwatched),
        e.addObserver(AppNotification.AUCTION_CLOSE, this, this._nAuctionClosed),
        e.addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nInfoStateChanged),
        this._requestItems()
    }
    ,
    UTWatchListViewController.prototype.viewWillDisappear = function() {
        o.prototype.viewWillDisappear.call(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.ITEM_UNWATCH, this),
        e.removeObserver(AppNotification.AUCTION_CLOSE, this),
        e.removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
        this.viewmodel && this.viewmodel.stopAuctionUpdates()
    }
    ,
    UTWatchListViewController.prototype.getIterator = function() {
        return this.viewmodel
    }
    ,
    UTWatchListViewController.prototype._requestItems = function() {
        var e, _ = this;
        null === (e = this.viewmodel) || void 0 === e || e.stopAuctionUpdates(),
        this.getView().setInteractionState(!1),
        services.Item.requestWatchedItems().observe(this, function(e, t) {
            var i, o, n, r, a, s, l, c, d, u;
            if (e.unobserve(_),
            !(t.success && JSUtils.isObject(t.response) && _.viewmodel))
                return services.Notification.queue([services.Localization.localize("watchlist.loaderror"), UINotificationType.NEGATIVE]),
                void (NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (c = _.getNavigationController()) || void 0 === c || c.popViewController());
            var p = _.viewmodel.getIndex();
            null === (i = _.viewmodel) || void 0 === i || i.resetCollection([]),
            null === (o = _.viewmodel) || void 0 === o || o.addArray(null !== (n = t.response.items) && void 0 !== n ? n : []),
            null === (r = _.viewmodel) || void 0 === r || r.setIndex(Math.min(p, _.viewmodel.getLastIndex())),
            _.onDataChange.notify({
                items: null === (a = _.viewmodel) || void 0 === a ? void 0 : a.values()
            }),
            _._renderView();
            var h = null === (l = null === (s = _.viewmodel) || void 0 === s ? void 0 : s.current()) || void 0 === l ? void 0 : l.id;
            h && !isPhone() && _.getView().selectListRow(h),
            _.getView().setInteractionState(!0),
            (null === (d = _.viewmodel) || void 0 === d ? void 0 : d.hasExpiredAuctions()) && services.User.requestCurrencies(),
            null === (u = _.viewmodel) || void 0 === u || u.startAuctionUpdates()
        })
    }
    ,
    UTWatchListViewController.prototype.removeItemsById = function(e) {
        var t;
        if (this.viewmodel && 0 < this.viewmodel.length) {
            var i = this.getView();
            i.removeItemsById(e);
            var o = null === (t = this.viewmodel.current()) || void 0 === t ? void 0 : t.id;
            o && i.selectListRow(o),
            this._updateSectionHeaders()
        } else
            this._renderView(),
            this.onDataChange.notify({
                items: []
            })
    }
    ,
    UTWatchListViewController.prototype._updateSectionHeaders = function() {
        var e, t = this, i = services.Localization, o = this.getView(), n = o.getSection(UTWatchSectionListViewModel.SECTION.WON), r = o.getSection(UTWatchSectionListViewModel.SECTION.EXPIRED);
        n && n.setActionHeader(i.localize("watchlist.dock.categories.won"), i.localize("infopanel.label.alltoclub"), this.viewmodel && 0 < (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.getMovableWonItems().length) ? function() {
            return t._onSendToClub(t.getView())
        }
        : void 0),
        r && r.setActionHeader(i.localize("watchlist.dock.categories.expired"), i.localize("button.label.clearexpired"), this.viewmodel && 0 < this.viewmodel.getSectionItems(UTWatchSectionListViewModel.SECTION.EXPIRED).length ? function() {
            return t._onUnwatchExpired(t.getView())
        }
        : void 0)
    }
    ,
    UTWatchListViewController.prototype._renderView = function() {
        function vhb(t) {
            var e, i, o = null === (e = l.viewmodel) || void 0 === e ? void 0 : e.indexOf(function(e) {
                return e.id === t.id
            });
            if (null != o && -1 != o && (null === (i = l.viewmodel) || void 0 === i || i.setIndex(o)),
            isPhone()) {
                var n = t.getAuctionData();
                if (!services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && (n.isActiveTrade() || n.isClosedTrade()))
                    return void utils.PopupManager.showAlert(utils.PopupManager.Alerts.TRADING_DISABLED);
                var r = l.getNavigationController();
                if (r && l.viewmodel) {
                    var a = new UTItemDetailsNavigationController;
                    a.initWithIterator(l.viewmodel),
                    r.pushViewController(a, !0)
                }
            } else
                c.selectListRow(Number(t.id)),
                l.onItemSelected.notify(o)
        }
        var e, t, i, o, n, r, a, s, l = this, c = this.getView();
        c.clearSections();
        var d = services.Localization
          , u = null !== (t = null === (e = this.viewmodel) || void 0 === e ? void 0 : e.getSectionItems(UTWatchSectionListViewModel.SECTION.ACTIVE)) && void 0 !== t ? t : []
          , p = c.renderSection(u, UTWatchSectionListViewModel.SECTION.ACTIVE, function(e) {
            return vhb(e)
        });
        p.setActionHeader(d.localize("watchlist.dock.categories.active"), ""),
        p.setEmptyMessage(d.localize("watchlist.availabletransfers.empty.header"), d.localize("watchlist.availabletransfers.empty.body"));
        var h = null !== (o = null === (i = this.viewmodel) || void 0 === i ? void 0 : i.getSectionItems(UTWatchSectionListViewModel.SECTION.WATCHED)) && void 0 !== o ? o : []
          , _ = c.renderSection(h, UTWatchSectionListViewModel.SECTION.WATCHED, function(e) {
            return vhb(e)
        });
        _.setActionHeader(d.localize("watchlist.dock.categories.watched"), ""),
        _.setEmptyMessage(d.localize("watchlist.watched.empty.header"), d.localize("watchlist.watched.empty.body"));
        var m = null !== (r = null === (n = this.viewmodel) || void 0 === n ? void 0 : n.getSectionItems(UTWatchSectionListViewModel.SECTION.WON)) && void 0 !== r ? r : [];
        c.renderSection(m, UTWatchSectionListViewModel.SECTION.WON, function(e) {
            return vhb(e)
        }).setEmptyMessage(d.localize("watchlist.won.empty.header"), d.localize("watchlist.won.empty.body"));
        var T = null !== (s = null === (a = this.viewmodel) || void 0 === a ? void 0 : a.getSectionItems(UTWatchSectionListViewModel.SECTION.EXPIRED)) && void 0 !== s ? s : [];
        c.renderSection(T, UTWatchSectionListViewModel.SECTION.EXPIRED, function(e) {
            return vhb(e)
        }).setEmptyMessage(d.localize("watchlist.expired.empty.header"), d.localize("watchlist.expired.empty.body")),
        this._updateSectionHeaders()
    }
    ,
    UTWatchListViewController.prototype._onSendToClub = function(e) {
        var t, i;
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Transfer Targets - Send All To Club");
        var o = null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getMovableWonItems()) && void 0 !== i ? i : [];
        0 < o.length && (this.getView().setInteractionState(!1),
        services.Item.move(o, ItemPile.CLUB).observe(this, this._onMoveToClubComplete))
    }
    ,
    UTWatchListViewController.prototype._onUnwatchExpired = function(e) {
        var t, i;
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Transfer Targets - Clear Expired");
        var o = null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getExpiredAuctions()) && void 0 !== i ? i : [];
        0 < o.length && (this.getView().setInteractionState(!1),
        services.Item.untarget(o).observe(this, this._onUnwatchExpiredComplete))
    }
    ,
    UTWatchListViewController.prototype._onUnwatchExpiredComplete = function(e, t) {
        var i;
        e.unobserve(this),
        t.success || null === (i = this.getNavigationController()) || void 0 === i || i.popViewController()
    }
    ,
    UTWatchListViewController.prototype._onMoveToClubComplete = function(e, t) {
        var i, o, n;
        e.unobserve(this);
        var r = services.Localization;
        if (t.success) {
            var a = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.itemIds.length) && void 0 !== o ? o : 0
              , s = 1 < a ? r.localize("notification.item.allToClub", [a.toString()]) : r.localize("notification.item.oneToClub");
            this._requestItems(),
            services.Notification.queue([s, UINotificationType.NEUTRAL])
        } else
            services.Notification.queue([r.localize("notification.item.moveFailed"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.handleStatus(t.status),
            null === (n = this.getNavigationController()) || void 0 === n || n.popViewController()
    }
    ,
    UTWatchListViewController.prototype._nAuctionClosed = function(e, t, i) {
        this._requestItems()
    }
    ,
    UTWatchListViewController.prototype._nItemUnwatched = function(e, t, i) {
        this._requestItems()
    }
    ,
    UTWatchListViewController.prototype._eViewmodelDataUpdated = function(e) {
        this.getView().onTimedUpdate()
    }
    ,
    UTWatchListViewController.prototype._nInfoStateChanged = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Transfer Targets")
    }
    ,
    UTWatchListViewController
}(EAViewController);
services.URL.registerDeepLinkID(DeepLinkSection.WATCH_LIST, function(e) {
    var t = getAppMain().getRootViewController();
    if (t.setGameViewTab(UTGameTabBarController.TabTag.TRANSFERS),
    !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET)) {
        var i = t.getPresentedViewController();
        if (i instanceof UTTabBarController) {
            var o = i.getCurrentViewController();
            if (o instanceof UTNavigationController) {
                var n = isPhone() ? new UTWatchListViewController : new UTWatchListSplitViewController;
                n.init(),
                o.pushViewController(n)
            }
        }
    }
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWatchListSplitViewController = function(i) {
    function UTWatchListSplitViewController() {
        var e = i.call(this) || this;
        return e._listController = new UTWatchListViewController,
        e._itemDetailController = new UTItemDetailsNavigationController,
        e
    }
    return __extends(UTWatchListSplitViewController, i),
    UTWatchListSplitViewController.prototype.init = function() {
        if (!this.initialized) {
            i.prototype.init.call(this),
            this._listController.init(),
            this._listController.onDataChange.observe(this, this.eListDataChanged),
            this._listController.onItemSelected.observe(this, this.eItemSelected);
            var e = this._listController.getIterator();
            e && this._itemDetailController.initWithIterator(e),
            this._itemDetailController.enableSwiping(!1),
            this.addChildViewController(this._listController),
            this.addChildViewController(this._itemDetailController);
            var t = getDefaultDispatcher();
            t.addObserver(AppNotification.ITEM_ACTIVATE, this, this.nItemActivated),
            t.addObserver(AppNotification.ITEM_DISCARD, this, this.nItemDiscarded),
            t.addObserver(AppNotification.ITEM_LIST, this, this.nItemListed),
            t.addObserver(AppNotification.ITEM_MOVE, this, this.nItemMoved)
        }
    }
    ,
    UTWatchListSplitViewController.prototype.dealloc = function() {
        this._itemDetailController.dealloc(),
        this._listController.dealloc();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.ITEM_ACTIVATE, this),
        e.removeObserver(AppNotification.ITEM_DISCARD, this),
        e.removeObserver(AppNotification.ITEM_LIST, this),
        e.removeObserver(AppNotification.ITEM_MOVE, this),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWatchListSplitViewController.prototype.getNavigationTitle = function() {
        return this._listController.getNavigationTitle()
    }
    ,
    UTWatchListSplitViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.setLeftController(this._listController),
        this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)
    }
    ,
    UTWatchListSplitViewController.prototype.eItemSelected = function(e, t) {
        this._itemDetailController.setIndex(t)
    }
    ,
    UTWatchListSplitViewController.prototype.eListDataChanged = function(e, t) {
        if (t.items)
            if (0 < t.items.length) {
                this.setRightController(this._itemDetailController);
                var i = this._listController.getIterator();
                i && this._itemDetailController.setIndex(i.getIndex())
            } else
                this.removeRightController()
    }
    ,
    UTWatchListSplitViewController.prototype.nItemActivated = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController.prototype.nItemListed = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController.prototype.nItemDiscarded = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController.prototype.nItemMoved = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController
}(UTSplitViewController)
  , UTExternalLinkTileView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTExternalLinkTileView() {
        return e.call(this) || this
    }
    return __extends(UTExternalLinkTileView, e),
    UTExternalLinkTileView
}(UTTileView));
UTExternalLinkTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-external-link"),
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t);
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("ut-tile-header"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("ut-tile-content"),
        e.appendChild(this.__tileContent);
        var o = document.createElement("div");
        o.classList.add("ut-tile-image"),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTExternalLinkTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__tileContent = null
}
,
UTExternalLinkTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTransfersHubView = function(t) {
    function UTTransfersHubView() {
        return t.call(this) || this
    }
    return __extends(UTTransfersHubView, t),
    UTTransfersHubView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._extLinkTile.init(),
        this._extLinkTile.hide(),
        this._transferMarketTile.init(),
        this._transferMarketTile.setTitle(e.localize("navbar.label.search")),
        this._transferListTile.init(),
        this._transferListTile.setTitle(e.localize("panel.label.transferlist")),
        this._transferListTile.setTotalTransferLabel(e.localize("dock.label.items")),
        this._transferListTile.setTotalTransferCount(0),
        this._transferListTile.setActiveTransferLabel(e.localize("dock.label.selling")),
        this._transferListTile.setActiveTransferCount(0),
        this._transferListTile.setFinishedTransferLabel(e.localize("tradepile.dock.categories.sold")),
        this._transferListTile.setFinishedTransferCount(0),
        this._transferTargetsTile.init(),
        this._transferTargetsTile.setTitle(e.localize("panel.label.transfertargets")),
        this._transferTargetsTile.setTotalTransferLabel(e.localize("dock.label.items")),
        this._transferTargetsTile.setTotalTransferCount(0),
        this._transferTargetsTile.setActiveTransferLabel(e.localize("dock.label.winning")),
        this._transferTargetsTile.setActiveTransferCount(0),
        this._transferTargetsTile.setFinishedTransferLabel(e.localize("dock.label.outbid")),
        this._transferTargetsTile.setFinishedTransferCount(0)
    }
    ,
    UTTransfersHubView.prototype.getExtLinkTileContent = function() {
        return this._extLinkTile.getTileContent()
    }
    ,
    UTTransfersHubView.prototype.getTransferMarketTile = function() {
        return this._transferMarketTile
    }
    ,
    UTTransfersHubView.prototype.getTransferListTile = function() {
        return this._transferListTile
    }
    ,
    UTTransfersHubView.prototype.getTransferTargetsTile = function() {
        return this._transferTargetsTile
    }
    ,
    UTTransfersHubView.prototype.setTradeAccessState = function(e, t) {
        var i = services.Localization;
        if (e === TradeAccessLevel.ALLOWED)
            return this._transferTargetsTile.setDimmed(!1),
            this._transferTargetsTile.setInteractionState(!0),
            this._transferMarketTile.setDimmed(!1),
            this._transferMarketTile.setInteractionState(!0),
            void this._extLinkTile.hide();
        if (this.disableMarketTiles(),
        e === TradeAccessLevel.MAINTENANCE)
            this._transferTargetsTile.setInteractionState(!1),
            this._transferTargetsTile.setDimOverlayType(TileDimOverlayType.MAINTENANCE),
            this._transferMarketTile.setInteractionState(!1),
            this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersMaintenance")),
            this._transferMarketTile.setDimOverlayType(TileDimOverlayType.MAINTENANCE),
            this._extLinkTile.hide();
        else if (e === TradeAccessLevel.BANNED)
            this._transferMarketTile.setInteractionState(!1),
            this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersBlacklisted")),
            this._extLinkTile.hide();
        else if (e === TradeAccessLevel.UNAVAILABLE)
            this._transferMarketTile.setInteractionState(!1),
            this._transferMarketTile.setDimOverlayType(TileDimOverlayType.LOCKED),
            this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersUnavailable")),
            this._transferTargetsTile.setInteractionState(!1),
            this._transferTargetsTile.setDimOverlayType(TileDimOverlayType.LOCKED),
            this._extLinkTile.hide();
        else {
            var o = "";
            switch (t) {
            case GameSku.XBO:
            case GameSku.PREV_XBO:
                o = i.localize("platform.console.xboxOne");
                break;
            case GameSku.XBX:
            case GameSku.PREV_XBX:
                o = i.localize("platform.console.xboxX");
                break;
            case GameSku.PS4:
            case GameSku.PREV_PS4:
                o = i.localize("platform.console.ps4");
                break;
            case GameSku.PS5:
            case GameSku.PREV_PS5:
                o = i.localize("platform.console.ps5");
                break;
            case GameSku.SWI:
            case GameSku.PREV_SWI:
                o = i.localize("platform.console.switch");
                break;
            case GameSku.PC:
            case GameSku.PREV_PC:
            case GameSku.STEAM:
            case GameSku.PREV_STEAM:
                o = i.localize("platform.pc")
            }
            if (e === TradeAccessLevel.CONSOLE_ONLY)
                this._transferMarketTile.setInteractionState(!1),
                this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersGreylisted", [o]));
            else {
                var n = i.localize("tile.disabled.learnmore", [o])
                  , r = new DOMParser
                  , a = document.createElement("p");
                a.innerHTML = r.parseFromString(n, "text/html").body.innerHTML,
                this._extLinkTile.setContent(a),
                this._extLinkTile.show(),
                this._transferTargetsTile.setDimOverlayType(TileDimOverlayType.LOCKED),
                this._transferMarketTile.setDimOverlayType(TileDimOverlayType.LOCKED),
                this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersUnlockAccess", [o]))
            }
        }
    }
    ,
    UTTransfersHubView.prototype.disableMarket = function() {
        this.disableMarketTiles(),
        this._transferMarketTile.setDimOverlayText(services.Localization.localize("tile.disabled.marketdisabled"))
    }
    ,
    UTTransfersHubView.prototype.disableMarketForPlatformSplit = function() {
        this.disableMarketTile(),
        this._transferMarketTile.setDimOverlayText(services.Localization.localize("tile.disabled.marketdisabledforplatformsplit"))
    }
    ,
    UTTransfersHubView.prototype.disableMarketTiles = function() {
        this._transferMarketTile.setInteractionState(!1),
        this._transferMarketTile.setDimmed(!0),
        this._transferTargetsTile.setInteractionState(!1),
        this._transferTargetsTile.setDimmed(!0)
    }
    ,
    UTTransfersHubView.prototype.disableMarketTile = function() {
        this._transferMarketTile.setInteractionState(!1),
        this._transferMarketTile.setDimmed(!0)
    }
    ,
    UTTransfersHubView
}(EAView);
UTTransfersHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("TransfersHub");
        var t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._extLinkTile = new UTExternalLinkTileView,
        this._extLinkTile.getRootElement().classList.add("col-1-1"),
        t.appendChild(this._extLinkTile.getRootElement()),
        this._transferMarketTile = new UTTileView,
        this._transferMarketTile.getRootElement().classList.add("col-1-1"),
        this._transferMarketTile.getRootElement().classList.add("ut-tile-transfer-market"),
        t.appendChild(this._transferMarketTile.getRootElement()),
        this._transferListTile = new UTTransfersTileView,
        this._transferListTile.getRootElement().classList.add("col-1-2"),
        this._transferListTile.getRootElement().classList.add("ut-tile-transfer-list"),
        this._transferListTile.getRootElement().classList.add("ut-tile-transfers"),
        t.appendChild(this._transferListTile.getRootElement()),
        this._transferTargetsTile = new UTTransfersTileView,
        this._transferTargetsTile.getRootElement().classList.add("col-1-2"),
        this._transferTargetsTile.getRootElement().classList.add("ut-tile-transfer-targets"),
        this._transferTargetsTile.getRootElement().classList.add("ut-tile-transfers"),
        t.appendChild(this._transferTargetsTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTransfersHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._extLinkTile.destroy(),
    this._transferMarketTile.destroy(),
    this._transferListTile.destroy(),
    this._transferTargetsTile.destroy()
}
,
UTTransfersHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTransfersHubViewController = function(l) {
    function UTTransfersHubViewController() {
        return l.call(this) || this
    }
    return __extends(UTTransfersHubViewController, l),
    UTTransfersHubViewController.prototype.init = function() {
        this.initialized || l.prototype.init.call(this)
    }
    ,
    UTTransfersHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTTransfersHubView
    }
    ,
    UTTransfersHubViewController.prototype._getTelemetryId = function() {
        return "Hub - Transfers"
    }
    ,
    UTTransfersHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("nav.label.trading")
    }
    ,
    UTTransfersHubViewController.prototype.viewDidAppear = function() {
        l.prototype.viewDidAppear.call(this);
        var e = services.User.getUser();
        if (e) {
            var t = this.getView();
            t.getTransferMarketTile().addTarget(this, this.eTransferMarketTileSelected, EventType.TAP),
            t.getTransferListTile().addTarget(this, this.eTransferListTileSelected, EventType.TAP),
            t.getTransferTargetsTile().addTarget(this, this.eTransferTargetsTileSelected, EventType.TAP);
            var i = this.getNavigationController();
            i && i.setNavigationVisibility(!0, !0),
            this.requestTransferListData(),
            TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfers Hub");
            var o = e.getSelectedPersona();
            if (o) {
                var n = o.sku;
                if (n) {
                    t.setTradeAccessState(e.tradeAccess, n);
                    var r = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED)
                      , a = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.PLATFORM_SPLIT_FOR_TRANSFER_MARKET);
                    if (e.hasTradeAccess())
                        r && !a ? this.requestTransferTargetData() : (TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.MARKET_STATUS, "Disabled"),
                        a ? t.disableMarketForPlatformSplit() : t.disableMarket());
                    else {
                        var s = "No Access";
                        this.decorateLinks(t.getExtLinkTileContent()),
                        e.tradeAccess === TradeAccessLevel.BANNED ? s = "Denied" : e.tradeAccess === TradeAccessLevel.CONSOLE_ONLY ? s = "Greylisted" : e.tradeAccess === TradeAccessLevel.UNAVAILABLE ? s = "Unavailable" : e.tradeAccess === TradeAccessLevel.MAINTENANCE && (s = "Maintenance"),
                        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.MARKET_STATUS, s)
                    }
                }
            }
        }
    }
    ,
    UTTransfersHubViewController.prototype.viewWillDisappear = function() {
        l.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.getTransferMarketTile().removeTarget(this, this.eTransferMarketTileSelected, EventType.TAP),
        e.getTransferListTile().removeTarget(this, this.eTransferListTileSelected, EventType.TAP),
        e.getTransferTargetsTile().removeTarget(this, this.eTransferTargetsTileSelected, EventType.TAP);
        var t = services.User.getUser();
        if (t && !t.hasTradeAccess()) {
            var i = this.getView().getExtLinkTileContent();
            this.stripLinks(i)
        }
    }
    ,
    UTTransfersHubViewController.prototype.requestTransferListData = function() {
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Item.requestTransferItems().observe(this, this.onRequestTransferItemsComplete)
    }
    ,
    UTTransfersHubViewController.prototype.onRequestTransferItemsComplete = function(e, t) {
        var i = this.getView().getTransferListTile();
        if (i && t.success) {
            var o = JSUtils.isObject(t.response) ? t.response.items : []
              , n = new UTTransferSectionListViewModel(o)
              , r = o.length
              , a = services.Localization.localize(1 === r ? "dock.label.item" : "dock.label.items");
            i.setTotalTransferLabel(a),
            i.setTotalTransferCount(r),
            i.setActiveTransferCount(n.getActiveItems().length),
            i.setFinishedTransferCount(n.getSoldItems().length),
            i.setInteractionState(!0),
            i.setDimmed(!1)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : t.success || (services.Notification.queue([services.Localization.localize("tradepile.unavailable"), UINotificationType.NEGATIVE]),
            i.setInteractionState(!1),
            i.setDimmed(!0));
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }
    ,
    UTTransfersHubViewController.prototype.requestTransferTargetData = function() {
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Item.requestWatchedItems().observe(this, this.onRequestWatchedItemsComplete)
    }
    ,
    UTTransfersHubViewController.prototype.onRequestWatchedItemsComplete = function(e, t) {
        e.unobserve(this);
        var i = this.getView().getTransferTargetsTile();
        if (i && t.success && t.response && JSUtils.isObject(t.response)) {
            var o = t.response.items.length
              , n = 1 === o ? services.Localization.localize("dock.label.item") : services.Localization.localize("dock.label.items");
            i.setTotalTransferLabel(n),
            i.setTotalTransferCount(o);
            var r = t.response.items.reduce(function(e, t) {
                var i = t.getAuctionData();
                return i.isHighestBid() && i.isActiveTrade() && e++,
                e
            }, 0);
            i.setActiveTransferCount(r);
            var a = t.response.items.reduce(function(e, t) {
                return t.getAuctionData().isOutbid() && e++,
                e
            }, 0);
            i.setFinishedTransferCount(a)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }
    ,
    UTTransfersHubViewController.prototype.eTransferMarketTileSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = services.User.getUser();
            if (n) {
                var r = n.marketSearchCriteria
                  , a = new UTMarketSearchFiltersViewController;
                a.initWithSearchCriteria(r),
                o.pushViewController(a)
            }
        }
    }
    ,
    UTTransfersHubViewController.prototype.eTransferListTileSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = isPhone() ? new UTTransferListViewController : new UTTransferListSplitViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTTransfersHubViewController.prototype.eTransferTargetsTileSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = isPhone() ? new UTWatchListViewController : new UTWatchListSplitViewController;
            n.init(),
            o.pushViewController(n)
        }
    }
    ,
    UTTransfersHubViewController
}(EAViewController)
  , UTRootView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTRootView() {
        return e.call(this) || this
    }
    return __extends(UTRootView, e),
    UTRootView
}(EAView));
UTRootView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("main");
        e.classList.add("ut-root-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRootView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTRootView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRootViewController = function(t) {
    function UTRootViewController() {
        var e = t.call(this) || this;
        return e.gameflowControllers = [],
        e
    }
    return __extends(UTRootViewController, t),
    UTRootViewController.prototype._getViewInstanceFromData = function() {
        return new UTRootView
    }
    ,
    UTRootViewController.prototype._getPresentationControllerInstance = function(e) {
        return new UTRootPresentationController(e,this)
    }
    ,
    UTRootViewController.prototype.showLanguageSelectView = function() {
        if (this.getPresentedViewController()instanceof UTLanguageSelectViewController)
            return !1;
        var e = new UTLanguageSelectViewController;
        return e.init(),
        e.setLanguageSelectCallback(function() {
            return getAppMain().onLanguageLoaded()
        }),
        this.presentViewController(e, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showLicenseView = function() {
        if (this.getPresentedViewController()instanceof UTLicenseViewController)
            return !1;
        var e = new UTLicenseViewController;
        return e.init(),
        this.presentViewController(e, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showLoginView = function() {
        if (this.getPresentedViewController()instanceof UTLoginViewController)
            return !1;
        var e = new UTLoginViewController;
        return e.init(),
        this.presentViewController(e, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showOnboardingView = function(e, t) {
        var i = new OnboardingNavigationController;
        return t && i.setSquad(t),
        e ? i.initWithViewmodel(e) : i.init(),
        this.presentViewController(i, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showCaptchaView = function() {
        var e = new UTBootFlowNavigationController
          , t = new UTFunCaptchaViewController;
        return t.init(),
        e.initWithRootController(t),
        this.presentViewController(e, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showLoggedOnConsoleView = function() {
        var e = new UTBootFlowNavigationController
          , t = new UTLoggedOnConsoleViewController;
        return t.init(),
        e.initWithRootController(t),
        this.presentViewController(e, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showGettingStartedView = function(e) {
        var t = new UTBootFlowNavigationController
          , i = new UTGettingStartedViewController;
        return i.init(),
        i.setType(e),
        t.initWithRootController(i),
        this.presentViewController(t, !0),
        !0
    }
    ,
    UTRootViewController.prototype.showGameView = function() {
        if (this.getPresentedViewController()instanceof UTGameTabBarController)
            return this.setGameViewTab(UTGameTabBarController.TabTag.HOME),
            !1;
        var e = []
          , t = new UTGameTabBarController
          , i = new UTGameFlowNavigationController(null)
          , o = new UTGameFlowNavigationController(null)
          , n = new UTGameFlowNavigationController(null)
          , r = new UTGameFlowNavigationController(null)
          , a = new UTGameFlowNavigationController(null)
          , s = new UTTabBarItemView
          , l = new UTTabBarItemView
          , c = new UTTabBarItemView
          , d = new UTTabBarItemView
          , u = new UTTabBarItemView;
        if (i.initWithRootController(new UTHomeHubViewController),
        o.initWithRootController(new UTSquadsHubViewController),
        n.initWithRootController(new UTTransfersHubViewController),
        r.initWithRootController(new UTStoreHubViewController),
        a.initWithRootController(new UTClubHubViewController),
        s.init(),
        s.setTag(UTGameTabBarController.TabTag.HOME),
        s.setText(services.Localization.localize("navbar.label.home")),
        s.addClass("icon-home"),
        l.init(),
        l.setTag(UTGameTabBarController.TabTag.SQUADS),
        l.setText(services.Localization.localize("nav.label.squads")),
        l.addClass("icon-squad"),
        c.init(),
        c.setTag(UTGameTabBarController.TabTag.TRANSFERS),
        c.setText(services.Localization.localize("nav.label.trading")),
        c.addClass("icon-transfer"),
        d.init(),
        d.setTag(UTGameTabBarController.TabTag.STORE),
        d.setText(services.Localization.localize("navbar.label.store")),
        d.addClass("icon-store"),
        u.init(),
        u.setTag(UTGameTabBarController.TabTag.CLUB),
        u.setText(services.Localization.localize("nav.label.club")),
        u.addClass("icon-club"),
        i.tabBarItem = s,
        o.tabBarItem = l,
        n.tabBarItem = c,
        r.tabBarItem = d,
        a.tabBarItem = u,
        e = [i, o, n, r, a],
        !isPhone()) {
            var p = new UTGameFlowNavigationController(null)
              , h = new UTGameFlowNavigationController(null)
              , _ = new UTGameFlowNavigationController(null)
              , m = new UTGameFlowNavigationController(null);
            p.initWithRootController(new UTSBCHubViewController),
            h.initWithRootController(new UTCustomizeHubViewController),
            _.initWithRootController(new UTLeaderboardsHubViewController),
            m.initWithRootController(new UTAppSettingsViewController);
            var T = new UTTabBarItemView;
            T.init(),
            T.setTag(UTGameTabBarController.TabTag.SBC),
            T.setText(services.Localization.localize("nav.label.sbc")),
            T.addClass("icon-sbc");
            var g = new UTTabBarItemView;
            g.init(),
            g.setTag(UTGameTabBarController.TabTag.STADIUM),
            g.setText(services.Localization.localize("nav.label.customizeHub")),
            g.addClass("icon-stadium");
            var y = new UTTabBarItemView;
            y.init(),
            y.setTag(UTGameTabBarController.TabTag.LEADERBOARDS),
            y.setText(services.Localization.localize("nav.label.leaderboards")),
            y.addClass("icon-leaderboards");
            var v = new UTTabBarItemView;
            v.init(),
            v.setTag(UTGameTabBarController.TabTag.SETTINGS),
            v.setText(services.Localization.localize("button.settings")),
            v.addClass("icon-settings"),
            p.tabBarItem = T,
            h.tabBarItem = g,
            _.tabBarItem = y,
            m.tabBarItem = v,
            e = e.concat([p, h, _, m])
        }
        return this.gameflowControllers = e,
        t.initWithViewControllers(e),
        t.getView().addClass("game-navigation"),
        this.presentViewController(t, !0, function() {
            services.URL.hasDeepLinkURL() && services.URL.processDeepLinkURL()
        }),
        !0
    }
    ,
    UTRootViewController.prototype.setGameViewTab = function(e) {
        var t = this.getPresentedViewController();
        if (t instanceof UTGameTabBarController) {
            var i = t.getCurrentViewController();
            t.setSelectedIndexByTag(e),
            i instanceof UTGameFlowNavigationController && i.popToRootViewController()
        } else
            DebugUtils.Assert(!1, "Setting game view tab when the game view is not being presented.")
    }
    ,
    UTRootViewController.prototype.didDismiss = function(e) {
        t.prototype.didDismiss.call(this, e),
        e.dealloc(),
        e instanceof UTGameTabBarController && 0 < this.gameflowControllers.length && (this.gameflowControllers.forEach(function(e) {
            return e.dealloc()
        }),
        this.gameflowControllers = [])
    }
    ,
    UTRootViewController
}(EAViewController)
  , UTServerSettingsUpdateController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTServerSettingsUpdateController() {
        var e = t.call(this) || this;
        return e.observable = null,
        e.timeout = 0,
        e
    }
    return __extends(UTServerSettingsUpdateController, t),
    UTServerSettingsUpdateController.prototype.dealloc = function() {
        this.stopPolling(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTServerSettingsUpdateController.prototype.startPolling = function() {
        var t = this;
        this.observable || (0 < this.timeout && (window.clearTimeout(this.timeout),
        this.timeout = 0),
        this.observable = services.Configuration.requestSettingsData(),
        this.observable.observe(this, function(e) {
            e.unobserve(t),
            t.observable = null,
            t.timeout = window.setTimeout(t.startPolling.bind(t), getAppMain().getConfigRepository().getConfigNumber(EAConfigurationRepository.KEY_SETTINGS_REFRESH_INTERVAL))
        }))
    }
    ,
    UTServerSettingsUpdateController.prototype.stopPolling = function() {
        window.clearTimeout(this.timeout),
        this.timeout = 0,
        this.observable && (this.observable.unobserve(this),
        this.observable.dealloc())
    }
    ,
    UTServerSettingsUpdateController
}(EAObject))
  , UTMyStadiumController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTMyStadiumController() {
        var e = t.call(this) || this;
        return e.saveInterval = null,
        e.isDisplayingSaveStadiumPopup = !1,
        e
    }
    return __extends(UTMyStadiumController, t),
    UTMyStadiumController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.stopObservingSaveEvents()
    }
    ,
    UTMyStadiumController.prototype.startObservingSaveEvents = function() {
        getDefaultDispatcher().addObserver(AppNotification.STADIUM_SAVE_FAILED, this, this.eSaveStadiumPopup),
        getDefaultDispatcher().addObserver(AppNotification.STADIUM_SAVE_INTERVAL, this, this.startSaveIntervalCb)
    }
    ,
    UTMyStadiumController.prototype.stopObservingSaveEvents = function() {
        getDefaultDispatcher().removeObserver(AppNotification.STADIUM_SAVE_FAILED, this),
        getDefaultDispatcher().removeObserver(AppNotification.STADIUM_SAVE_INTERVAL, this)
    }
    ,
    UTMyStadiumController.prototype.startSaveIntervalCb = function(e, t, i) {
        this.startSaveInterval()
    }
    ,
    UTMyStadiumController.prototype.startSaveInterval = function() {
        if (!this.saveInterval) {
            var e = getAppMain().getConfigRepository().getConfigNumber(EAConfigurationRepository.KEY_STADIUM_SAVE_INTERVAL);
            this.saveInterval = new EAIntervalController((0 < e ? e : 15) * MS_PER_SECOND,this.triggerStadiumSave.bind(this)),
            this.saveInterval.start()
        }
    }
    ,
    UTMyStadiumController.prototype.stopSaveInterval = function() {
        this.saveInterval && (this.saveInterval.stop(),
        this.saveInterval = null)
    }
    ,
    UTMyStadiumController.prototype.triggerStadiumSave = function() {
        var e = services.Authentication.getUtasSession();
        hasConnection() && e.isAuthenticated() ? services.MyStadium.saveStadium() : services.Notification.queue([services.Localization.localize("notification.stadium.saveFailed"), UINotificationType.NEGATIVE]),
        this.stopSaveInterval()
    }
    ,
    UTMyStadiumController.prototype.eSaveStadiumPopup = function(e, t, i) {
        var o = this
          , n = services.Localization;
        if (!this.isDisplayingSaveStadiumPopup && hasConnection()) {
            services.Notification.queue([n.localize("notification.stadium.saveFailed"), UINotificationType.NEGATIVE]),
            this.isDisplayingSaveStadiumPopup = !0;
            var r = new EADialogViewController({
                dialogOptions: [{
                    labelEnum: enums.UIDialogOptions.CANCEL,
                    negativeActionFlag: !0
                }, {
                    labelEnum: enums.UIDialogOptions.RETRY
                }],
                message: n.localize("mystadium.savepopup.description"),
                title: n.localize("mystadium.savepopup.title"),
                type: EADialogView.Type.SAVE_FAILED
            });
            r.init(),
            r.onExit.observe(this, function(e, t) {
                e.unobserve(o),
                hasConnection() ? t === enums.UIDialogOptions.CANCEL ? (services.MyStadium.reset(),
                getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME)) : t === enums.UIDialogOptions.RETRY && services.MyStadium.saveStadium() : services.Notification.queue([n.localize("notification.stadium.logoutMessage"), UINotificationType.NEGATIVE]),
                o.isDisplayingSaveStadiumPopup = !1
            }),
            gPopupClickShield.setActivePopup(r)
        }
    }
    ,
    UTMyStadiumController
}(EAObject))
  , UTNotificationView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTNotificationView(e) {
        var t = i.call(this) || this;
        return t.message = e.message,
        t.type = e.type,
        t.displayTimeout = void 0,
        t.state = UTNotificationView.UIStates.HIDDEN,
        t
    }
    return __extends(UTNotificationView, i),
    UTNotificationView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0);
        var e = "";
        switch (this.type) {
        case UINotificationType.POSITIVE:
            e = "positive";
            break;
        case UINotificationType.NEUTRAL:
            e = "neutral";
            break;
        case UINotificationType.NEGATIVE:
            e = "negative"
        }
        this.addClass(e),
        this.__content.textContent = this.message
    }
    ,
    UTNotificationView.prototype.didAddToSuperview = function() {
        this.display()
    }
    ,
    UTNotificationView.prototype.display = function() {
        this.state === UTNotificationView.UIStates.HIDDEN && (this.state = UTNotificationView.UIStates.SHOWING,
        this.perform(enums.UIAnimation.FADE_IN, function() {
            this.state = UTNotificationView.UIStates.SHOWN
        }
        .bind(this)),
        this.displayTimeout = window.setTimeout(this.remove.bind(this), Math.max(60 * this.message.length, 1500)))
    }
    ,
    UTNotificationView.prototype.remove = function() {
        this.state !== UTNotificationView.UIStates.DISMISSING && (this.state = UTNotificationView.UIStates.DISMISSING,
        window.clearTimeout(this.displayTimeout),
        this.perform(enums.UIAnimation.FADE_OUT, function() {
            this.removeFromSuperview(),
            this.dealloc()
        }
        .bind(this)))
    }
    ,
    UTNotificationView.prototype._tapDetected = function(e) {
        this.state === UTNotificationView.UIStates.SHOWN && this.remove()
    }
    ,
    UTNotificationView.UIStates = Object.freeze({
        HIDDEN: 0,
        SHOWING: 1,
        SHOWN: 2,
        DISMISSING: 3
    }),
    UTNotificationView
}(EAView));
UTNotificationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("Notification"),
        this.__content = document.createElement("p"),
        e.appendChild(this.__content);
        var t = document.createElement("span");
        t.classList.add("icon_close"),
        t.classList.add("fut_icon"),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNotificationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__content = null
}
,
UTNotificationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNotificationLayerView = function(e) {
    function UTNotificationLayerView() {
        return e.call(this) || this
    }
    return __extends(UTNotificationLayerView, e),
    UTNotificationLayerView.prototype.displayNotification = function(e) {
        var t = new UTNotificationView(e);
        t.init(),
        this.addSubview(t, this.getRootElement()),
        this.layoutSubviews()
    }
    ,
    UTNotificationLayerView
}(EAView);
UTNotificationLayerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.setAttribute("id", "NotificationLayer"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNotificationLayerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTNotificationLayerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var ClickShieldType, UTNotificationLayerViewController = function(t) {
    function UTNotificationLayerViewController() {
        return t.call(this) || this
    }
    return __extends(UTNotificationLayerViewController, t),
    UTNotificationLayerViewController.prototype.init = function() {
        var i = this;
        t.prototype.init.call(this);
        services.Notification.display.observe(this, function(e, t) {
            i.getView().displayNotification(t)
        });
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.OBJECTIVE_COMPLETE, this, this.nObjectiveCompleted),
        e.addObserver(AppNotification.OBJECTIVE_GROUP_COMPLETE, this, this.nObjectiveGroupCompleted),
        e.addObserver(AppNotification.ITEM_REDEEM, this, this.nUnlockabledRedeemed)
    }
    ,
    UTNotificationLayerViewController.prototype.dealloc = function() {
        services.Notification.display.unobserve(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.OBJECTIVE_COMPLETE, this),
        e.removeObserver(AppNotification.OBJECTIVE_GROUP_COMPLETE, this),
        e.removeObserver(AppNotification.ITEM_REDEEM, this),
        t.prototype.dealloc.call(this)
    }
    ,
    UTNotificationLayerViewController.prototype._getViewInstanceFromData = function() {
        return new UTNotificationLayerView
    }
    ,
    UTNotificationLayerViewController.prototype.nObjectiveCompleted = function(e, t, i) {
        var o = services.Localization.localize("notification.objectives.completedObjective", [i.name]);
        this.getView().displayNotification(new UINotificationDTO(o,UINotificationType.POSITIVE))
    }
    ,
    UTNotificationLayerViewController.prototype.nObjectiveGroupCompleted = function(e, t, i) {
        var o = services.Localization.localize("notification.objectives.completedObjectiveGroup", [i.name]);
        this.getView().displayNotification(new UINotificationDTO(o,UINotificationType.POSITIVE))
    }
    ,
    UTNotificationLayerViewController.prototype.nUnlockabledRedeemed = function(e, t, i) {
        var o, n = services.Localization;
        i.isAcademyUnlockToken ? o = n.localize("notification.academy-unlock.added") : i.isCoins ? o = n.localize("notification.coins.added") : i.isPack ? o = n.localize("notification.pack.added") : i.isDraftToken ? o = n.localize("notification.drafttoken.added") : i.isPlayerPickItem ? o = n.localize("notification.draftitem.added") : i.isXpItem && (o = n.localize("notification.xpitem.added")),
        this.getView().displayNotification(new UINotificationDTO(o || "",UINotificationType.POSITIVE))
    }
    ,
    UTNotificationLayerViewController
}(EAViewController), PopupQueueViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function PopupQueueViewController() {
        var e = t.call(this) || this;
        return e.queue = [],
        e
    }
    return __extends(PopupQueueViewController, t),
    PopupQueueViewController.prototype.init = function() {
        t.prototype.init.call(this)
    }
    ,
    PopupQueueViewController.prototype.dealloc = function() {
        this.reset(),
        t.prototype.dealloc.call(this)
    }
    ,
    PopupQueueViewController.prototype._getViewInstanceFromData = function() {
        return new UTModalContainerView
    }
    ,
    PopupQueueViewController.prototype.reset = function() {
        this.queue.forEach(function(e) {
            return e.dealloc()
        }),
        this.queue = [],
        this.hideShield()
    }
    ,
    PopupQueueViewController.prototype.onRequestBack = function() {
        var e = this.queue[0];
        return !e || e.onBackButton()
    }
    ,
    PopupQueueViewController.prototype.setActivePopup = function(e, t) {
        var i = this.getView();
        i.removeClass([PopupQueueViewController.ModalType.FORM, PopupQueueViewController.ModalType.PAGE].join(" ")),
        i.addClass(t || "form-modal"),
        this.queue.push(e),
        e.onExit.observe(this, this.handlePopupExit),
        1 === this.queue.length && this.displayPopup(e)
    }
    ,
    PopupQueueViewController.prototype.closeActivePopup = function() {
        var e = this
          , t = this.queue.shift()
          , i = this.queue[0];
        t && t.dealloc(),
        i ? requestAnimationFrame(function() {
            return e.displayPopup(i)
        }) : this.hideShield()
    }
    ,
    PopupQueueViewController.prototype.displayPopup = function(e) {
        var t = this.getView()
          , i = e.getView();
        if (DebugUtils.Assert(JSUtils.isValid(t) && JSUtils.isValid(i), "View not found in PopupQueueViewController.displayPopup"),
        t && i) {
            e.initialized || e.init();
            var o = i.getRootElement();
            e.viewWillAppear(),
            this.showShield(),
            t.getRootElement().appendChild(o),
            e.modalDisplayDimensions.width && (o.style.width = e.modalDisplayDimensions.width),
            e.modalDisplayDimensions.height && (o.style.height = e.modalDisplayDimensions.height),
            e.modalDisplayDimensions.maxHeight && (o.style.maxHeight = e.modalDisplayDimensions.maxHeight),
            e.modalDisplayDimensions.maxWidth && (o.style.maxWidth = e.modalDisplayDimensions.maxWidth),
            e.modalDisplayDimensions.minHeight && (o.style.minHeight = e.modalDisplayDimensions.minHeight),
            e.modalDisplayDimensions.minWidth && (o.style.minWidth = e.modalDisplayDimensions.minWidth),
            e.viewDidAppear()
        }
    }
    ,
    PopupQueueViewController.prototype.showShield = function() {
        var e = getAppMain().getRootViewController().getView()
          , t = this.getView();
        DebugUtils.Assert(JSUtils.isValid(t) && JSUtils.isValid(e), "View not found in PopupQueueViewController.showShield"),
        t && e && DOMKit.insertAfter(t.getRootElement(), e.getRootElement())
    }
    ,
    PopupQueueViewController.prototype.hideShield = function() {
        var e = this.getView();
        DebugUtils.Assert(JSUtils.isValid(e), "View not found in PopupQueueViewController.hideShield"),
        e && DOMKit.remove(e.getRootElement())
    }
    ,
    PopupQueueViewController.prototype.handlePopupExit = function(e) {
        this.closeActivePopup()
    }
    ,
    PopupQueueViewController.ModalType = {
        FORM: "form-modal",
        PAGE: "page-modal"
    },
    PopupQueueViewController
}(EAViewController)), gPopupClickShield = new PopupQueueViewController;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e[e.FULL = 0] = "FULL",
    e[e.INTERACTION = 1] = "INTERACTION",
    e[e.LOADING = 2] = "LOADING"
}(ClickShieldType = ClickShieldType || {});
var EAClickShieldView = function(t) {
    function EAClickShieldView() {
        var e = t.call(this) || this;
        return e.shieldCounter = {
            FULL: 0,
            LOADING: 0,
            INTERACTION: 0
        },
        e
    }
    return __extends(EAClickShieldView, t),
    EAClickShieldView.prototype.init = function() {
        t.prototype.init.call(this),
        this.update(),
        this._startHandlingEvents(this.getRootElement())
    }
    ,
    EAClickShieldView.prototype.dealloc = function() {
        this._stopHandlingEvents(),
        this.reset(),
        t.prototype.dealloc.call(this)
    }
    ,
    EAClickShieldView.prototype.reset = function() {
        this.shieldCounter.FULL = 0,
        this.shieldCounter.LOADING = 0,
        this.shieldCounter.INTERACTION = 0,
        this.update()
    }
    ,
    EAClickShieldView.prototype.showShield = function(e) {
        switch (e) {
        case ClickShieldType.FULL:
            ++this.shieldCounter.FULL;
            break;
        case ClickShieldType.LOADING:
            ++this.shieldCounter.LOADING;
            break;
        case ClickShieldType.INTERACTION:
            ++this.shieldCounter.INTERACTION
        }
        this.update()
    }
    ,
    EAClickShieldView.prototype.hideShield = function(e) {
        switch (e) {
        case ClickShieldType.FULL:
            DebugUtils.Assert(0 <= this.shieldCounter.FULL - 1, "Hiding full shield when counter is 0."),
            1 <= this.shieldCounter.FULL && --this.shieldCounter.FULL;
            break;
        case ClickShieldType.LOADING:
            DebugUtils.Assert(0 <= this.shieldCounter.LOADING - 1, "Hiding loading shield when counter is 0."),
            1 <= this.shieldCounter.LOADING && --this.shieldCounter.LOADING;
            break;
        case ClickShieldType.INTERACTION:
            DebugUtils.Assert(0 <= this.shieldCounter.INTERACTION - 1, "Hiding interaction shield when counter is 0."),
            1 <= this.shieldCounter.INTERACTION && --this.shieldCounter.INTERACTION
        }
        this.update(),
        this.isShowing() || this._triggerActions(EAClickShieldView.Event.DISMISSED)
    }
    ,
    EAClickShieldView.prototype.isShowing = function() {
        return 0 < this.shieldCounter.FULL || 0 < this.shieldCounter.LOADING || 0 < this.shieldCounter.INTERACTION
    }
    ,
    EAClickShieldView.prototype.isInteractionShieldShowing = function() {
        return 0 < this.shieldCounter.INTERACTION
    }
    ,
    EAClickShieldView.prototype.update = function() {
        DOMKit.toggleDisplayStyle(this.__loaderIcon, 0 < this.shieldCounter.LOADING);
        var e = 0 < this.shieldCounter.INTERACTION && !(0 < this.shieldCounter.LOADING || 0 < this.shieldCounter.FULL);
        this.toggleClass("showing", this.isShowing()),
        this.toggleClass("interaction", e)
    }
    ,
    EAClickShieldView.prototype._touchStarted = function(e) {
        t.prototype._touchStarted.call(this, e),
        e.preventDefault()
    }
    ,
    EAClickShieldView.prototype._touchMoved = function(e) {
        t.prototype._touchMoved.call(this, e),
        hideKeyboard()
    }
    ,
    EAClickShieldView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        hideKeyboard()
    }
    ,
    EAClickShieldView.Shield = Object.freeze({
        FULL: ClickShieldType.FULL,
        INTERACTION: ClickShieldType.INTERACTION,
        LOADING: ClickShieldType.LOADING
    }),
    EAClickShieldView.Event = Object.freeze({
        DISMISSED: "EAClickShieldView.DISMISSED"
    }),
    EAClickShieldView
}(EATargetActionView);
EAClickShieldView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-click-shield"),
        this.__loaderIcon = document.createElement("img"),
        this.__loaderIcon.setAttribute("src", "images/loader.gif"),
        this.__loaderIcon.classList.add("loaderIcon"),
        e.appendChild(this.__loaderIcon),
        this.__root = e,
        this._generated = !0
    }
}
,
EAClickShieldView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__loaderIcon = null
}
,
EAClickShieldView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
var gClickShield = new EAClickShieldView
  , FCHeaderView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function FCHeaderView() {
        return e.call(this) || this
    }
    return __extends(FCHeaderView, e),
    FCHeaderView.prototype.renderText = function(e, t, i) {
        this.__fcLink.textContent = e,
        this.__fcLink.href = t,
        this.__easportsLink.href = i
    }
    ,
    FCHeaderView
}(EAView));
FCHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("fc-header-view"),
        this.__fcLink = document.createElement("a"),
        this.__fcLink.setAttribute("target", "_blank"),
        this.__fcLink.classList.add("fc"),
        e.appendChild(this.__fcLink),
        this.__easportsLink = document.createElement("a"),
        this.__easportsLink.setAttribute("target", "_blank"),
        this.__easportsLink.classList.add("eaSports"),
        e.appendChild(this.__easportsLink),
        this.__root = e,
        this._generated = !0
    }
}
,
FCHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fcLink = null,
    this.__easportsLink = null
}
,
FCHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var FCHeaderViewController = function(e) {
    function FCHeaderViewController() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(FCHeaderViewController, e),
    FCHeaderViewController.prototype._getViewInstanceFromData = function() {
        return new FCHeaderView
    }
    ,
    FCHeaderViewController.prototype.setup = function(e) {
        var t = e ? services.Localization.localize("preload.fifaheader.back") : "Back to FC"
          , i = e ? services.Localization.localize("preload.fifaheader.url") : "/ea-sports-fc/ultimate-team/features"
          , o = getAppMain().getConfigRepository().getConfigString(EAConfigurationRepository.KEY_RESOURCE_ROOT)
          , n = o + i;
        this.getView().renderText(t, n, o)
    }
    ,
    FCHeaderViewController
}(EAViewController)
  , _appMain = null;
function getUrlVars() {
    var i = {
        locale: null,
        language: null,
        region: null,
        variant: null
    }
      , e = window.location.href.indexOf("?");
    (0 <= e ? window.location.href.slice(e + 1).split("&") : []).forEach(function(e) {
        var t = e.split("=");
        i[t[0]] = t[1]
    });
    var t = [];
    if (i.locale)
        t = i.locale.split("_");
    else {
        var o = /\/(en-uk|en-au|fr-fr|it-it|de-de|es-es|es-mx|nl-nl|pl-pl|ru-ru|ja-jp|pt-br|cs-cz|sv-se|da-dk|no-no|nb-no|nn-no|ko-kr|zh-cn|zh-hans-cn|zh-tw|zh-hant-tw|ar-sa|tr-tr)?\/fifa\/ultimate-team\//.exec(window.location.href);
        o && (t = o[1].split("-"))
    }
    return 3 === t.length ? (i.language = t[0],
    i.variant = t[1],
    i.region = t[2]) : 2 === t.length && (i.language = t[0],
    i.region = t[1]),
    i
}
function isChrome() {
    return !0
}
function isWeb() {
    return !0
}
function isAndroid() {
    return !1
}
function isIOS() {
    return !1
}
function isIE() {
    var e = !1
      , t = window.navigator.userAgent
      , i = t.indexOf("MSIE ")
      , o = t.indexOf("Trident/");
    return (-1 < i || -1 < o) && (e = !0),
    e
}
function isPhone() {
    var e = document.getElementsByTagName("body")[0]
      , t = DOMKit.hasClass(e, enums.UIDeviceTypes.PHONE)
      , i = DOMKit.hasClass(e, enums.UIDeviceTypes.LANDSCAPE);
    return t || i ? t : isWeb() ? window.matchMedia("(max-device-width: 599px) and (orientation: portrait)").matches || window.matchMedia("(min-aspect-ratio: 32/19) and (max-device-width: 1023px) and (orientation: landscape)").matches : window.matchMedia("(orientation: portrait)").matches
}
function getUUID() {
    return "0"
}
function getAppMain() {
    return _appMain
}
function getStorage() {
    return _appMain ? _appMain.getStorage() : localStorage
}
function toJS(e) {
    DebugUtils.Assert(!1, "Native code is trying to tell the web code something: " + e)
}
function onMTXCatalog(e) {
    _appMain && _appMain.onMTXCatalog && _appMain.onMTXCatalog(JSON.parse(e))
}
function onMTXTransaction(e) {
    _appMain && _appMain.onMTXTransaction && _appMain.onMTXTransaction(JSON.parse(e))
}
function onMTXItemGranted(e) {
    _appMain && _appMain.onMTXItemGranted && _appMain.onMTXItemGranted(e)
}
function onMTXError(e) {
    _appMain && _appMain.onMTXError && _appMain.onMTXError(JSON.parse(e))
}
function onPN(e, t) {
    _appMain && _appMain.onPN && _appMain.onPN(e, t)
}
function handleOpenURL(e) {
    _appMain && _appMain.onHandleDeepLink(e)
}
function hasConnection() {
    return navigator.onLine
}
function onAppPaused() {
    _appMain && _appMain.onPause()
}
function onAppResumed() {
    _appMain && _appMain.onResume()
}
function onVisibilityChanged(e) {
    document.hidden ? onAppPaused() : onAppResumed()
}
function onAppOnline() {
    _appMain && _appMain.onOnline()
}
function onAppOffline() {
    _appMain && _appMain.onOffline()
}
function onBeforeUnload() {
    _appMain && _appMain.onDestroy()
}
function isVerboseLoggingEnabled() {
    return !!_appMain && _appMain.isVerboseLoggingEnabled()
}
function getAppVersion() {
    return _appMain ? _appMain.getAppVersion() : "0"
}
function getAppId() {
    return _appMain ? _appMain.getAppIdentifier() : "com.ea.fc.companion"
}
function getSellId() {
    return _appMain ? _appMain.getSellId() : 0
}
function getStoreId() {
    return 0
}
function getDefaultDispatcher() {
    return _appMain ? _appMain.getDefaultDispatcher() : null
}
function getKeyboardEventController() {
    return _appMain ? _appMain.getKeyboardEventController() : null
}
function getBackButtonEventController() {
    return _appMain && _appMain.getBackButtonEventController ? _appMain.getBackButtonEventController() : null
}
function onOrientationChanged() {
    _appMain && _appMain.onOrientationChanged()
}
function removeFocus() {
    document.activeElement && "body" !== document.activeElement.nodeName.toLowerCase() && document.activeElement.blur()
}
function showKeyboard() {
    !isChrome() && cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.show()
}
function hideKeyboard() {
    removeFocus(),
    !isChrome() && cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.close()
}
function onDeviceReady() {
    var e = "expire";
    console.log("onDeviceReady"),
    document.addEventListener("visibilitychange", onVisibilityChanged, !1),
    window.addEventListener("beforeunload", onBeforeUnload, !1),
    document.addEventListener("message", onMessage, !1),
    window.addEventListener("orientationchange", onOrientationChanged, !1),
    window.addEventListener("online", onAppOnline, !1),
    window.addEventListener("offline", onAppOffline, !1),
    (_appMain = new EASFCApp_FUTWeb).init();
    var i = "";
    if (window.MobileAccessibility && (window.MobileAccessibility.usePreferredTextZoom(!1),
    window.MobileAccessibility.setTextZoom(100)),
    isChrome()) {
        console.log("Check for URL params.");
        var t = HttpUtils.getParamsFromUrl(window.location.href);
        if (t.has("token")) {
            var o = getStorage();
            o.setItem(EADPIdentityManager.StorageKey.ACCESS_TOKEN, t.get("token")),
            t.remove("token"),
            t.has(e) && (o.setItem(EADPIdentityManager.StorageKey.EXPIRE, t.get(e)),
            t.remove(e))
        }
        (i = services.URL.findValidDeepLinkID(t.keys())) !== DeepLinkSection.NONE && services.URL.setDeepLinkURL(i, t.get(i))
    } else
        window.universalLinks.subscribe("launchFromLink", function(e) {
            if ((i = services.URL.findValidDeepLinkID(Object.keys(e.params))) !== DeepLinkSection.NONE) {
                services.URL.setDeepLinkURL(i, e.params[i]);
                var t = services.Authentication.getUtasSession().state;
                _appMain.isInitComplete() && t === AuthenticationState.AUTHENTICATED && services.URL.processDeepLinkURL()
            }
        })
}
function onMessage(e) {
    e.origin == window.location.origin && e && e.data && e.data.target_event && "eadp_auth_success" === e.data.target_event && e.data.code && eadpAuthSuccess(code)
}
document.addEventListener("deviceready", function onDeviceReady() {
    window.plugins || (window.plugins = {}),
    window.plugins.cordovaNimble || (window.plugins.cordovaNimble = new CordovaNimble)
}, !1),
document.addEventListener("deviceready", function onDeviceReady() {
    window.plugins || (window.plugins = {}),
    window.plugins.eadpSdk || (window.plugins.eadpSdk = new EadpSdk)
}, !1);
